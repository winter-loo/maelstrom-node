<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="981.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="981.00"> </text><svg id="frames" x="10" width="1180" total_samples="905"><g><title>maelstrom-txn`&lt;std::io::stdio::StdinLock as std::io::BufRead&gt;::read_line (1 samples, 0.11%)</title><rect x="0.0000%" y="805" width="0.1105%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`read (1 samples, 0.11%)</title><rect x="0.0000%" y="789" width="0.1105%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="799.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;maelstrom_node::messages::Message&gt; (1 samples, 0.11%)</title><rect x="0.1105%" y="805" width="0.1105%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.3605%" y="815.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;maelstrom_node::messages::MessageBody&gt; (1 samples, 0.11%)</title><rect x="0.1105%" y="789" width="0.1105%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.3605%" y="799.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;maelstrom_node::messages::MessageExtra&gt; (1 samples, 0.11%)</title><rect x="0.1105%" y="773" width="0.1105%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.3605%" y="783.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;maelstrom_node::messages::TxnRequestExtra&gt; (1 samples, 0.11%)</title><rect x="0.1105%" y="757" width="0.1105%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.3605%" y="767.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;maelstrom_node::messages::Query&gt;&gt; (1 samples, 0.11%)</title><rect x="0.1105%" y="741" width="0.1105%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.3605%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="0.1105%" y="725" width="0.1105%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="0.3605%" y="735.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;[maelstrom_node::messages::Query]&gt; (1 samples, 0.11%)</title><rect x="0.1105%" y="709" width="0.1105%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="0.3605%" y="719.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;maelstrom_node::messages::Query&gt; (1 samples, 0.11%)</title><rect x="0.1105%" y="693" width="0.1105%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="0.3605%" y="703.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.11%)</title><rect x="0.1105%" y="677" width="0.1105%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="1"/><text x="0.3605%" y="687.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.11%)</title><rect x="0.1105%" y="661" width="0.1105%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="1"/><text x="0.3605%" y="671.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.11%)</title><rect x="0.1105%" y="645" width="0.1105%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="1"/><text x="0.3605%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="0.1105%" y="629" width="0.1105%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="1"/><text x="0.3605%" y="639.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1 samples, 0.11%)</title><rect x="0.1105%" y="613" width="0.1105%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="1"/><text x="0.3605%" y="623.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1 samples, 0.11%)</title><rect x="0.1105%" y="597" width="0.1105%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="1"/><text x="0.3605%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StdinLock as std::io::BufRead&gt;::read_line (1 samples, 0.11%)</title><rect x="0.2210%" y="485" width="0.1105%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="1"/><text x="0.4710%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`read (1 samples, 0.11%)</title><rect x="0.2210%" y="469" width="0.1105%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="1"/><text x="0.4710%" y="479.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;&gt; (1 samples, 0.11%)</title><rect x="0.3315%" y="453" width="0.1105%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="1"/><text x="0.5815%" y="463.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.11%)</title><rect x="0.3315%" y="437" width="0.1105%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="1"/><text x="0.5815%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.11%)</title><rect x="0.4420%" y="421" width="0.1105%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="1"/><text x="0.6920%" y="431.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_key (1 samples, 0.11%)</title><rect x="0.5525%" y="405" width="0.1105%" height="15" fill="rgb(235,183,28)" fg:x="5" fg:w="1"/><text x="0.8025%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.11%)</title><rect x="0.5525%" y="389" width="0.1105%" height="15" fill="rgb(221,5,38)" fg:x="5" fg:w="1"/><text x="0.8025%" y="399.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.11%)</title><rect x="0.5525%" y="373" width="0.1105%" height="15" fill="rgb(247,18,42)" fg:x="5" fg:w="1"/><text x="0.8025%" y="383.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.11%)</title><rect x="0.5525%" y="357" width="0.1105%" height="15" fill="rgb(241,131,45)" fg:x="5" fg:w="1"/><text x="0.8025%" y="367.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.11%)</title><rect x="0.5525%" y="341" width="0.1105%" height="15" fill="rgb(249,31,29)" fg:x="5" fg:w="1"/><text x="0.8025%" y="351.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.11%)</title><rect x="0.5525%" y="325" width="0.1105%" height="15" fill="rgb(225,111,53)" fg:x="5" fg:w="1"/><text x="0.8025%" y="335.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.11%)</title><rect x="0.5525%" y="309" width="0.1105%" height="15" fill="rgb(238,160,17)" fg:x="5" fg:w="1"/><text x="0.8025%" y="319.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::parse_str_bytes (1 samples, 0.11%)</title><rect x="0.5525%" y="293" width="0.1105%" height="15" fill="rgb(214,148,48)" fg:x="5" fg:w="1"/><text x="0.8025%" y="303.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::skip_to_escape (1 samples, 0.11%)</title><rect x="0.5525%" y="277" width="0.1105%" height="15" fill="rgb(232,36,49)" fg:x="5" fg:w="1"/><text x="0.8025%" y="287.50"></text></g><g><title>maelstrom-txn`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.11%)</title><rect x="0.5525%" y="261" width="0.1105%" height="15" fill="rgb(209,103,24)" fg:x="5" fg:w="1"/><text x="0.8025%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.11%)</title><rect x="0.5525%" y="245" width="0.1105%" height="15" fill="rgb(229,88,8)" fg:x="5" fg:w="1"/><text x="0.8025%" y="255.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.11%)</title><rect x="0.6630%" y="309" width="0.1105%" height="15" fill="rgb(213,181,19)" fg:x="6" fg:w="1"/><text x="0.9130%" y="319.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.11%)</title><rect x="0.6630%" y="293" width="0.1105%" height="15" fill="rgb(254,191,54)" fg:x="6" fg:w="1"/><text x="0.9130%" y="303.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1 samples, 0.11%)</title><rect x="0.6630%" y="277" width="0.1105%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="1"/><text x="0.9130%" y="287.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="0.6630%" y="261" width="0.1105%" height="15" fill="rgb(233,36,39)" fg:x="6" fg:w="1"/><text x="0.9130%" y="271.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="0.6630%" y="245" width="0.1105%" height="15" fill="rgb(226,3,54)" fg:x="6" fg:w="1"/><text x="0.9130%" y="255.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="0.6630%" y="229" width="0.1105%" height="15" fill="rgb(245,192,40)" fg:x="6" fg:w="1"/><text x="0.9130%" y="239.50"></text></g><g><title>maelstrom-txn`alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="0.6630%" y="213" width="0.1105%" height="15" fill="rgb(238,167,29)" fg:x="6" fg:w="1"/><text x="0.9130%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.11%)</title><rect x="0.6630%" y="197" width="0.1105%" height="15" fill="rgb(232,182,51)" fg:x="6" fg:w="1"/><text x="0.9130%" y="207.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapAccess&lt;E&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.11%)</title><rect x="0.7735%" y="245" width="0.1105%" height="15" fill="rgb(231,60,39)" fg:x="7" fg:w="1"/><text x="1.0235%" y="255.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::TagOrContentVisitor as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.11%)</title><rect x="0.7735%" y="229" width="0.1105%" height="15" fill="rgb(208,69,12)" fg:x="7" fg:w="1"/><text x="1.0235%" y="239.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::TagOrContentVisitor as serde::de::Visitor&gt;::visit_borrowed_str (1 samples, 0.11%)</title><rect x="0.7735%" y="213" width="0.1105%" height="15" fill="rgb(235,93,37)" fg:x="7" fg:w="1"/><text x="1.0235%" y="223.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.22%)</title><rect x="0.7735%" y="293" width="0.2210%" height="15" fill="rgb(213,116,39)" fg:x="7" fg:w="2"/><text x="1.0235%" y="303.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_map (2 samples, 0.22%)</title><rect x="0.7735%" y="277" width="0.2210%" height="15" fill="rgb(222,207,29)" fg:x="7" fg:w="2"/><text x="1.0235%" y="287.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::TaggedContentVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_map (2 samples, 0.22%)</title><rect x="0.7735%" y="261" width="0.2210%" height="15" fill="rgb(206,96,30)" fg:x="7" fg:w="2"/><text x="1.0235%" y="271.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::TagOrContentVisitor as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.11%)</title><rect x="0.8840%" y="245" width="0.1105%" height="15" fill="rgb(218,138,4)" fg:x="8" fg:w="1"/><text x="1.1340%" y="255.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageExtra&gt;::deserialize (3 samples, 0.33%)</title><rect x="0.7735%" y="309" width="0.3315%" height="15" fill="rgb(250,191,14)" fg:x="7" fg:w="3"/><text x="1.0235%" y="319.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::KvReadOkExtra&gt;::deserialize (1 samples, 0.11%)</title><rect x="0.9945%" y="293" width="0.1105%" height="15" fill="rgb(239,60,40)" fg:x="9" fg:w="1"/><text x="1.2445%" y="303.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.11%)</title><rect x="0.9945%" y="277" width="0.1105%" height="15" fill="rgb(206,27,48)" fg:x="9" fg:w="1"/><text x="1.2445%" y="287.50"></text></g><g><title>maelstrom-txn`serde::__private::de::content::visit_content_map (1 samples, 0.11%)</title><rect x="0.9945%" y="261" width="0.1105%" height="15" fill="rgb(225,35,8)" fg:x="9" fg:w="1"/><text x="1.2445%" y="271.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::KvReadOkExtra&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.11%)</title><rect x="0.9945%" y="245" width="0.1105%" height="15" fill="rgb(250,213,24)" fg:x="9" fg:w="1"/><text x="1.2445%" y="255.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::MapAccess&gt;::next_value (1 samples, 0.11%)</title><rect x="0.9945%" y="229" width="0.1105%" height="15" fill="rgb(247,123,22)" fg:x="9" fg:w="1"/><text x="1.2445%" y="239.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (1 samples, 0.11%)</title><rect x="0.9945%" y="213" width="0.1105%" height="15" fill="rgb(231,138,38)" fg:x="9" fg:w="1"/><text x="1.2445%" y="223.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.11%)</title><rect x="0.9945%" y="197" width="0.1105%" height="15" fill="rgb(231,145,46)" fg:x="9" fg:w="1"/><text x="1.2445%" y="207.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.11%)</title><rect x="0.9945%" y="181" width="0.1105%" height="15" fill="rgb(251,118,11)" fg:x="9" fg:w="1"/><text x="1.2445%" y="191.50"></text></g><g><title>maelstrom-txn`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.11%)</title><rect x="0.9945%" y="165" width="0.1105%" height="15" fill="rgb(217,147,25)" fg:x="9" fg:w="1"/><text x="1.2445%" y="175.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.11%)</title><rect x="0.9945%" y="149" width="0.1105%" height="15" fill="rgb(247,81,37)" fg:x="9" fg:w="1"/><text x="1.2445%" y="159.50"></text></g><g><title>maelstrom-txn`serde::__private::de::content::visit_content_seq (1 samples, 0.11%)</title><rect x="0.9945%" y="133" width="0.1105%" height="15" fill="rgb(209,12,38)" fg:x="9" fg:w="1"/><text x="1.2445%" y="143.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.11%)</title><rect x="0.9945%" y="117" width="0.1105%" height="15" fill="rgb(227,1,9)" fg:x="9" fg:w="1"/><text x="1.2445%" y="127.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::SeqAccess&gt;::next_element (1 samples, 0.11%)</title><rect x="0.9945%" y="101" width="0.1105%" height="15" fill="rgb(248,47,43)" fg:x="9" fg:w="1"/><text x="1.2445%" y="111.50"></text></g><g><title>maelstrom-txn`serde::de::SeqAccess::next_element (1 samples, 0.11%)</title><rect x="0.9945%" y="85" width="0.1105%" height="15" fill="rgb(221,10,30)" fg:x="9" fg:w="1"/><text x="1.2445%" y="95.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::value::SeqDeserializer&lt;I,E&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.11%)</title><rect x="0.9945%" y="69" width="0.1105%" height="15" fill="rgb(210,229,1)" fg:x="9" fg:w="1"/><text x="1.2445%" y="79.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as serde::de::IntoDeserializer&lt;E&gt;&gt;::into_deserializer (1 samples, 0.11%)</title><rect x="0.9945%" y="53" width="0.1105%" height="15" fill="rgb(222,148,37)" fg:x="9" fg:w="1"/><text x="1.2445%" y="63.50"></text></g><g><title>maelstrom-txn`serde::__private::de::content::ContentDeserializer&lt;E&gt;::new (1 samples, 0.11%)</title><rect x="0.9945%" y="37" width="0.1105%" height="15" fill="rgb(234,67,33)" fg:x="9" fg:w="1"/><text x="1.2445%" y="47.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize (5 samples, 0.55%)</title><rect x="0.6630%" y="357" width="0.5525%" height="15" fill="rgb(247,98,35)" fg:x="6" fg:w="5"/><text x="0.9130%" y="367.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (5 samples, 0.55%)</title><rect x="0.6630%" y="341" width="0.5525%" height="15" fill="rgb(247,138,52)" fg:x="6" fg:w="5"/><text x="0.9130%" y="351.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.55%)</title><rect x="0.6630%" y="325" width="0.5525%" height="15" fill="rgb(213,79,30)" fg:x="6" fg:w="5"/><text x="0.9130%" y="335.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (1 samples, 0.11%)</title><rect x="1.1050%" y="309" width="0.1105%" height="15" fill="rgb(246,177,23)" fg:x="10" fg:w="1"/><text x="1.3550%" y="319.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.11%)</title><rect x="1.1050%" y="293" width="0.1105%" height="15" fill="rgb(230,62,27)" fg:x="10" fg:w="1"/><text x="1.3550%" y="303.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.11%)</title><rect x="1.1050%" y="277" width="0.1105%" height="15" fill="rgb(216,154,8)" fg:x="10" fg:w="1"/><text x="1.3550%" y="287.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (1 samples, 0.11%)</title><rect x="1.1050%" y="261" width="0.1105%" height="15" fill="rgb(244,35,45)" fg:x="10" fg:w="1"/><text x="1.3550%" y="271.50"></text></g><g><title>maelstrom-txn`serde::de::Deserializer::__deserialize_content (1 samples, 0.11%)</title><rect x="1.1050%" y="245" width="0.1105%" height="15" fill="rgb(251,115,12)" fg:x="10" fg:w="1"/><text x="1.3550%" y="255.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.11%)</title><rect x="1.1050%" y="229" width="0.1105%" height="15" fill="rgb(240,54,50)" fg:x="10" fg:w="1"/><text x="1.3550%" y="239.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.11%)</title><rect x="1.1050%" y="213" width="0.1105%" height="15" fill="rgb(233,84,52)" fg:x="10" fg:w="1"/><text x="1.3550%" y="223.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.11%)</title><rect x="1.1050%" y="197" width="0.1105%" height="15" fill="rgb(207,117,47)" fg:x="10" fg:w="1"/><text x="1.3550%" y="207.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.11%)</title><rect x="1.1050%" y="181" width="0.1105%" height="15" fill="rgb(249,43,39)" fg:x="10" fg:w="1"/><text x="1.3550%" y="191.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1 samples, 0.11%)</title><rect x="1.1050%" y="165" width="0.1105%" height="15" fill="rgb(209,38,44)" fg:x="10" fg:w="1"/><text x="1.3550%" y="175.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.11%)</title><rect x="1.1050%" y="149" width="0.1105%" height="15" fill="rgb(236,212,23)" fg:x="10" fg:w="1"/><text x="1.3550%" y="159.50"></text></g><g><title>maelstrom-txn`serde_json::de::from_str (9 samples, 0.99%)</title><rect x="0.3315%" y="485" width="0.9945%" height="15" fill="rgb(242,79,21)" fg:x="3" fg:w="9"/><text x="0.5815%" y="495.50"></text></g><g><title>maelstrom-txn`serde_json::de::from_trait (9 samples, 0.99%)</title><rect x="0.3315%" y="469" width="0.9945%" height="15" fill="rgb(211,96,35)" fg:x="3" fg:w="9"/><text x="0.5815%" y="479.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize (8 samples, 0.88%)</title><rect x="0.4420%" y="453" width="0.8840%" height="15" fill="rgb(253,215,40)" fg:x="4" fg:w="8"/><text x="0.6920%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (8 samples, 0.88%)</title><rect x="0.4420%" y="437" width="0.8840%" height="15" fill="rgb(211,81,21)" fg:x="4" fg:w="8"/><text x="0.6920%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.77%)</title><rect x="0.5525%" y="421" width="0.7735%" height="15" fill="rgb(208,190,38)" fg:x="5" fg:w="7"/><text x="0.8025%" y="431.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (6 samples, 0.66%)</title><rect x="0.6630%" y="405" width="0.6630%" height="15" fill="rgb(235,213,38)" fg:x="6" fg:w="6"/><text x="0.9130%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (6 samples, 0.66%)</title><rect x="0.6630%" y="389" width="0.6630%" height="15" fill="rgb(237,122,38)" fg:x="6" fg:w="6"/><text x="0.9130%" y="399.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6 samples, 0.66%)</title><rect x="0.6630%" y="373" width="0.6630%" height="15" fill="rgb(244,218,35)" fg:x="6" fg:w="6"/><text x="0.9130%" y="383.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.11%)</title><rect x="1.2155%" y="357" width="0.1105%" height="15" fill="rgb(240,68,47)" fg:x="11" fg:w="1"/><text x="1.4655%" y="367.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.11%)</title><rect x="1.2155%" y="341" width="0.1105%" height="15" fill="rgb(210,16,53)" fg:x="11" fg:w="1"/><text x="1.4655%" y="351.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.11%)</title><rect x="1.2155%" y="325" width="0.1105%" height="15" fill="rgb(235,124,12)" fg:x="11" fg:w="1"/><text x="1.4655%" y="335.50"></text></g><g><title>maelstrom-txn`serde::de::Visitor::visit_borrowed_str (1 samples, 0.11%)</title><rect x="1.2155%" y="309" width="0.1105%" height="15" fill="rgb(224,169,11)" fg:x="11" fg:w="1"/><text x="1.4655%" y="319.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.11%)</title><rect x="1.2155%" y="293" width="0.1105%" height="15" fill="rgb(250,166,2)" fg:x="11" fg:w="1"/><text x="1.4655%" y="303.50"></text></g><g><title>maelstrom-txn`alloc::str::_&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.11%)</title><rect x="1.2155%" y="277" width="0.1105%" height="15" fill="rgb(242,216,29)" fg:x="11" fg:w="1"/><text x="1.4655%" y="287.50"></text></g><g><title>maelstrom-txn`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.11%)</title><rect x="1.2155%" y="261" width="0.1105%" height="15" fill="rgb(230,116,27)" fg:x="11" fg:w="1"/><text x="1.4655%" y="271.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="1.2155%" y="245" width="0.1105%" height="15" fill="rgb(228,99,48)" fg:x="11" fg:w="1"/><text x="1.4655%" y="255.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1 samples, 0.11%)</title><rect x="1.2155%" y="229" width="0.1105%" height="15" fill="rgb(253,11,6)" fg:x="11" fg:w="1"/><text x="1.4655%" y="239.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="1.2155%" y="213" width="0.1105%" height="15" fill="rgb(247,143,39)" fg:x="11" fg:w="1"/><text x="1.4655%" y="223.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="1.2155%" y="197" width="0.1105%" height="15" fill="rgb(236,97,10)" fg:x="11" fg:w="1"/><text x="1.4655%" y="207.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::MessageBody&gt;::serialize (1 samples, 0.11%)</title><rect x="1.3260%" y="373" width="0.1105%" height="15" fill="rgb(233,208,19)" fg:x="12" fg:w="1"/><text x="1.5760%" y="383.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (1 samples, 0.11%)</title><rect x="1.3260%" y="357" width="0.1105%" height="15" fill="rgb(216,164,2)" fg:x="12" fg:w="1"/><text x="1.5760%" y="367.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.11%)</title><rect x="1.3260%" y="341" width="0.1105%" height="15" fill="rgb(220,129,5)" fg:x="12" fg:w="1"/><text x="1.5760%" y="351.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for core::option::Option&lt;T&gt;&gt;::serialize (1 samples, 0.11%)</title><rect x="1.3260%" y="325" width="0.1105%" height="15" fill="rgb(242,17,10)" fg:x="12" fg:w="1"/><text x="1.5760%" y="335.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_some (1 samples, 0.11%)</title><rect x="1.3260%" y="309" width="0.1105%" height="15" fill="rgb(242,107,0)" fg:x="12" fg:w="1"/><text x="1.5760%" y="319.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for u64&gt;::serialize (1 samples, 0.11%)</title><rect x="1.3260%" y="293" width="0.1105%" height="15" fill="rgb(251,28,31)" fg:x="12" fg:w="1"/><text x="1.5760%" y="303.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (1 samples, 0.11%)</title><rect x="1.3260%" y="277" width="0.1105%" height="15" fill="rgb(233,223,10)" fg:x="12" fg:w="1"/><text x="1.5760%" y="287.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_u64 (1 samples, 0.11%)</title><rect x="1.3260%" y="261" width="0.1105%" height="15" fill="rgb(215,21,27)" fg:x="12" fg:w="1"/><text x="1.5760%" y="271.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.11%)</title><rect x="1.3260%" y="245" width="0.1105%" height="15" fill="rgb(232,23,21)" fg:x="12" fg:w="1"/><text x="1.5760%" y="255.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_string (3 samples, 0.33%)</title><rect x="1.3260%" y="485" width="0.3315%" height="15" fill="rgb(244,5,23)" fg:x="12" fg:w="3"/><text x="1.5760%" y="495.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_vec (3 samples, 0.33%)</title><rect x="1.3260%" y="469" width="0.3315%" height="15" fill="rgb(226,81,46)" fg:x="12" fg:w="3"/><text x="1.5760%" y="479.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_writer (3 samples, 0.33%)</title><rect x="1.3260%" y="453" width="0.3315%" height="15" fill="rgb(247,70,30)" fg:x="12" fg:w="3"/><text x="1.5760%" y="463.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::Message&gt;::serialize (3 samples, 0.33%)</title><rect x="1.3260%" y="437" width="0.3315%" height="15" fill="rgb(212,68,19)" fg:x="12" fg:w="3"/><text x="1.5760%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.33%)</title><rect x="1.3260%" y="421" width="0.3315%" height="15" fill="rgb(240,187,13)" fg:x="12" fg:w="3"/><text x="1.5760%" y="431.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (3 samples, 0.33%)</title><rect x="1.3260%" y="405" width="0.3315%" height="15" fill="rgb(223,113,26)" fg:x="12" fg:w="3"/><text x="1.5760%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.33%)</title><rect x="1.3260%" y="389" width="0.3315%" height="15" fill="rgb(206,192,2)" fg:x="12" fg:w="3"/><text x="1.5760%" y="399.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (2 samples, 0.22%)</title><rect x="1.4365%" y="373" width="0.2210%" height="15" fill="rgb(241,108,4)" fg:x="13" fg:w="2"/><text x="1.6865%" y="383.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.22%)</title><rect x="1.4365%" y="357" width="0.2210%" height="15" fill="rgb(247,173,49)" fg:x="13" fg:w="2"/><text x="1.6865%" y="367.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (2 samples, 0.22%)</title><rect x="1.4365%" y="341" width="0.2210%" height="15" fill="rgb(224,114,35)" fg:x="13" fg:w="2"/><text x="1.6865%" y="351.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (1 samples, 0.11%)</title><rect x="1.5470%" y="325" width="0.1105%" height="15" fill="rgb(245,159,27)" fg:x="14" fg:w="1"/><text x="1.7970%" y="335.50"></text></g><g><title>maelstrom-txn`std::io::stdio::_eprint (1 samples, 0.11%)</title><rect x="1.6575%" y="485" width="0.1105%" height="15" fill="rgb(245,172,44)" fg:x="15" fg:w="1"/><text x="1.9075%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (1 samples, 0.11%)</title><rect x="1.6575%" y="469" width="0.1105%" height="15" fill="rgb(236,23,11)" fg:x="15" fg:w="1"/><text x="1.9075%" y="479.50"></text></g><g><title>maelstrom-txn`core::fmt::write (1 samples, 0.11%)</title><rect x="1.6575%" y="453" width="0.1105%" height="15" fill="rgb(205,117,38)" fg:x="15" fg:w="1"/><text x="1.9075%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.11%)</title><rect x="1.6575%" y="437" width="0.1105%" height="15" fill="rgb(237,72,25)" fg:x="15" fg:w="1"/><text x="1.9075%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="1.6575%" y="421" width="0.1105%" height="15" fill="rgb(244,70,9)" fg:x="15" fg:w="1"/><text x="1.9075%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.11%)</title><rect x="1.6575%" y="405" width="0.1105%" height="15" fill="rgb(217,125,39)" fg:x="15" fg:w="1"/><text x="1.9075%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 1.66%)</title><rect x="0.2210%" y="677" width="1.6575%" height="15" fill="rgb(235,36,10)" fg:x="2" fg:w="15"/><text x="0.4710%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 1.66%)</title><rect x="0.2210%" y="661" width="1.6575%" height="15" fill="rgb(251,123,47)" fg:x="2" fg:w="15"/><text x="0.4710%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 1.66%)</title><rect x="0.2210%" y="645" width="1.6575%" height="15" fill="rgb(221,13,13)" fg:x="2" fg:w="15"/><text x="0.4710%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 1.66%)</title><rect x="0.2210%" y="629" width="1.6575%" height="15" fill="rgb(238,131,9)" fg:x="2" fg:w="15"/><text x="0.4710%" y="639.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (15 samples, 1.66%)</title><rect x="0.2210%" y="613" width="1.6575%" height="15" fill="rgb(211,50,8)" fg:x="2" fg:w="15"/><text x="0.4710%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (15 samples, 1.66%)</title><rect x="0.2210%" y="597" width="1.6575%" height="15" fill="rgb(245,182,24)" fg:x="2" fg:w="15"/><text x="0.4710%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (15 samples, 1.66%)</title><rect x="0.2210%" y="581" width="1.6575%" height="15" fill="rgb(242,14,37)" fg:x="2" fg:w="15"/><text x="0.4710%" y="591.50"></text></g><g><title>maelstrom-txn`core::iter::adapters::filter::filter_fold::_{{closure}} (15 samples, 1.66%)</title><rect x="0.2210%" y="565" width="1.6575%" height="15" fill="rgb(246,228,12)" fg:x="2" fg:w="15"/><text x="0.4710%" y="575.50"></text></g><g><title>maelstrom-txn`core::iter::adapters::map::map_fold::_{{closure}} (15 samples, 1.66%)</title><rect x="0.2210%" y="549" width="1.6575%" height="15" fill="rgb(213,55,15)" fg:x="2" fg:w="15"/><text x="0.4710%" y="559.50"></text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Transactor::transact::_{{closure}} (15 samples, 1.66%)</title><rect x="0.2210%" y="533" width="1.6575%" height="15" fill="rgb(209,9,3)" fg:x="2" fg:w="15"/><text x="0.4710%" y="543.50"></text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Transactor::load_chunk (15 samples, 1.66%)</title><rect x="0.2210%" y="517" width="1.6575%" height="15" fill="rgb(230,59,30)" fg:x="2" fg:w="15"/><text x="0.4710%" y="527.50"></text></g><g><title>maelstrom-txn`maelstrom_node::node::Node::sync_rpc (15 samples, 1.66%)</title><rect x="0.2210%" y="501" width="1.6575%" height="15" fill="rgb(209,121,21)" fg:x="2" fg:w="15"/><text x="0.4710%" y="511.50"></text></g><g><title>maelstrom-txn`std::io::stdio::_print (1 samples, 0.11%)</title><rect x="1.7680%" y="485" width="0.1105%" height="15" fill="rgb(220,109,13)" fg:x="16" fg:w="1"/><text x="2.0180%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.11%)</title><rect x="1.7680%" y="469" width="0.1105%" height="15" fill="rgb(232,18,1)" fg:x="16" fg:w="1"/><text x="2.0180%" y="479.50"></text></g><g><title>maelstrom-txn`core::fmt::write (1 samples, 0.11%)</title><rect x="1.7680%" y="453" width="0.1105%" height="15" fill="rgb(215,41,42)" fg:x="16" fg:w="1"/><text x="2.0180%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="1.7680%" y="437" width="0.1105%" height="15" fill="rgb(224,123,36)" fg:x="16" fg:w="1"/><text x="2.0180%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.11%)</title><rect x="1.7680%" y="421" width="0.1105%" height="15" fill="rgb(240,125,3)" fg:x="16" fg:w="1"/><text x="2.0180%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.11%)</title><rect x="1.7680%" y="405" width="0.1105%" height="15" fill="rgb(205,98,50)" fg:x="16" fg:w="1"/><text x="2.0180%" y="415.50"></text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Transactor::next_id (1 samples, 0.11%)</title><rect x="1.8785%" y="629" width="0.1105%" height="15" fill="rgb(205,185,37)" fg:x="17" fg:w="1"/><text x="2.1285%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StdinLock as std::io::BufRead&gt;::read_line (1 samples, 0.11%)</title><rect x="1.9890%" y="597" width="0.1105%" height="15" fill="rgb(238,207,15)" fg:x="18" fg:w="1"/><text x="2.2390%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`read (1 samples, 0.11%)</title><rect x="1.9890%" y="581" width="0.1105%" height="15" fill="rgb(213,199,42)" fg:x="18" fg:w="1"/><text x="2.2390%" y="591.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_key (1 samples, 0.11%)</title><rect x="2.0994%" y="517" width="0.1105%" height="15" fill="rgb(235,201,11)" fg:x="19" fg:w="1"/><text x="2.3494%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.11%)</title><rect x="2.0994%" y="501" width="0.1105%" height="15" fill="rgb(207,46,11)" fg:x="19" fg:w="1"/><text x="2.3494%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.11%)</title><rect x="2.0994%" y="485" width="0.1105%" height="15" fill="rgb(241,35,35)" fg:x="19" fg:w="1"/><text x="2.3494%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.11%)</title><rect x="2.0994%" y="469" width="0.1105%" height="15" fill="rgb(243,32,47)" fg:x="19" fg:w="1"/><text x="2.3494%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.11%)</title><rect x="2.0994%" y="453" width="0.1105%" height="15" fill="rgb(247,202,23)" fg:x="19" fg:w="1"/><text x="2.3494%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.11%)</title><rect x="2.0994%" y="437" width="0.1105%" height="15" fill="rgb(219,102,11)" fg:x="19" fg:w="1"/><text x="2.3494%" y="447.50"></text></g><g><title>maelstrom-txn`serde::de::Visitor::visit_borrowed_str (1 samples, 0.11%)</title><rect x="2.0994%" y="421" width="0.1105%" height="15" fill="rgb(243,110,44)" fg:x="19" fg:w="1"/><text x="2.3494%" y="431.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.11%)</title><rect x="2.0994%" y="405" width="0.1105%" height="15" fill="rgb(222,74,54)" fg:x="19" fg:w="1"/><text x="2.3494%" y="415.50"></text></g><g><title>maelstrom-txn`core::str::traits::_&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.11%)</title><rect x="2.0994%" y="389" width="0.1105%" height="15" fill="rgb(216,99,12)" fg:x="19" fg:w="1"/><text x="2.3494%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (1 samples, 0.11%)</title><rect x="2.0994%" y="373" width="0.1105%" height="15" fill="rgb(226,22,26)" fg:x="19" fg:w="1"/><text x="2.3494%" y="383.50"></text></g><g><title>maelstrom-txn`serde_json::de::from_str (2 samples, 0.22%)</title><rect x="2.0994%" y="597" width="0.2210%" height="15" fill="rgb(217,163,10)" fg:x="19" fg:w="2"/><text x="2.3494%" y="607.50"></text></g><g><title>maelstrom-txn`serde_json::de::from_trait (2 samples, 0.22%)</title><rect x="2.0994%" y="581" width="0.2210%" height="15" fill="rgb(213,25,53)" fg:x="19" fg:w="2"/><text x="2.3494%" y="591.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize (2 samples, 0.22%)</title><rect x="2.0994%" y="565" width="0.2210%" height="15" fill="rgb(252,105,26)" fg:x="19" fg:w="2"/><text x="2.3494%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.22%)</title><rect x="2.0994%" y="549" width="0.2210%" height="15" fill="rgb(220,39,43)" fg:x="19" fg:w="2"/><text x="2.3494%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.22%)</title><rect x="2.0994%" y="533" width="0.2210%" height="15" fill="rgb(229,68,48)" fg:x="19" fg:w="2"/><text x="2.3494%" y="543.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (1 samples, 0.11%)</title><rect x="2.2099%" y="517" width="0.1105%" height="15" fill="rgb(252,8,32)" fg:x="20" fg:w="1"/><text x="2.4599%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.11%)</title><rect x="2.2099%" y="501" width="0.1105%" height="15" fill="rgb(223,20,43)" fg:x="20" fg:w="1"/><text x="2.4599%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.11%)</title><rect x="2.2099%" y="485" width="0.1105%" height="15" fill="rgb(229,81,49)" fg:x="20" fg:w="1"/><text x="2.4599%" y="495.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.11%)</title><rect x="2.2099%" y="469" width="0.1105%" height="15" fill="rgb(236,28,36)" fg:x="20" fg:w="1"/><text x="2.4599%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.11%)</title><rect x="2.2099%" y="453" width="0.1105%" height="15" fill="rgb(249,185,26)" fg:x="20" fg:w="1"/><text x="2.4599%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.11%)</title><rect x="2.2099%" y="437" width="0.1105%" height="15" fill="rgb(249,174,33)" fg:x="20" fg:w="1"/><text x="2.4599%" y="447.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (1 samples, 0.11%)</title><rect x="2.3204%" y="469" width="0.1105%" height="15" fill="rgb(233,201,37)" fg:x="21" fg:w="1"/><text x="2.5704%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.11%)</title><rect x="2.3204%" y="453" width="0.1105%" height="15" fill="rgb(221,78,26)" fg:x="21" fg:w="1"/><text x="2.5704%" y="463.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for core::option::Option&lt;T&gt;&gt;::serialize (1 samples, 0.11%)</title><rect x="2.3204%" y="437" width="0.1105%" height="15" fill="rgb(250,127,30)" fg:x="21" fg:w="1"/><text x="2.5704%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_some (1 samples, 0.11%)</title><rect x="2.3204%" y="421" width="0.1105%" height="15" fill="rgb(230,49,44)" fg:x="21" fg:w="1"/><text x="2.5704%" y="431.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for u64&gt;::serialize (1 samples, 0.11%)</title><rect x="2.3204%" y="405" width="0.1105%" height="15" fill="rgb(229,67,23)" fg:x="21" fg:w="1"/><text x="2.5704%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (1 samples, 0.11%)</title><rect x="2.3204%" y="389" width="0.1105%" height="15" fill="rgb(249,83,47)" fg:x="21" fg:w="1"/><text x="2.5704%" y="399.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_u64 (1 samples, 0.11%)</title><rect x="2.3204%" y="373" width="0.1105%" height="15" fill="rgb(215,43,3)" fg:x="21" fg:w="1"/><text x="2.5704%" y="383.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_string (2 samples, 0.22%)</title><rect x="2.3204%" y="597" width="0.2210%" height="15" fill="rgb(238,154,13)" fg:x="21" fg:w="2"/><text x="2.5704%" y="607.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_vec (2 samples, 0.22%)</title><rect x="2.3204%" y="581" width="0.2210%" height="15" fill="rgb(219,56,2)" fg:x="21" fg:w="2"/><text x="2.5704%" y="591.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_writer (2 samples, 0.22%)</title><rect x="2.3204%" y="565" width="0.2210%" height="15" fill="rgb(233,0,4)" fg:x="21" fg:w="2"/><text x="2.5704%" y="575.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::Message&gt;::serialize (2 samples, 0.22%)</title><rect x="2.3204%" y="549" width="0.2210%" height="15" fill="rgb(235,30,7)" fg:x="21" fg:w="2"/><text x="2.5704%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.22%)</title><rect x="2.3204%" y="533" width="0.2210%" height="15" fill="rgb(250,79,13)" fg:x="21" fg:w="2"/><text x="2.5704%" y="543.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (2 samples, 0.22%)</title><rect x="2.3204%" y="517" width="0.2210%" height="15" fill="rgb(211,146,34)" fg:x="21" fg:w="2"/><text x="2.5704%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.22%)</title><rect x="2.3204%" y="501" width="0.2210%" height="15" fill="rgb(228,22,38)" fg:x="21" fg:w="2"/><text x="2.5704%" y="511.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::MessageBody&gt;::serialize (2 samples, 0.22%)</title><rect x="2.3204%" y="485" width="0.2210%" height="15" fill="rgb(235,168,5)" fg:x="21" fg:w="2"/><text x="2.5704%" y="495.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.11%)</title><rect x="2.4309%" y="469" width="0.1105%" height="15" fill="rgb(221,155,16)" fg:x="22" fg:w="1"/><text x="2.6809%" y="479.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::MessageExtra&gt;::serialize (1 samples, 0.11%)</title><rect x="2.4309%" y="453" width="0.1105%" height="15" fill="rgb(215,215,53)" fg:x="22" fg:w="1"/><text x="2.6809%" y="463.50"></text></g><g><title>maelstrom-txn`serde::__private::ser::serialize_tagged_newtype (1 samples, 0.11%)</title><rect x="2.4309%" y="437" width="0.1105%" height="15" fill="rgb(223,4,10)" fg:x="22" fg:w="1"/><text x="2.6809%" y="447.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::KvWriteExtra&gt;::serialize (1 samples, 0.11%)</title><rect x="2.4309%" y="421" width="0.1105%" height="15" fill="rgb(234,103,6)" fg:x="22" fg:w="1"/><text x="2.6809%" y="431.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::ser::FlatMapSerializeStruct&lt;M&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.11%)</title><rect x="2.4309%" y="405" width="0.1105%" height="15" fill="rgb(227,97,0)" fg:x="22" fg:w="1"/><text x="2.6809%" y="415.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (1 samples, 0.11%)</title><rect x="2.4309%" y="389" width="0.1105%" height="15" fill="rgb(234,150,53)" fg:x="22" fg:w="1"/><text x="2.6809%" y="399.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.11%)</title><rect x="2.4309%" y="373" width="0.1105%" height="15" fill="rgb(228,201,54)" fg:x="22" fg:w="1"/><text x="2.6809%" y="383.50"></text></g><g><title>maelstrom-txn`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.11%)</title><rect x="2.4309%" y="357" width="0.1105%" height="15" fill="rgb(222,22,37)" fg:x="22" fg:w="1"/><text x="2.6809%" y="367.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (1 samples, 0.11%)</title><rect x="2.4309%" y="341" width="0.1105%" height="15" fill="rgb(237,53,32)" fg:x="22" fg:w="1"/><text x="2.6809%" y="351.50"></text></g><g><title>maelstrom-txn`serde::ser::Serializer::collect_seq (1 samples, 0.11%)</title><rect x="2.4309%" y="325" width="0.1105%" height="15" fill="rgb(233,25,53)" fg:x="22" fg:w="1"/><text x="2.6809%" y="335.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.11%)</title><rect x="2.4309%" y="309" width="0.1105%" height="15" fill="rgb(210,40,34)" fg:x="22" fg:w="1"/><text x="2.6809%" y="319.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.11%)</title><rect x="2.4309%" y="293" width="0.1105%" height="15" fill="rgb(241,220,44)" fg:x="22" fg:w="1"/><text x="2.6809%" y="303.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (1 samples, 0.11%)</title><rect x="2.4309%" y="277" width="0.1105%" height="15" fill="rgb(235,28,35)" fg:x="22" fg:w="1"/><text x="2.6809%" y="287.50"></text></g><g><title>maelstrom-txn`serde::ser::Serializer::collect_seq::_{{closure}} (1 samples, 0.11%)</title><rect x="2.4309%" y="261" width="0.1105%" height="15" fill="rgb(210,56,17)" fg:x="22" fg:w="1"/><text x="2.6809%" y="271.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (1 samples, 0.11%)</title><rect x="2.4309%" y="245" width="0.1105%" height="15" fill="rgb(224,130,29)" fg:x="22" fg:w="1"/><text x="2.6809%" y="255.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.11%)</title><rect x="2.4309%" y="229" width="0.1105%" height="15" fill="rgb(235,212,8)" fg:x="22" fg:w="1"/><text x="2.6809%" y="239.50"></text></g><g><title>maelstrom-txn`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.11%)</title><rect x="2.4309%" y="213" width="0.1105%" height="15" fill="rgb(223,33,50)" fg:x="22" fg:w="1"/><text x="2.6809%" y="223.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::number::Number as serde::ser::Serialize&gt;::serialize (1 samples, 0.11%)</title><rect x="2.4309%" y="197" width="0.1105%" height="15" fill="rgb(219,149,13)" fg:x="22" fg:w="1"/><text x="2.6809%" y="207.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (1 samples, 0.11%)</title><rect x="2.4309%" y="181" width="0.1105%" height="15" fill="rgb(250,156,29)" fg:x="22" fg:w="1"/><text x="2.6809%" y="191.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_u64 (1 samples, 0.11%)</title><rect x="2.4309%" y="165" width="0.1105%" height="15" fill="rgb(216,193,19)" fg:x="22" fg:w="1"/><text x="2.6809%" y="175.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.11%)</title><rect x="2.4309%" y="149" width="0.1105%" height="15" fill="rgb(216,135,14)" fg:x="22" fg:w="1"/><text x="2.6809%" y="159.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.11%)</title><rect x="2.4309%" y="133" width="0.1105%" height="15" fill="rgb(241,47,5)" fg:x="22" fg:w="1"/><text x="2.6809%" y="143.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="2.4309%" y="117" width="0.1105%" height="15" fill="rgb(233,42,35)" fg:x="22" fg:w="1"/><text x="2.6809%" y="127.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="2.4309%" y="101" width="0.1105%" height="15" fill="rgb(231,13,6)" fg:x="22" fg:w="1"/><text x="2.6809%" y="111.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.11%)</title><rect x="2.4309%" y="85" width="0.1105%" height="15" fill="rgb(207,181,40)" fg:x="22" fg:w="1"/><text x="2.6809%" y="95.50"></text></g><g><title>maelstrom-txn`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (22 samples, 2.43%)</title><rect x="0.2210%" y="741" width="2.4309%" height="15" fill="rgb(254,173,49)" fg:x="2" fg:w="22"/><text x="0.4710%" y="751.50">ma..</text></g><g><title>maelstrom-txn`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (22 samples, 2.43%)</title><rect x="0.2210%" y="725" width="2.4309%" height="15" fill="rgb(221,1,38)" fg:x="2" fg:w="22"/><text x="0.4710%" y="735.50">ma..</text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::for_each (22 samples, 2.43%)</title><rect x="0.2210%" y="709" width="2.4309%" height="15" fill="rgb(206,124,46)" fg:x="2" fg:w="22"/><text x="0.4710%" y="719.50">ma..</text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 2.43%)</title><rect x="0.2210%" y="693" width="2.4309%" height="15" fill="rgb(249,21,11)" fg:x="2" fg:w="22"/><text x="0.4710%" y="703.50">ma..</text></g><g><title>maelstrom-txn`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.77%)</title><rect x="1.8785%" y="677" width="0.7735%" height="15" fill="rgb(222,201,40)" fg:x="17" fg:w="7"/><text x="2.1285%" y="687.50"></text></g><g><title>maelstrom-txn`core::iter::adapters::map::map_fold::_{{closure}} (7 samples, 0.77%)</title><rect x="1.8785%" y="661" width="0.7735%" height="15" fill="rgb(235,61,29)" fg:x="17" fg:w="7"/><text x="2.1285%" y="671.50"></text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Transactor::transact::_{{closure}} (7 samples, 0.77%)</title><rect x="1.8785%" y="645" width="0.7735%" height="15" fill="rgb(219,207,3)" fg:x="17" fg:w="7"/><text x="2.1285%" y="655.50"></text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Transactor::save_chunk (6 samples, 0.66%)</title><rect x="1.9890%" y="629" width="0.6630%" height="15" fill="rgb(222,56,46)" fg:x="18" fg:w="6"/><text x="2.2390%" y="639.50"></text></g><g><title>maelstrom-txn`maelstrom_node::node::Node::sync_rpc (6 samples, 0.66%)</title><rect x="1.9890%" y="613" width="0.6630%" height="15" fill="rgb(239,76,54)" fg:x="18" fg:w="6"/><text x="2.2390%" y="623.50"></text></g><g><title>maelstrom-txn`std::io::stdio::_print (1 samples, 0.11%)</title><rect x="2.5414%" y="597" width="0.1105%" height="15" fill="rgb(231,124,27)" fg:x="23" fg:w="1"/><text x="2.7914%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.11%)</title><rect x="2.5414%" y="581" width="0.1105%" height="15" fill="rgb(249,195,6)" fg:x="23" fg:w="1"/><text x="2.7914%" y="591.50"></text></g><g><title>maelstrom-txn`core::fmt::write (1 samples, 0.11%)</title><rect x="2.5414%" y="565" width="0.1105%" height="15" fill="rgb(237,174,47)" fg:x="23" fg:w="1"/><text x="2.7914%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.11%)</title><rect x="2.5414%" y="549" width="0.1105%" height="15" fill="rgb(206,201,31)" fg:x="23" fg:w="1"/><text x="2.7914%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="2.5414%" y="533" width="0.1105%" height="15" fill="rgb(231,57,52)" fg:x="23" fg:w="1"/><text x="2.7914%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.11%)</title><rect x="2.5414%" y="517" width="0.1105%" height="15" fill="rgb(248,177,22)" fg:x="23" fg:w="1"/><text x="2.7914%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.11%)</title><rect x="2.5414%" y="501" width="0.1105%" height="15" fill="rgb(215,211,37)" fg:x="23" fg:w="1"/><text x="2.7914%" y="511.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::collect (23 samples, 2.54%)</title><rect x="0.2210%" y="757" width="2.5414%" height="15" fill="rgb(241,128,51)" fg:x="2" fg:w="23"/><text x="0.4710%" y="767.50">ma..</text></g><g><title>maelstrom-txn`&lt;std::hash::random::RandomState as core::default::Default&gt;::default (1 samples, 0.11%)</title><rect x="2.6519%" y="741" width="0.1105%" height="15" fill="rgb(227,165,31)" fg:x="24" fg:w="1"/><text x="2.9019%" y="751.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,alloc::string::String&gt;&gt; (3 samples, 0.33%)</title><rect x="2.7624%" y="757" width="0.3315%" height="15" fill="rgb(228,167,24)" fg:x="25" fg:w="3"/><text x="3.0124%" y="767.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;usize,alloc::string::String,std::hash::random::RandomState&gt;&gt; (3 samples, 0.33%)</title><rect x="2.7624%" y="741" width="0.3315%" height="15" fill="rgb(228,143,12)" fg:x="25" fg:w="3"/><text x="3.0124%" y="751.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(usize,alloc::string::String)&gt;&gt; (3 samples, 0.33%)</title><rect x="2.7624%" y="725" width="0.3315%" height="15" fill="rgb(249,149,8)" fg:x="25" fg:w="3"/><text x="3.0124%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.33%)</title><rect x="2.7624%" y="709" width="0.3315%" height="15" fill="rgb(243,35,44)" fg:x="25" fg:w="3"/><text x="3.0124%" y="719.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::drop_inner_table (3 samples, 0.33%)</title><rect x="2.7624%" y="693" width="0.3315%" height="15" fill="rgb(246,89,9)" fg:x="25" fg:w="3"/><text x="3.0124%" y="703.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::drop_elements (3 samples, 0.33%)</title><rect x="2.7624%" y="677" width="0.3315%" height="15" fill="rgb(233,213,13)" fg:x="25" fg:w="3"/><text x="3.0124%" y="687.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;(usize,alloc::string::String)&gt; (2 samples, 0.22%)</title><rect x="2.8729%" y="661" width="0.2210%" height="15" fill="rgb(233,141,41)" fg:x="26" fg:w="2"/><text x="3.1229%" y="671.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.22%)</title><rect x="2.8729%" y="645" width="0.2210%" height="15" fill="rgb(239,167,4)" fg:x="26" fg:w="2"/><text x="3.1229%" y="655.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.22%)</title><rect x="2.8729%" y="629" width="0.2210%" height="15" fill="rgb(209,217,16)" fg:x="26" fg:w="2"/><text x="3.1229%" y="639.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.22%)</title><rect x="2.8729%" y="613" width="0.2210%" height="15" fill="rgb(219,88,35)" fg:x="26" fg:w="2"/><text x="3.1229%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.22%)</title><rect x="2.8729%" y="597" width="0.2210%" height="15" fill="rgb(220,193,23)" fg:x="26" fg:w="2"/><text x="3.1229%" y="607.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2 samples, 0.22%)</title><rect x="2.8729%" y="581" width="0.2210%" height="15" fill="rgb(230,90,52)" fg:x="26" fg:w="2"/><text x="3.1229%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.11%)</title><rect x="2.9834%" y="565" width="0.1105%" height="15" fill="rgb(252,106,19)" fg:x="27" fg:w="1"/><text x="3.2334%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.11%)</title><rect x="2.9834%" y="549" width="0.1105%" height="15" fill="rgb(206,74,20)" fg:x="27" fg:w="1"/><text x="3.2334%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="3.3149%" y="725" width="0.1105%" height="15" fill="rgb(230,138,44)" fg:x="30" fg:w="1"/><text x="3.5649%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.11%)</title><rect x="3.3149%" y="709" width="0.1105%" height="15" fill="rgb(235,182,43)" fg:x="30" fg:w="1"/><text x="3.5649%" y="719.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.11%)</title><rect x="3.4254%" y="565" width="0.1105%" height="15" fill="rgb(242,16,51)" fg:x="31" fg:w="1"/><text x="3.6754%" y="575.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1 samples, 0.11%)</title><rect x="3.4254%" y="549" width="0.1105%" height="15" fill="rgb(248,9,4)" fg:x="31" fg:w="1"/><text x="3.6754%" y="559.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::mem::replace (1 samples, 0.11%)</title><rect x="3.4254%" y="533" width="0.1105%" height="15" fill="rgb(210,31,22)" fg:x="31" fg:w="1"/><text x="3.6754%" y="543.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1 samples, 0.11%)</title><rect x="3.4254%" y="517" width="0.1105%" height="15" fill="rgb(239,54,39)" fg:x="31" fg:w="1"/><text x="3.6754%" y="527.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (1 samples, 0.11%)</title><rect x="3.4254%" y="501" width="0.1105%" height="15" fill="rgb(230,99,41)" fg:x="31" fg:w="1"/><text x="3.6754%" y="511.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (1 samples, 0.11%)</title><rect x="3.4254%" y="485" width="0.1105%" height="15" fill="rgb(253,106,12)" fg:x="31" fg:w="1"/><text x="3.6754%" y="495.50"></text></g><g><title>maelstrom-txn`core::alloc::layout::Layout::from_size_align_unchecked::precondition_check (1 samples, 0.11%)</title><rect x="3.4254%" y="469" width="0.1105%" height="15" fill="rgb(213,46,41)" fg:x="31" fg:w="1"/><text x="3.6754%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.22%)</title><rect x="3.6464%" y="517" width="0.2210%" height="15" fill="rgb(215,133,35)" fg:x="33" fg:w="2"/><text x="3.8964%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.11%)</title><rect x="3.8674%" y="469" width="0.1105%" height="15" fill="rgb(213,28,5)" fg:x="35" fg:w="1"/><text x="4.1174%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.11%)</title><rect x="3.8674%" y="453" width="0.1105%" height="15" fill="rgb(215,77,49)" fg:x="35" fg:w="1"/><text x="4.1174%" y="463.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.55%)</title><rect x="3.5359%" y="549" width="0.5525%" height="15" fill="rgb(248,100,22)" fg:x="32" fg:w="5"/><text x="3.7859%" y="559.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.55%)</title><rect x="3.5359%" y="533" width="0.5525%" height="15" fill="rgb(208,67,9)" fg:x="32" fg:w="5"/><text x="3.7859%" y="543.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.22%)</title><rect x="3.8674%" y="517" width="0.2210%" height="15" fill="rgb(219,133,21)" fg:x="35" fg:w="2"/><text x="4.1174%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.22%)</title><rect x="3.8674%" y="501" width="0.2210%" height="15" fill="rgb(246,46,29)" fg:x="35" fg:w="2"/><text x="4.1174%" y="511.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2 samples, 0.22%)</title><rect x="3.8674%" y="485" width="0.2210%" height="15" fill="rgb(246,185,52)" fg:x="35" fg:w="2"/><text x="4.1174%" y="495.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1 samples, 0.11%)</title><rect x="3.9779%" y="469" width="0.1105%" height="15" fill="rgb(252,136,11)" fg:x="36" fg:w="1"/><text x="4.2279%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.22%)</title><rect x="4.0884%" y="453" width="0.2210%" height="15" fill="rgb(219,138,53)" fg:x="37" fg:w="2"/><text x="4.3384%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.22%)</title><rect x="4.0884%" y="437" width="0.2210%" height="15" fill="rgb(211,51,23)" fg:x="37" fg:w="2"/><text x="4.3384%" y="447.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;maelstrom_node::messages::Message&gt; (9 samples, 0.99%)</title><rect x="3.4254%" y="725" width="0.9945%" height="15" fill="rgb(247,221,28)" fg:x="31" fg:w="9"/><text x="3.6754%" y="735.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;maelstrom_node::messages::MessageBody&gt; (9 samples, 0.99%)</title><rect x="3.4254%" y="709" width="0.9945%" height="15" fill="rgb(251,222,45)" fg:x="31" fg:w="9"/><text x="3.6754%" y="719.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;maelstrom_node::messages::MessageExtra&gt; (9 samples, 0.99%)</title><rect x="3.4254%" y="693" width="0.9945%" height="15" fill="rgb(217,162,53)" fg:x="31" fg:w="9"/><text x="3.6754%" y="703.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;maelstrom_node::messages::KvCasData&gt; (9 samples, 0.99%)</title><rect x="3.4254%" y="677" width="0.9945%" height="15" fill="rgb(229,93,14)" fg:x="31" fg:w="9"/><text x="3.6754%" y="687.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.99%)</title><rect x="3.4254%" y="661" width="0.9945%" height="15" fill="rgb(209,67,49)" fg:x="31" fg:w="9"/><text x="3.6754%" y="671.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.99%)</title><rect x="3.4254%" y="645" width="0.9945%" height="15" fill="rgb(213,87,29)" fg:x="31" fg:w="9"/><text x="3.6754%" y="655.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.99%)</title><rect x="3.4254%" y="629" width="0.9945%" height="15" fill="rgb(205,151,52)" fg:x="31" fg:w="9"/><text x="3.6754%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.99%)</title><rect x="3.4254%" y="613" width="0.9945%" height="15" fill="rgb(253,215,39)" fg:x="31" fg:w="9"/><text x="3.6754%" y="623.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.99%)</title><rect x="3.4254%" y="597" width="0.9945%" height="15" fill="rgb(221,220,41)" fg:x="31" fg:w="9"/><text x="3.6754%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.99%)</title><rect x="3.4254%" y="581" width="0.9945%" height="15" fill="rgb(218,133,21)" fg:x="31" fg:w="9"/><text x="3.6754%" y="591.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (8 samples, 0.88%)</title><rect x="3.5359%" y="565" width="0.8840%" height="15" fill="rgb(221,193,43)" fg:x="32" fg:w="8"/><text x="3.7859%" y="575.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.33%)</title><rect x="4.0884%" y="549" width="0.3315%" height="15" fill="rgb(240,128,52)" fg:x="37" fg:w="3"/><text x="4.3384%" y="559.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.33%)</title><rect x="4.0884%" y="533" width="0.3315%" height="15" fill="rgb(253,114,12)" fg:x="37" fg:w="3"/><text x="4.3384%" y="543.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.33%)</title><rect x="4.0884%" y="517" width="0.3315%" height="15" fill="rgb(215,223,47)" fg:x="37" fg:w="3"/><text x="4.3384%" y="527.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.33%)</title><rect x="4.0884%" y="501" width="0.3315%" height="15" fill="rgb(248,225,23)" fg:x="37" fg:w="3"/><text x="4.3384%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.33%)</title><rect x="4.0884%" y="485" width="0.3315%" height="15" fill="rgb(250,108,0)" fg:x="37" fg:w="3"/><text x="4.3384%" y="495.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3 samples, 0.33%)</title><rect x="4.0884%" y="469" width="0.3315%" height="15" fill="rgb(228,208,7)" fg:x="37" fg:w="3"/><text x="4.3384%" y="479.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1 samples, 0.11%)</title><rect x="4.3094%" y="453" width="0.1105%" height="15" fill="rgb(244,45,10)" fg:x="39" fg:w="1"/><text x="4.5594%" y="463.50"></text></g><g><title>maelstrom-txn`core::num::_&lt;impl usize&gt;::unchecked_mul::precondition_check (1 samples, 0.11%)</title><rect x="4.3094%" y="437" width="0.1105%" height="15" fill="rgb(207,125,25)" fg:x="39" fg:w="1"/><text x="4.5594%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapAccess&lt;E&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.11%)</title><rect x="4.4199%" y="485" width="0.1105%" height="15" fill="rgb(210,195,18)" fg:x="40" fg:w="1"/><text x="4.6699%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.11%)</title><rect x="4.4199%" y="469" width="0.1105%" height="15" fill="rgb(249,80,12)" fg:x="40" fg:w="1"/><text x="4.6699%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::TaggedContentVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_map (2 samples, 0.22%)</title><rect x="4.4199%" y="501" width="0.2210%" height="15" fill="rgb(221,65,9)" fg:x="40" fg:w="2"/><text x="4.6699%" y="511.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.11%)</title><rect x="4.5304%" y="485" width="0.1105%" height="15" fill="rgb(235,49,36)" fg:x="41" fg:w="1"/><text x="4.7804%" y="495.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.11%)</title><rect x="4.5304%" y="469" width="0.1105%" height="15" fill="rgb(225,32,20)" fg:x="41" fg:w="1"/><text x="4.7804%" y="479.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1 samples, 0.11%)</title><rect x="4.5304%" y="453" width="0.1105%" height="15" fill="rgb(215,141,46)" fg:x="41" fg:w="1"/><text x="4.7804%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.33%)</title><rect x="4.4199%" y="533" width="0.3315%" height="15" fill="rgb(250,160,47)" fg:x="40" fg:w="3"/><text x="4.6699%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_map (3 samples, 0.33%)</title><rect x="4.4199%" y="517" width="0.3315%" height="15" fill="rgb(216,222,40)" fg:x="40" fg:w="3"/><text x="4.6699%" y="527.50"></text></g><g><title>maelstrom-txn`serde::de::size_hint::cautious (1 samples, 0.11%)</title><rect x="4.6409%" y="501" width="0.1105%" height="15" fill="rgb(234,217,39)" fg:x="42" fg:w="1"/><text x="4.8909%" y="511.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageExtra&gt;::deserialize (4 samples, 0.44%)</title><rect x="4.4199%" y="549" width="0.4420%" height="15" fill="rgb(207,178,40)" fg:x="40" fg:w="4"/><text x="4.6699%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.11%)</title><rect x="4.7514%" y="533" width="0.1105%" height="15" fill="rgb(221,136,13)" fg:x="43" fg:w="1"/><text x="5.0014%" y="543.50"></text></g><g><title>maelstrom-txn`serde::__private::de::content::visit_content_map (1 samples, 0.11%)</title><rect x="4.7514%" y="517" width="0.1105%" height="15" fill="rgb(249,199,10)" fg:x="43" fg:w="1"/><text x="5.0014%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::InternallyTaggedUnitVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.11%)</title><rect x="4.7514%" y="501" width="0.1105%" height="15" fill="rgb(249,222,13)" fg:x="43" fg:w="1"/><text x="5.0014%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::MapAccess&gt;::next_entry (1 samples, 0.11%)</title><rect x="4.7514%" y="485" width="0.1105%" height="15" fill="rgb(244,185,38)" fg:x="43" fg:w="1"/><text x="5.0014%" y="495.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_entry (1 samples, 0.11%)</title><rect x="4.7514%" y="469" width="0.1105%" height="15" fill="rgb(236,202,9)" fg:x="43" fg:w="1"/><text x="5.0014%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.11%)</title><rect x="4.7514%" y="453" width="0.1105%" height="15" fill="rgb(250,229,37)" fg:x="43" fg:w="1"/><text x="5.0014%" y="463.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.22%)</title><rect x="4.9724%" y="389" width="0.2210%" height="15" fill="rgb(206,174,23)" fg:x="45" fg:w="2"/><text x="5.2224%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.22%)</title><rect x="4.9724%" y="373" width="0.2210%" height="15" fill="rgb(211,33,43)" fg:x="45" fg:w="2"/><text x="5.2224%" y="383.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.66%)</title><rect x="4.9724%" y="421" width="0.6630%" height="15" fill="rgb(245,58,50)" fg:x="45" fg:w="6"/><text x="5.2224%" y="431.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.66%)</title><rect x="4.9724%" y="405" width="0.6630%" height="15" fill="rgb(244,68,36)" fg:x="45" fg:w="6"/><text x="5.2224%" y="415.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (4 samples, 0.44%)</title><rect x="5.1934%" y="389" width="0.4420%" height="15" fill="rgb(232,229,15)" fg:x="47" fg:w="4"/><text x="5.4434%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.22%)</title><rect x="6.1878%" y="405" width="0.2210%" height="15" fill="rgb(254,30,23)" fg:x="56" fg:w="2"/><text x="6.4378%" y="415.50"></text></g><g><title>maelstrom-txn`core::ptr::const_ptr::_&lt;impl *const T&gt;::offset_from (1 samples, 0.11%)</title><rect x="6.4088%" y="405" width="0.1105%" height="15" fill="rgb(235,160,14)" fg:x="58" fg:w="1"/><text x="6.6588%" y="415.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::skip_to_escape (14 samples, 1.55%)</title><rect x="5.6354%" y="421" width="1.5470%" height="15" fill="rgb(212,155,44)" fg:x="51" fg:w="14"/><text x="5.8854%" y="431.50"></text></g><g><title>maelstrom-txn`core::slice::_&lt;impl [T]&gt;::chunks_exact (6 samples, 0.66%)</title><rect x="6.5193%" y="405" width="0.6630%" height="15" fill="rgb(226,2,50)" fg:x="59" fg:w="6"/><text x="6.7693%" y="415.50"></text></g><g><title>maelstrom-txn`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (6 samples, 0.66%)</title><rect x="6.5193%" y="389" width="0.6630%" height="15" fill="rgb(234,177,6)" fg:x="59" fg:w="6"/><text x="6.7693%" y="399.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (6 samples, 0.66%)</title><rect x="6.5193%" y="373" width="0.6630%" height="15" fill="rgb(217,24,9)" fg:x="59" fg:w="6"/><text x="6.7693%" y="383.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.11%)</title><rect x="7.2928%" y="405" width="0.1105%" height="15" fill="rgb(220,13,46)" fg:x="66" fg:w="1"/><text x="7.5428%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (28 samples, 3.09%)</title><rect x="4.4199%" y="613" width="3.0939%" height="15" fill="rgb(239,221,27)" fg:x="40" fg:w="28"/><text x="4.6699%" y="623.50">mae..</text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize (28 samples, 3.09%)</title><rect x="4.4199%" y="597" width="3.0939%" height="15" fill="rgb(222,198,25)" fg:x="40" fg:w="28"/><text x="4.6699%" y="607.50">mae..</text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (28 samples, 3.09%)</title><rect x="4.4199%" y="581" width="3.0939%" height="15" fill="rgb(211,99,13)" fg:x="40" fg:w="28"/><text x="4.6699%" y="591.50">mae..</text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (28 samples, 3.09%)</title><rect x="4.4199%" y="565" width="3.0939%" height="15" fill="rgb(232,111,31)" fg:x="40" fg:w="28"/><text x="4.6699%" y="575.50">mae..</text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (24 samples, 2.65%)</title><rect x="4.8619%" y="549" width="2.6519%" height="15" fill="rgb(245,82,37)" fg:x="44" fg:w="24"/><text x="5.1119%" y="559.50">ma..</text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (24 samples, 2.65%)</title><rect x="4.8619%" y="533" width="2.6519%" height="15" fill="rgb(227,149,46)" fg:x="44" fg:w="24"/><text x="5.1119%" y="543.50">ma..</text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (24 samples, 2.65%)</title><rect x="4.8619%" y="517" width="2.6519%" height="15" fill="rgb(218,36,50)" fg:x="44" fg:w="24"/><text x="5.1119%" y="527.50">ma..</text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (24 samples, 2.65%)</title><rect x="4.8619%" y="501" width="2.6519%" height="15" fill="rgb(226,80,48)" fg:x="44" fg:w="24"/><text x="5.1119%" y="511.50">ma..</text></g><g><title>maelstrom-txn`serde::de::Deserializer::__deserialize_content (24 samples, 2.65%)</title><rect x="4.8619%" y="485" width="2.6519%" height="15" fill="rgb(238,224,15)" fg:x="44" fg:w="24"/><text x="5.1119%" y="495.50">ma..</text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (24 samples, 2.65%)</title><rect x="4.8619%" y="469" width="2.6519%" height="15" fill="rgb(241,136,10)" fg:x="44" fg:w="24"/><text x="5.1119%" y="479.50">ma..</text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (24 samples, 2.65%)</title><rect x="4.8619%" y="453" width="2.6519%" height="15" fill="rgb(208,32,45)" fg:x="44" fg:w="24"/><text x="5.1119%" y="463.50">ma..</text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::parse_str_bytes (24 samples, 2.65%)</title><rect x="4.8619%" y="437" width="2.6519%" height="15" fill="rgb(207,135,9)" fg:x="44" fg:w="24"/><text x="5.1119%" y="447.50">ma..</text></g><g><title>maelstrom-txn`serde_json::read::parse_escape (3 samples, 0.33%)</title><rect x="7.1823%" y="421" width="0.3315%" height="15" fill="rgb(206,86,44)" fg:x="65" fg:w="3"/><text x="7.4323%" y="431.50"></text></g><g><title>maelstrom-txn`serde_json::read::next_or_eof (1 samples, 0.11%)</title><rect x="7.4033%" y="405" width="0.1105%" height="15" fill="rgb(245,177,15)" fg:x="67" fg:w="1"/><text x="7.6533%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::next (1 samples, 0.11%)</title><rect x="7.4033%" y="389" width="0.1105%" height="15" fill="rgb(206,64,50)" fg:x="67" fg:w="1"/><text x="7.6533%" y="399.50"></text></g><g><title>maelstrom-txn`serde_json::de::from_str (29 samples, 3.20%)</title><rect x="4.4199%" y="725" width="3.2044%" height="15" fill="rgb(234,36,40)" fg:x="40" fg:w="29"/><text x="4.6699%" y="735.50">mae..</text></g><g><title>maelstrom-txn`serde_json::de::from_trait (29 samples, 3.20%)</title><rect x="4.4199%" y="709" width="3.2044%" height="15" fill="rgb(213,64,8)" fg:x="40" fg:w="29"/><text x="4.6699%" y="719.50">mae..</text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize (29 samples, 3.20%)</title><rect x="4.4199%" y="693" width="3.2044%" height="15" fill="rgb(210,75,36)" fg:x="40" fg:w="29"/><text x="4.6699%" y="703.50">mae..</text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (29 samples, 3.20%)</title><rect x="4.4199%" y="677" width="3.2044%" height="15" fill="rgb(229,88,21)" fg:x="40" fg:w="29"/><text x="4.6699%" y="687.50">mae..</text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (29 samples, 3.20%)</title><rect x="4.4199%" y="661" width="3.2044%" height="15" fill="rgb(252,204,47)" fg:x="40" fg:w="29"/><text x="4.6699%" y="671.50">mae..</text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (29 samples, 3.20%)</title><rect x="4.4199%" y="645" width="3.2044%" height="15" fill="rgb(208,77,27)" fg:x="40" fg:w="29"/><text x="4.6699%" y="655.50">mae..</text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (29 samples, 3.20%)</title><rect x="4.4199%" y="629" width="3.2044%" height="15" fill="rgb(221,76,26)" fg:x="40" fg:w="29"/><text x="4.6699%" y="639.50">mae..</text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::parse_object_colon (1 samples, 0.11%)</title><rect x="7.5138%" y="613" width="0.1105%" height="15" fill="rgb(225,139,18)" fg:x="68" fg:w="1"/><text x="7.7638%" y="623.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1 samples, 0.11%)</title><rect x="7.5138%" y="597" width="0.1105%" height="15" fill="rgb(230,137,11)" fg:x="68" fg:w="1"/><text x="7.7638%" y="607.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::peek (1 samples, 0.11%)</title><rect x="7.5138%" y="581" width="0.1105%" height="15" fill="rgb(212,28,1)" fg:x="68" fg:w="1"/><text x="7.7638%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1 samples, 0.11%)</title><rect x="7.5138%" y="565" width="0.1105%" height="15" fill="rgb(248,164,17)" fg:x="68" fg:w="1"/><text x="7.7638%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.11%)</title><rect x="7.5138%" y="549" width="0.1105%" height="15" fill="rgb(222,171,42)" fg:x="68" fg:w="1"/><text x="7.7638%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.11%)</title><rect x="7.6243%" y="629" width="0.1105%" height="15" fill="rgb(243,84,45)" fg:x="69" fg:w="1"/><text x="7.8743%" y="639.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.11%)</title><rect x="7.6243%" y="613" width="0.1105%" height="15" fill="rgb(252,49,23)" fg:x="69" fg:w="1"/><text x="7.8743%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.11%)</title><rect x="7.6243%" y="597" width="0.1105%" height="15" fill="rgb(215,19,7)" fg:x="69" fg:w="1"/><text x="7.8743%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.11%)</title><rect x="7.6243%" y="581" width="0.1105%" height="15" fill="rgb(238,81,41)" fg:x="69" fg:w="1"/><text x="7.8743%" y="591.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (1 samples, 0.11%)</title><rect x="7.6243%" y="565" width="0.1105%" height="15" fill="rgb(210,199,37)" fg:x="69" fg:w="1"/><text x="7.8743%" y="575.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (1 samples, 0.11%)</title><rect x="7.6243%" y="549" width="0.1105%" height="15" fill="rgb(244,192,49)" fg:x="69" fg:w="1"/><text x="7.8743%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="7.6243%" y="533" width="0.1105%" height="15" fill="rgb(226,211,11)" fg:x="69" fg:w="1"/><text x="7.8743%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="7.6243%" y="517" width="0.1105%" height="15" fill="rgb(236,162,54)" fg:x="69" fg:w="1"/><text x="7.8743%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.11%)</title><rect x="7.7348%" y="549" width="0.1105%" height="15" fill="rgb(220,229,9)" fg:x="70" fg:w="1"/><text x="7.9848%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.22%)</title><rect x="7.8453%" y="501" width="0.2210%" height="15" fill="rgb(250,87,22)" fg:x="71" fg:w="2"/><text x="8.0953%" y="511.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (2 samples, 0.22%)</title><rect x="7.8453%" y="485" width="0.2210%" height="15" fill="rgb(239,43,17)" fg:x="71" fg:w="2"/><text x="8.0953%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.22%)</title><rect x="7.8453%" y="469" width="0.2210%" height="15" fill="rgb(231,177,25)" fg:x="71" fg:w="2"/><text x="8.0953%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.22%)</title><rect x="7.8453%" y="453" width="0.2210%" height="15" fill="rgb(219,179,1)" fg:x="71" fg:w="2"/><text x="8.0953%" y="463.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (2 samples, 0.22%)</title><rect x="7.8453%" y="437" width="0.2210%" height="15" fill="rgb(238,219,53)" fg:x="71" fg:w="2"/><text x="8.0953%" y="447.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (1 samples, 0.11%)</title><rect x="7.9558%" y="421" width="0.1105%" height="15" fill="rgb(232,167,36)" fg:x="72" fg:w="1"/><text x="8.2058%" y="431.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (3 samples, 0.33%)</title><rect x="8.3978%" y="405" width="0.3315%" height="15" fill="rgb(244,19,51)" fg:x="76" fg:w="3"/><text x="8.6478%" y="415.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (1 samples, 0.11%)</title><rect x="8.7293%" y="405" width="0.1105%" height="15" fill="rgb(224,6,22)" fg:x="79" fg:w="1"/><text x="8.9793%" y="415.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (1 samples, 0.11%)</title><rect x="8.7293%" y="389" width="0.1105%" height="15" fill="rgb(224,145,5)" fg:x="79" fg:w="1"/><text x="8.9793%" y="399.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::map::Iter as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.77%)</title><rect x="8.2873%" y="469" width="0.7735%" height="15" fill="rgb(234,130,49)" fg:x="75" fg:w="7"/><text x="8.5373%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.77%)</title><rect x="8.2873%" y="453" width="0.7735%" height="15" fill="rgb(254,6,2)" fg:x="75" fg:w="7"/><text x="8.5373%" y="463.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::mem::replace (7 samples, 0.77%)</title><rect x="8.2873%" y="437" width="0.7735%" height="15" fill="rgb(208,96,46)" fg:x="75" fg:w="7"/><text x="8.5373%" y="447.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (7 samples, 0.77%)</title><rect x="8.2873%" y="421" width="0.7735%" height="15" fill="rgb(239,3,39)" fg:x="75" fg:w="7"/><text x="8.5373%" y="431.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (2 samples, 0.22%)</title><rect x="8.8398%" y="405" width="0.2210%" height="15" fill="rgb(233,210,1)" fg:x="80" fg:w="2"/><text x="9.0898%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked::precondition_check (1 samples, 0.11%)</title><rect x="8.9503%" y="389" width="0.1105%" height="15" fill="rgb(244,137,37)" fg:x="81" fg:w="1"/><text x="9.2003%" y="399.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.11%)</title><rect x="9.1713%" y="421" width="0.1105%" height="15" fill="rgb(240,136,2)" fg:x="83" fg:w="1"/><text x="9.4213%" y="431.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.11%)</title><rect x="9.1713%" y="405" width="0.1105%" height="15" fill="rgb(239,18,37)" fg:x="83" fg:w="1"/><text x="9.4213%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.11%)</title><rect x="9.5028%" y="277" width="0.1105%" height="15" fill="rgb(218,185,22)" fg:x="86" fg:w="1"/><text x="9.7528%" y="287.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.22%)</title><rect x="9.6133%" y="277" width="0.2210%" height="15" fill="rgb(225,218,4)" fg:x="87" fg:w="2"/><text x="9.8633%" y="287.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.66%)</title><rect x="9.5028%" y="293" width="0.6630%" height="15" fill="rgb(230,182,32)" fg:x="86" fg:w="6"/><text x="9.7528%" y="303.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (3 samples, 0.33%)</title><rect x="9.8343%" y="277" width="0.3315%" height="15" fill="rgb(242,56,43)" fg:x="89" fg:w="3"/><text x="10.0843%" y="287.50"></text></g><g><title>maelstrom-txn`core::ub_checks::is_nonoverlapping::runtime (1 samples, 0.11%)</title><rect x="10.0552%" y="261" width="0.1105%" height="15" fill="rgb(233,99,24)" fg:x="91" fg:w="1"/><text x="10.3052%" y="271.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_string (8 samples, 0.88%)</title><rect x="9.3923%" y="373" width="0.8840%" height="15" fill="rgb(234,209,42)" fg:x="85" fg:w="8"/><text x="9.6423%" y="383.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (8 samples, 0.88%)</title><rect x="9.3923%" y="357" width="0.8840%" height="15" fill="rgb(227,7,12)" fg:x="85" fg:w="8"/><text x="9.6423%" y="367.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (8 samples, 0.88%)</title><rect x="9.3923%" y="341" width="0.8840%" height="15" fill="rgb(245,203,43)" fg:x="85" fg:w="8"/><text x="9.6423%" y="351.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.88%)</title><rect x="9.3923%" y="325" width="0.8840%" height="15" fill="rgb(238,205,33)" fg:x="85" fg:w="8"/><text x="9.6423%" y="335.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.88%)</title><rect x="9.3923%" y="309" width="0.8840%" height="15" fill="rgb(231,56,7)" fg:x="85" fg:w="8"/><text x="9.6423%" y="319.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.11%)</title><rect x="10.1657%" y="293" width="0.1105%" height="15" fill="rgb(244,186,29)" fg:x="92" fg:w="1"/><text x="10.4157%" y="303.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (3 samples, 0.33%)</title><rect x="10.4972%" y="277" width="0.3315%" height="15" fill="rgb(234,111,31)" fg:x="95" fg:w="3"/><text x="10.7472%" y="287.50"></text></g><g><title>maelstrom-txn`core::ub_checks::is_nonoverlapping::runtime (2 samples, 0.22%)</title><rect x="10.6077%" y="261" width="0.2210%" height="15" fill="rgb(241,149,10)" fg:x="96" fg:w="2"/><text x="10.8577%" y="271.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::end_string (6 samples, 0.66%)</title><rect x="10.2762%" y="373" width="0.6630%" height="15" fill="rgb(249,206,44)" fg:x="93" fg:w="6"/><text x="10.5262%" y="383.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (6 samples, 0.66%)</title><rect x="10.2762%" y="357" width="0.6630%" height="15" fill="rgb(251,153,30)" fg:x="93" fg:w="6"/><text x="10.5262%" y="367.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (6 samples, 0.66%)</title><rect x="10.2762%" y="341" width="0.6630%" height="15" fill="rgb(239,152,38)" fg:x="93" fg:w="6"/><text x="10.5262%" y="351.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.66%)</title><rect x="10.2762%" y="325" width="0.6630%" height="15" fill="rgb(249,139,47)" fg:x="93" fg:w="6"/><text x="10.5262%" y="335.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.66%)</title><rect x="10.2762%" y="309" width="0.6630%" height="15" fill="rgb(244,64,35)" fg:x="93" fg:w="6"/><text x="10.5262%" y="319.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.55%)</title><rect x="10.3867%" y="293" width="0.5525%" height="15" fill="rgb(216,46,15)" fg:x="94" fg:w="5"/><text x="10.6367%" y="303.50"></text></g><g><title>maelstrom-txn`core::ub_checks::is_nonoverlapping::runtime (1 samples, 0.11%)</title><rect x="10.8287%" y="277" width="0.1105%" height="15" fill="rgb(250,74,19)" fg:x="98" fg:w="1"/><text x="11.0787%" y="287.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="11.1602%" y="357" width="0.1105%" height="15" fill="rgb(249,42,33)" fg:x="101" fg:w="1"/><text x="11.4102%" y="367.50"></text></g><g><title>maelstrom-txn`core::str::traits::_&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (2 samples, 0.22%)</title><rect x="11.2707%" y="357" width="0.2210%" height="15" fill="rgb(242,149,17)" fg:x="102" fg:w="2"/><text x="11.5207%" y="367.50"></text></g><g><title>maelstrom-txn`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (1 samples, 0.11%)</title><rect x="11.3812%" y="341" width="0.1105%" height="15" fill="rgb(244,29,21)" fg:x="103" fg:w="1"/><text x="11.6312%" y="351.50"></text></g><g><title>maelstrom-txn`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (1 samples, 0.11%)</title><rect x="11.3812%" y="325" width="0.1105%" height="15" fill="rgb(220,130,37)" fg:x="103" fg:w="1"/><text x="11.6312%" y="335.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="11.6022%" y="325" width="0.1105%" height="15" fill="rgb(211,67,2)" fg:x="105" fg:w="1"/><text x="11.8522%" y="335.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.22%)</title><rect x="11.8232%" y="277" width="0.2210%" height="15" fill="rgb(235,68,52)" fg:x="107" fg:w="2"/><text x="12.0732%" y="287.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="11.9337%" y="261" width="0.1105%" height="15" fill="rgb(246,142,3)" fg:x="108" fg:w="1"/><text x="12.1837%" y="271.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (27 samples, 2.98%)</title><rect x="9.1713%" y="437" width="2.9834%" height="15" fill="rgb(241,25,7)" fg:x="83" fg:w="27"/><text x="9.4213%" y="447.50">mae..</text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (26 samples, 2.87%)</title><rect x="9.2818%" y="421" width="2.8729%" height="15" fill="rgb(242,119,39)" fg:x="84" fg:w="26"/><text x="9.5318%" y="431.50">ma..</text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (26 samples, 2.87%)</title><rect x="9.2818%" y="405" width="2.8729%" height="15" fill="rgb(241,98,45)" fg:x="84" fg:w="26"/><text x="9.5318%" y="415.50">ma..</text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (26 samples, 2.87%)</title><rect x="9.2818%" y="389" width="2.8729%" height="15" fill="rgb(254,28,30)" fg:x="84" fg:w="26"/><text x="9.5318%" y="399.50">ma..</text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (11 samples, 1.22%)</title><rect x="10.9392%" y="373" width="1.2155%" height="15" fill="rgb(241,142,54)" fg:x="99" fg:w="11"/><text x="11.1892%" y="383.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_string_fragment (6 samples, 0.66%)</title><rect x="11.4917%" y="357" width="0.6630%" height="15" fill="rgb(222,85,15)" fg:x="104" fg:w="6"/><text x="11.7417%" y="367.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (5 samples, 0.55%)</title><rect x="11.6022%" y="341" width="0.5525%" height="15" fill="rgb(210,85,47)" fg:x="105" fg:w="5"/><text x="11.8522%" y="351.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (4 samples, 0.44%)</title><rect x="11.7127%" y="325" width="0.4420%" height="15" fill="rgb(224,206,25)" fg:x="106" fg:w="4"/><text x="11.9627%" y="335.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.44%)</title><rect x="11.7127%" y="309" width="0.4420%" height="15" fill="rgb(243,201,19)" fg:x="106" fg:w="4"/><text x="11.9627%" y="319.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.44%)</title><rect x="11.7127%" y="293" width="0.4420%" height="15" fill="rgb(236,59,4)" fg:x="106" fg:w="4"/><text x="11.9627%" y="303.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.11%)</title><rect x="12.0442%" y="277" width="0.1105%" height="15" fill="rgb(254,179,45)" fg:x="109" fg:w="1"/><text x="12.2942%" y="287.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="12.2652%" y="341" width="0.1105%" height="15" fill="rgb(226,14,10)" fg:x="111" fg:w="1"/><text x="12.5152%" y="351.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.55%)</title><rect x="12.2652%" y="357" width="0.5525%" height="15" fill="rgb(244,27,41)" fg:x="111" fg:w="5"/><text x="12.5152%" y="367.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (4 samples, 0.44%)</title><rect x="12.3757%" y="341" width="0.4420%" height="15" fill="rgb(235,35,32)" fg:x="112" fg:w="4"/><text x="12.6257%" y="351.50"></text></g><g><title>maelstrom-txn`core::ub_checks::is_nonoverlapping::runtime (1 samples, 0.11%)</title><rect x="12.7072%" y="325" width="0.1105%" height="15" fill="rgb(218,68,31)" fg:x="115" fg:w="1"/><text x="12.9572%" y="335.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (37 samples, 4.09%)</title><rect x="9.0608%" y="453" width="4.0884%" height="15" fill="rgb(207,120,37)" fg:x="82" fg:w="37"/><text x="9.3108%" y="463.50">mael..</text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_object_key (9 samples, 0.99%)</title><rect x="12.1547%" y="437" width="0.9945%" height="15" fill="rgb(227,98,0)" fg:x="110" fg:w="9"/><text x="12.4047%" y="447.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (9 samples, 0.99%)</title><rect x="12.1547%" y="421" width="0.9945%" height="15" fill="rgb(207,7,3)" fg:x="110" fg:w="9"/><text x="12.4047%" y="431.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (9 samples, 0.99%)</title><rect x="12.1547%" y="405" width="0.9945%" height="15" fill="rgb(206,98,19)" fg:x="110" fg:w="9"/><text x="12.4047%" y="415.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.99%)</title><rect x="12.1547%" y="389" width="0.9945%" height="15" fill="rgb(217,5,26)" fg:x="110" fg:w="9"/><text x="12.4047%" y="399.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.99%)</title><rect x="12.1547%" y="373" width="0.9945%" height="15" fill="rgb(235,190,38)" fg:x="110" fg:w="9"/><text x="12.4047%" y="383.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (3 samples, 0.33%)</title><rect x="12.8177%" y="357" width="0.3315%" height="15" fill="rgb(247,86,24)" fg:x="116" fg:w="3"/><text x="13.0677%" y="367.50"></text></g><g><title>maelstrom-txn`core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.22%)</title><rect x="13.1492%" y="437" width="0.2210%" height="15" fill="rgb(205,101,16)" fg:x="119" fg:w="2"/><text x="13.3992%" y="447.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.11%)</title><rect x="13.5912%" y="357" width="0.1105%" height="15" fill="rgb(246,168,33)" fg:x="123" fg:w="1"/><text x="13.8412%" y="367.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.11%)</title><rect x="13.5912%" y="341" width="0.1105%" height="15" fill="rgb(231,114,1)" fg:x="123" fg:w="1"/><text x="13.8412%" y="351.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.66%)</title><rect x="13.3702%" y="373" width="0.6630%" height="15" fill="rgb(207,184,53)" fg:x="121" fg:w="6"/><text x="13.6202%" y="383.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (3 samples, 0.33%)</title><rect x="13.7017%" y="357" width="0.3315%" height="15" fill="rgb(224,95,51)" fg:x="124" fg:w="3"/><text x="13.9517%" y="367.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_object_value (7 samples, 0.77%)</title><rect x="13.3702%" y="437" width="0.7735%" height="15" fill="rgb(212,188,45)" fg:x="121" fg:w="7"/><text x="13.6202%" y="447.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (7 samples, 0.77%)</title><rect x="13.3702%" y="421" width="0.7735%" height="15" fill="rgb(223,154,38)" fg:x="121" fg:w="7"/><text x="13.6202%" y="431.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (7 samples, 0.77%)</title><rect x="13.3702%" y="405" width="0.7735%" height="15" fill="rgb(251,22,52)" fg:x="121" fg:w="7"/><text x="13.6202%" y="415.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.77%)</title><rect x="13.3702%" y="389" width="0.7735%" height="15" fill="rgb(229,209,22)" fg:x="121" fg:w="7"/><text x="13.6202%" y="399.50"></text></g><g><title>maelstrom-txn`core::ptr::const_ptr::_&lt;impl *const T&gt;::sub_ptr::precondition_check (1 samples, 0.11%)</title><rect x="14.0331%" y="373" width="0.1105%" height="15" fill="rgb(234,138,34)" fg:x="127" fg:w="1"/><text x="14.2831%" y="383.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="14.3646%" y="293" width="0.1105%" height="15" fill="rgb(212,95,11)" fg:x="130" fg:w="1"/><text x="14.6146%" y="303.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_string (3 samples, 0.33%)</title><rect x="14.2541%" y="389" width="0.3315%" height="15" fill="rgb(240,179,47)" fg:x="129" fg:w="3"/><text x="14.5041%" y="399.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (3 samples, 0.33%)</title><rect x="14.2541%" y="373" width="0.3315%" height="15" fill="rgb(240,163,11)" fg:x="129" fg:w="3"/><text x="14.5041%" y="383.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (3 samples, 0.33%)</title><rect x="14.2541%" y="357" width="0.3315%" height="15" fill="rgb(236,37,12)" fg:x="129" fg:w="3"/><text x="14.5041%" y="367.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.33%)</title><rect x="14.2541%" y="341" width="0.3315%" height="15" fill="rgb(232,164,16)" fg:x="129" fg:w="3"/><text x="14.5041%" y="351.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.33%)</title><rect x="14.2541%" y="325" width="0.3315%" height="15" fill="rgb(244,205,15)" fg:x="129" fg:w="3"/><text x="14.5041%" y="335.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.22%)</title><rect x="14.3646%" y="309" width="0.2210%" height="15" fill="rgb(223,117,47)" fg:x="130" fg:w="2"/><text x="14.6146%" y="319.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.11%)</title><rect x="14.4751%" y="293" width="0.1105%" height="15" fill="rgb(244,107,35)" fg:x="131" fg:w="1"/><text x="14.7251%" y="303.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (3 samples, 0.33%)</title><rect x="14.6961%" y="293" width="0.3315%" height="15" fill="rgb(205,140,8)" fg:x="133" fg:w="3"/><text x="14.9461%" y="303.50"></text></g><g><title>maelstrom-txn`core::ub_checks::is_nonoverlapping::runtime (1 samples, 0.11%)</title><rect x="14.9171%" y="277" width="0.1105%" height="15" fill="rgb(228,84,46)" fg:x="135" fg:w="1"/><text x="15.1671%" y="287.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.44%)</title><rect x="14.6961%" y="309" width="0.4420%" height="15" fill="rgb(254,188,9)" fg:x="133" fg:w="4"/><text x="14.9461%" y="319.50"></text></g><g><title>maelstrom-txn`core::ub_checks::is_nonoverlapping::runtime (1 samples, 0.11%)</title><rect x="15.0276%" y="293" width="0.1105%" height="15" fill="rgb(206,112,54)" fg:x="136" fg:w="1"/><text x="15.2776%" y="303.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::end_string (7 samples, 0.77%)</title><rect x="14.5856%" y="389" width="0.7735%" height="15" fill="rgb(216,84,49)" fg:x="132" fg:w="7"/><text x="14.8356%" y="399.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (7 samples, 0.77%)</title><rect x="14.5856%" y="373" width="0.7735%" height="15" fill="rgb(214,194,35)" fg:x="132" fg:w="7"/><text x="14.8356%" y="383.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (7 samples, 0.77%)</title><rect x="14.5856%" y="357" width="0.7735%" height="15" fill="rgb(249,28,3)" fg:x="132" fg:w="7"/><text x="14.8356%" y="367.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.77%)</title><rect x="14.5856%" y="341" width="0.7735%" height="15" fill="rgb(222,56,52)" fg:x="132" fg:w="7"/><text x="14.8356%" y="351.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.77%)</title><rect x="14.5856%" y="325" width="0.7735%" height="15" fill="rgb(245,217,50)" fg:x="132" fg:w="7"/><text x="14.8356%" y="335.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (2 samples, 0.22%)</title><rect x="15.1381%" y="309" width="0.2210%" height="15" fill="rgb(213,201,24)" fg:x="137" fg:w="2"/><text x="15.3881%" y="319.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.33%)</title><rect x="15.9116%" y="373" width="0.3315%" height="15" fill="rgb(248,116,28)" fg:x="144" fg:w="3"/><text x="16.1616%" y="383.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.33%)</title><rect x="15.9116%" y="357" width="0.3315%" height="15" fill="rgb(219,72,43)" fg:x="144" fg:w="3"/><text x="16.1616%" y="367.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="16.2431%" y="373" width="0.1105%" height="15" fill="rgb(209,138,14)" fg:x="147" fg:w="1"/><text x="16.4931%" y="383.50"></text></g><g><title>maelstrom-txn`core::str::traits::_&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (2 samples, 0.22%)</title><rect x="16.3536%" y="373" width="0.2210%" height="15" fill="rgb(222,18,33)" fg:x="148" fg:w="2"/><text x="16.6036%" y="383.50"></text></g><g><title>maelstrom-txn`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (2 samples, 0.22%)</title><rect x="16.3536%" y="357" width="0.2210%" height="15" fill="rgb(213,199,7)" fg:x="148" fg:w="2"/><text x="16.6036%" y="367.50"></text></g><g><title>maelstrom-txn`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (1 samples, 0.11%)</title><rect x="16.4641%" y="341" width="0.1105%" height="15" fill="rgb(250,110,10)" fg:x="149" fg:w="1"/><text x="16.7141%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.11%)</title><rect x="16.6851%" y="277" width="0.1105%" height="15" fill="rgb(248,123,6)" fg:x="151" fg:w="1"/><text x="16.9351%" y="287.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.33%)</title><rect x="16.6851%" y="293" width="0.3315%" height="15" fill="rgb(206,91,31)" fg:x="151" fg:w="3"/><text x="16.9351%" y="303.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.22%)</title><rect x="16.7956%" y="277" width="0.2210%" height="15" fill="rgb(211,154,13)" fg:x="152" fg:w="2"/><text x="17.0456%" y="287.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.11%)</title><rect x="16.9061%" y="261" width="0.1105%" height="15" fill="rgb(225,148,7)" fg:x="153" fg:w="1"/><text x="17.1561%" y="271.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1 samples, 0.11%)</title><rect x="16.9061%" y="245" width="0.1105%" height="15" fill="rgb(220,160,43)" fg:x="153" fg:w="1"/><text x="17.1561%" y="255.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="16.9061%" y="229" width="0.1105%" height="15" fill="rgb(213,52,39)" fg:x="153" fg:w="1"/><text x="17.1561%" y="239.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.11%)</title><rect x="16.9061%" y="213" width="0.1105%" height="15" fill="rgb(243,137,7)" fg:x="153" fg:w="1"/><text x="17.1561%" y="223.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::grow_impl (1 samples, 0.11%)</title><rect x="16.9061%" y="197" width="0.1105%" height="15" fill="rgb(230,79,13)" fg:x="153" fg:w="1"/><text x="17.1561%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.11%)</title><rect x="16.9061%" y="181" width="0.1105%" height="15" fill="rgb(247,105,23)" fg:x="153" fg:w="1"/><text x="17.1561%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.11%)</title><rect x="16.9061%" y="165" width="0.1105%" height="15" fill="rgb(223,179,41)" fg:x="153" fg:w="1"/><text x="17.1561%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.11%)</title><rect x="16.9061%" y="149" width="0.1105%" height="15" fill="rgb(218,9,34)" fg:x="153" fg:w="1"/><text x="17.1561%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.11%)</title><rect x="16.9061%" y="133" width="0.1105%" height="15" fill="rgb(222,106,8)" fg:x="153" fg:w="1"/><text x="17.1561%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.11%)</title><rect x="16.9061%" y="117" width="0.1105%" height="15" fill="rgb(211,220,0)" fg:x="153" fg:w="1"/><text x="17.1561%" y="127.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="17.0166%" y="293" width="0.1105%" height="15" fill="rgb(229,52,16)" fg:x="154" fg:w="1"/><text x="17.2666%" y="303.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (28 samples, 3.09%)</title><rect x="14.1436%" y="405" width="3.0939%" height="15" fill="rgb(212,155,18)" fg:x="128" fg:w="28"/><text x="14.3936%" y="415.50">mae..</text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (17 samples, 1.88%)</title><rect x="15.3591%" y="389" width="1.8785%" height="15" fill="rgb(242,21,14)" fg:x="139" fg:w="17"/><text x="15.6091%" y="399.50">m..</text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_string_fragment (6 samples, 0.66%)</title><rect x="16.5746%" y="373" width="0.6630%" height="15" fill="rgb(222,19,48)" fg:x="150" fg:w="6"/><text x="16.8246%" y="383.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (6 samples, 0.66%)</title><rect x="16.5746%" y="357" width="0.6630%" height="15" fill="rgb(232,45,27)" fg:x="150" fg:w="6"/><text x="16.8246%" y="367.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (6 samples, 0.66%)</title><rect x="16.5746%" y="341" width="0.6630%" height="15" fill="rgb(249,103,42)" fg:x="150" fg:w="6"/><text x="16.8246%" y="351.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.66%)</title><rect x="16.5746%" y="325" width="0.6630%" height="15" fill="rgb(246,81,33)" fg:x="150" fg:w="6"/><text x="16.8246%" y="335.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.55%)</title><rect x="16.6851%" y="309" width="0.5525%" height="15" fill="rgb(252,33,42)" fg:x="151" fg:w="5"/><text x="16.9351%" y="319.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.11%)</title><rect x="17.1271%" y="293" width="0.1105%" height="15" fill="rgb(209,212,41)" fg:x="155" fg:w="1"/><text x="17.3771%" y="303.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (29 samples, 3.20%)</title><rect x="14.1436%" y="421" width="3.2044%" height="15" fill="rgb(207,154,6)" fg:x="128" fg:w="29"/><text x="14.3936%" y="431.50">mae..</text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (1 samples, 0.11%)</title><rect x="17.2376%" y="405" width="0.1105%" height="15" fill="rgb(223,64,47)" fg:x="156" fg:w="1"/><text x="17.4876%" y="415.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_string (90 samples, 9.94%)</title><rect x="7.6243%" y="725" width="9.9448%" height="15" fill="rgb(211,161,38)" fg:x="69" fg:w="90"/><text x="7.8743%" y="735.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`serde_json::ser::to_vec (90 samples, 9.94%)</title><rect x="7.6243%" y="709" width="9.9448%" height="15" fill="rgb(219,138,40)" fg:x="69" fg:w="90"/><text x="7.8743%" y="719.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`serde_json::ser::to_writer (90 samples, 9.94%)</title><rect x="7.6243%" y="693" width="9.9448%" height="15" fill="rgb(241,228,46)" fg:x="69" fg:w="90"/><text x="7.8743%" y="703.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::Message&gt;::serialize (90 samples, 9.94%)</title><rect x="7.6243%" y="677" width="9.9448%" height="15" fill="rgb(223,209,38)" fg:x="69" fg:w="90"/><text x="7.8743%" y="687.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (90 samples, 9.94%)</title><rect x="7.6243%" y="661" width="9.9448%" height="15" fill="rgb(236,164,45)" fg:x="69" fg:w="90"/><text x="7.8743%" y="671.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (90 samples, 9.94%)</title><rect x="7.6243%" y="645" width="9.9448%" height="15" fill="rgb(231,15,5)" fg:x="69" fg:w="90"/><text x="7.8743%" y="655.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (89 samples, 9.83%)</title><rect x="7.7348%" y="629" width="9.8343%" height="15" fill="rgb(252,35,15)" fg:x="70" fg:w="89"/><text x="7.9848%" y="639.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::MessageBody&gt;::serialize (89 samples, 9.83%)</title><rect x="7.7348%" y="613" width="9.8343%" height="15" fill="rgb(248,181,18)" fg:x="70" fg:w="89"/><text x="7.9848%" y="623.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (89 samples, 9.83%)</title><rect x="7.7348%" y="597" width="9.8343%" height="15" fill="rgb(233,39,42)" fg:x="70" fg:w="89"/><text x="7.9848%" y="607.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::MessageExtra&gt;::serialize (89 samples, 9.83%)</title><rect x="7.7348%" y="581" width="9.8343%" height="15" fill="rgb(238,110,33)" fg:x="70" fg:w="89"/><text x="7.9848%" y="591.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`serde::__private::ser::serialize_tagged_newtype (89 samples, 9.83%)</title><rect x="7.7348%" y="565" width="9.8343%" height="15" fill="rgb(233,195,10)" fg:x="70" fg:w="89"/><text x="7.9848%" y="575.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::KvCasData&gt;::serialize (88 samples, 9.72%)</title><rect x="7.8453%" y="549" width="9.7238%" height="15" fill="rgb(254,105,3)" fg:x="71" fg:w="88"/><text x="8.0953%" y="559.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`&lt;serde::__private::ser::FlatMapSerializeStruct&lt;M&gt; as serde::ser::SerializeStruct&gt;::serialize_field (88 samples, 9.72%)</title><rect x="7.8453%" y="533" width="9.7238%" height="15" fill="rgb(221,225,9)" fg:x="71" fg:w="88"/><text x="8.0953%" y="543.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (88 samples, 9.72%)</title><rect x="7.8453%" y="517" width="9.7238%" height="15" fill="rgb(224,227,45)" fg:x="71" fg:w="88"/><text x="8.0953%" y="527.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (86 samples, 9.50%)</title><rect x="8.0663%" y="501" width="9.5028%" height="15" fill="rgb(229,198,43)" fg:x="73" fg:w="86"/><text x="8.3163%" y="511.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (86 samples, 9.50%)</title><rect x="8.0663%" y="485" width="9.5028%" height="15" fill="rgb(206,209,35)" fg:x="73" fg:w="86"/><text x="8.3163%" y="495.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (77 samples, 8.51%)</title><rect x="9.0608%" y="469" width="8.5083%" height="15" fill="rgb(245,195,53)" fg:x="82" fg:w="77"/><text x="9.3108%" y="479.50">maelstrom-tx..</text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (40 samples, 4.42%)</title><rect x="13.1492%" y="453" width="4.4199%" height="15" fill="rgb(240,92,26)" fg:x="119" fg:w="40"/><text x="13.3992%" y="463.50">maels..</text></g><g><title>maelstrom-txn`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (31 samples, 3.43%)</title><rect x="14.1436%" y="437" width="3.4254%" height="15" fill="rgb(207,40,23)" fg:x="128" fg:w="31"/><text x="14.3936%" y="447.50">mae..</text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (2 samples, 0.22%)</title><rect x="17.3481%" y="421" width="0.2210%" height="15" fill="rgb(223,111,35)" fg:x="157" fg:w="2"/><text x="17.5981%" y="431.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (2 samples, 0.22%)</title><rect x="17.3481%" y="405" width="0.2210%" height="15" fill="rgb(229,147,28)" fg:x="157" fg:w="2"/><text x="17.5981%" y="415.50"></text></g><g><title>maelstrom-txn`maelstrom_node::node::Node::sync_rpc (130 samples, 14.36%)</title><rect x="3.3149%" y="741" width="14.3646%" height="15" fill="rgb(211,29,28)" fg:x="30" fg:w="130"/><text x="3.5649%" y="751.50">maelstrom-txn`maelstro..</text></g><g><title>maelstrom-txn`std::io::stdio::_eprint (1 samples, 0.11%)</title><rect x="17.5691%" y="725" width="0.1105%" height="15" fill="rgb(228,72,33)" fg:x="159" fg:w="1"/><text x="17.8191%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (1 samples, 0.11%)</title><rect x="17.5691%" y="709" width="0.1105%" height="15" fill="rgb(205,214,31)" fg:x="159" fg:w="1"/><text x="17.8191%" y="719.50"></text></g><g><title>maelstrom-txn`core::fmt::write (1 samples, 0.11%)</title><rect x="17.5691%" y="693" width="0.1105%" height="15" fill="rgb(224,111,15)" fg:x="159" fg:w="1"/><text x="17.8191%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.11%)</title><rect x="17.5691%" y="677" width="0.1105%" height="15" fill="rgb(253,21,26)" fg:x="159" fg:w="1"/><text x="17.8191%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="17.5691%" y="661" width="0.1105%" height="15" fill="rgb(245,139,43)" fg:x="159" fg:w="1"/><text x="17.8191%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.11%)</title><rect x="17.5691%" y="645" width="0.1105%" height="15" fill="rgb(252,170,7)" fg:x="159" fg:w="1"/><text x="17.8191%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.33%)</title><rect x="17.7901%" y="645" width="0.3315%" height="15" fill="rgb(231,118,14)" fg:x="161" fg:w="3"/><text x="18.0401%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.33%)</title><rect x="17.7901%" y="629" width="0.3315%" height="15" fill="rgb(238,83,0)" fg:x="161" fg:w="3"/><text x="18.0401%" y="639.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (3 samples, 0.33%)</title><rect x="17.7901%" y="613" width="0.3315%" height="15" fill="rgb(221,39,39)" fg:x="161" fg:w="3"/><text x="18.0401%" y="623.50"></text></g><g><title>maelstrom-txn`core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.11%)</title><rect x="18.0110%" y="597" width="0.1105%" height="15" fill="rgb(222,119,46)" fg:x="163" fg:w="1"/><text x="18.2610%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="18.3425%" y="469" width="0.1105%" height="15" fill="rgb(222,165,49)" fg:x="166" fg:w="1"/><text x="18.5925%" y="479.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="18.3425%" y="453" width="0.1105%" height="15" fill="rgb(219,113,52)" fg:x="166" fg:w="1"/><text x="18.5925%" y="463.50"></text></g><g><title>maelstrom-txn`alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="18.3425%" y="437" width="0.1105%" height="15" fill="rgb(214,7,15)" fg:x="166" fg:w="1"/><text x="18.5925%" y="447.50"></text></g><g><title>maelstrom-txn`core::ptr::read_volatile::precondition_check (1 samples, 0.11%)</title><rect x="18.3425%" y="421" width="0.1105%" height="15" fill="rgb(235,32,4)" fg:x="166" fg:w="1"/><text x="18.5925%" y="431.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3 samples, 0.33%)</title><rect x="18.2320%" y="501" width="0.3315%" height="15" fill="rgb(238,90,54)" fg:x="165" fg:w="3"/><text x="18.4820%" y="511.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3 samples, 0.33%)</title><rect x="18.2320%" y="485" width="0.3315%" height="15" fill="rgb(213,208,19)" fg:x="165" fg:w="3"/><text x="18.4820%" y="495.50"></text></g><g><title>maelstrom-txn`core::alloc::layout::Layout::repeat (1 samples, 0.11%)</title><rect x="18.4530%" y="469" width="0.1105%" height="15" fill="rgb(233,156,4)" fg:x="167" fg:w="1"/><text x="18.7030%" y="479.50"></text></g><g><title>maelstrom-txn`alloc::str::_&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (5 samples, 0.55%)</title><rect x="18.2320%" y="533" width="0.5525%" height="15" fill="rgb(207,194,5)" fg:x="165" fg:w="5"/><text x="18.4820%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.55%)</title><rect x="18.2320%" y="517" width="0.5525%" height="15" fill="rgb(206,111,30)" fg:x="165" fg:w="5"/><text x="18.4820%" y="527.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (2 samples, 0.22%)</title><rect x="18.5635%" y="501" width="0.2210%" height="15" fill="rgb(243,70,54)" fg:x="168" fg:w="2"/><text x="18.8135%" y="511.50"></text></g><g><title>maelstrom-txn`itoa::Buffer::format (2 samples, 0.22%)</title><rect x="18.7845%" y="533" width="0.2210%" height="15" fill="rgb(242,28,8)" fg:x="170" fg:w="2"/><text x="19.0345%" y="543.50"></text></g><g><title>maelstrom-txn`itoa::_&lt;impl itoa::private::Sealed for u64&gt;::write (2 samples, 0.22%)</title><rect x="18.7845%" y="517" width="0.2210%" height="15" fill="rgb(219,106,18)" fg:x="170" fg:w="2"/><text x="19.0345%" y="527.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.11%)</title><rect x="18.8950%" y="501" width="0.1105%" height="15" fill="rgb(244,222,10)" fg:x="171" fg:w="1"/><text x="19.1450%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.11%)</title><rect x="19.0055%" y="517" width="0.1105%" height="15" fill="rgb(236,179,52)" fg:x="172" fg:w="1"/><text x="19.2555%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_key (9 samples, 0.99%)</title><rect x="18.2320%" y="597" width="0.9945%" height="15" fill="rgb(213,23,39)" fg:x="165" fg:w="9"/><text x="18.4820%" y="607.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.99%)</title><rect x="18.2320%" y="581" width="0.9945%" height="15" fill="rgb(238,48,10)" fg:x="165" fg:w="9"/><text x="18.4820%" y="591.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for usize&gt;::serialize (9 samples, 0.99%)</title><rect x="18.2320%" y="565" width="0.9945%" height="15" fill="rgb(251,196,23)" fg:x="165" fg:w="9"/><text x="18.4820%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::ser::MapKeySerializer as serde::ser::Serializer&gt;::serialize_u64 (9 samples, 0.99%)</title><rect x="18.2320%" y="549" width="0.9945%" height="15" fill="rgb(250,152,24)" fg:x="165" fg:w="9"/><text x="18.4820%" y="559.50"></text></g><g><title>maelstrom-txn`itoa::Buffer::new (2 samples, 0.22%)</title><rect x="19.0055%" y="533" width="0.2210%" height="15" fill="rgb(209,150,17)" fg:x="172" fg:w="2"/><text x="19.2555%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (1 samples, 0.11%)</title><rect x="19.1160%" y="517" width="0.1105%" height="15" fill="rgb(234,202,34)" fg:x="173" fg:w="1"/><text x="19.3660%" y="527.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1 samples, 0.11%)</title><rect x="19.2265%" y="565" width="0.1105%" height="15" fill="rgb(253,148,53)" fg:x="174" fg:w="1"/><text x="19.4765%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.11%)</title><rect x="19.3370%" y="533" width="0.1105%" height="15" fill="rgb(218,129,16)" fg:x="175" fg:w="1"/><text x="19.5870%" y="543.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (1 samples, 0.11%)</title><rect x="19.7790%" y="517" width="0.1105%" height="15" fill="rgb(216,85,19)" fg:x="179" fg:w="1"/><text x="20.0290%" y="527.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memcmp (1 samples, 0.11%)</title><rect x="21.2155%" y="469" width="0.1105%" height="15" fill="rgb(235,228,7)" fg:x="192" fg:w="1"/><text x="21.4655%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (1 samples, 0.11%)</title><rect x="21.3260%" y="469" width="0.1105%" height="15" fill="rgb(245,175,0)" fg:x="193" fg:w="1"/><text x="21.5760%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (3 samples, 0.33%)</title><rect x="21.4365%" y="469" width="0.3315%" height="15" fill="rgb(208,168,36)" fg:x="194" fg:w="3"/><text x="21.6865%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (1 samples, 0.11%)</title><rect x="21.6575%" y="453" width="0.1105%" height="15" fill="rgb(246,171,24)" fg:x="196" fg:w="1"/><text x="21.9075%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (24 samples, 2.65%)</title><rect x="20.4420%" y="485" width="2.6519%" height="15" fill="rgb(215,142,24)" fg:x="185" fg:w="24"/><text x="20.6920%" y="495.50">ma..</text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (12 samples, 1.33%)</title><rect x="21.7680%" y="469" width="1.3260%" height="15" fill="rgb(250,187,7)" fg:x="197" fg:w="12"/><text x="22.0180%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (25 samples, 2.76%)</title><rect x="20.4420%" y="501" width="2.7624%" height="15" fill="rgb(228,66,33)" fg:x="185" fg:w="25"/><text x="20.6920%" y="511.50">ma..</text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.11%)</title><rect x="23.0939%" y="485" width="0.1105%" height="15" fill="rgb(234,215,21)" fg:x="209" fg:w="1"/><text x="23.3439%" y="495.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (40 samples, 4.42%)</title><rect x="19.3370%" y="549" width="4.4199%" height="15" fill="rgb(222,191,20)" fg:x="175" fg:w="40"/><text x="19.5870%" y="559.50">maels..</text></g><g><title>maelstrom-txn`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (39 samples, 4.31%)</title><rect x="19.4475%" y="533" width="4.3094%" height="15" fill="rgb(245,79,54)" fg:x="176" fg:w="39"/><text x="19.6975%" y="543.50">maels..</text></g><g><title>maelstrom-txn`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (35 samples, 3.87%)</title><rect x="19.8895%" y="517" width="3.8674%" height="15" fill="rgb(240,10,37)" fg:x="180" fg:w="35"/><text x="20.1395%" y="527.50">mael..</text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.55%)</title><rect x="23.2044%" y="501" width="0.5525%" height="15" fill="rgb(214,192,32)" fg:x="210" fg:w="5"/><text x="23.4544%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.33%)</title><rect x="23.4254%" y="485" width="0.3315%" height="15" fill="rgb(209,36,54)" fg:x="212" fg:w="3"/><text x="23.6754%" y="495.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (2 samples, 0.22%)</title><rect x="23.8674%" y="517" width="0.2210%" height="15" fill="rgb(220,10,11)" fg:x="216" fg:w="2"/><text x="24.1174%" y="527.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (1 samples, 0.11%)</title><rect x="23.9779%" y="501" width="0.1105%" height="15" fill="rgb(221,106,17)" fg:x="217" fg:w="1"/><text x="24.2279%" y="511.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;::correct_childrens_parent_links (1 samples, 0.11%)</title><rect x="23.9779%" y="485" width="0.1105%" height="15" fill="rgb(251,142,44)" fg:x="217" fg:w="1"/><text x="24.2279%" y="495.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::correct_parent_link (1 samples, 0.11%)</title><rect x="23.9779%" y="469" width="0.1105%" height="15" fill="rgb(238,13,15)" fg:x="217" fg:w="1"/><text x="24.2279%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.11%)</title><rect x="24.0884%" y="501" width="0.1105%" height="15" fill="rgb(208,107,27)" fg:x="218" fg:w="1"/><text x="24.3384%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.11%)</title><rect x="24.4199%" y="469" width="0.1105%" height="15" fill="rgb(205,136,37)" fg:x="221" fg:w="1"/><text x="24.6699%" y="479.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (5 samples, 0.55%)</title><rect x="24.1989%" y="501" width="0.5525%" height="15" fill="rgb(250,205,27)" fg:x="219" fg:w="5"/><text x="24.4489%" y="511.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::slice_insert (3 samples, 0.33%)</title><rect x="24.4199%" y="485" width="0.3315%" height="15" fill="rgb(210,80,43)" fg:x="221" fg:w="3"/><text x="24.6699%" y="495.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy::precondition_check (2 samples, 0.22%)</title><rect x="24.5304%" y="469" width="0.2210%" height="15" fill="rgb(247,160,36)" fg:x="222" fg:w="2"/><text x="24.7804%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.11%)</title><rect x="24.7514%" y="485" width="0.1105%" height="15" fill="rgb(234,13,49)" fg:x="224" fg:w="1"/><text x="25.0014%" y="495.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (11 samples, 1.22%)</title><rect x="23.7569%" y="549" width="1.2155%" height="15" fill="rgb(234,122,0)" fg:x="215" fg:w="11"/><text x="24.0069%" y="559.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (10 samples, 1.10%)</title><rect x="23.8674%" y="533" width="1.1050%" height="15" fill="rgb(207,146,38)" fg:x="216" fg:w="10"/><text x="24.1174%" y="543.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (8 samples, 0.88%)</title><rect x="24.0884%" y="517" width="0.8840%" height="15" fill="rgb(207,177,25)" fg:x="218" fg:w="8"/><text x="24.3384%" y="527.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (2 samples, 0.22%)</title><rect x="24.7514%" y="501" width="0.2210%" height="15" fill="rgb(211,178,42)" fg:x="224" fg:w="2"/><text x="25.0014%" y="511.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1 samples, 0.11%)</title><rect x="24.8619%" y="485" width="0.1105%" height="15" fill="rgb(230,69,54)" fg:x="225" fg:w="1"/><text x="25.1119%" y="495.50"></text></g><g><title>maelstrom-txn`alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 0.11%)</title><rect x="24.8619%" y="469" width="0.1105%" height="15" fill="rgb(214,135,41)" fg:x="225" fg:w="1"/><text x="25.1119%" y="479.50"></text></g><g><title>maelstrom-txn`alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1 samples, 0.11%)</title><rect x="24.8619%" y="453" width="0.1105%" height="15" fill="rgb(237,67,25)" fg:x="225" fg:w="1"/><text x="25.1119%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="24.8619%" y="437" width="0.1105%" height="15" fill="rgb(222,189,50)" fg:x="225" fg:w="1"/><text x="25.1119%" y="447.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="24.8619%" y="421" width="0.1105%" height="15" fill="rgb(245,148,34)" fg:x="225" fg:w="1"/><text x="25.1119%" y="431.50"></text></g><g><title>maelstrom-txn`alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="24.8619%" y="405" width="0.1105%" height="15" fill="rgb(222,29,6)" fg:x="225" fg:w="1"/><text x="25.1119%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.11%)</title><rect x="24.8619%" y="389" width="0.1105%" height="15" fill="rgb(221,189,43)" fg:x="225" fg:w="1"/><text x="25.1119%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.11%)</title><rect x="24.8619%" y="373" width="0.1105%" height="15" fill="rgb(207,36,27)" fg:x="225" fg:w="1"/><text x="25.1119%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.11%)</title><rect x="24.8619%" y="357" width="0.1105%" height="15" fill="rgb(217,90,24)" fg:x="225" fg:w="1"/><text x="25.1119%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (1 samples, 0.11%)</title><rect x="24.8619%" y="341" width="0.1105%" height="15" fill="rgb(224,66,35)" fg:x="225" fg:w="1"/><text x="25.1119%" y="351.50"></text></g><g><title>maelstrom-txn`serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (53 samples, 5.86%)</title><rect x="19.2265%" y="581" width="5.8564%" height="15" fill="rgb(221,13,50)" fg:x="174" fg:w="53"/><text x="19.4765%" y="591.50">maelstr..</text></g><g><title>maelstrom-txn`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (52 samples, 5.75%)</title><rect x="19.3370%" y="565" width="5.7459%" height="15" fill="rgb(236,68,49)" fg:x="175" fg:w="52"/><text x="19.5870%" y="575.50">maelstr..</text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_val_mut (1 samples, 0.11%)</title><rect x="24.9724%" y="549" width="0.1105%" height="15" fill="rgb(229,146,28)" fg:x="226" fg:w="1"/><text x="25.2224%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.11%)</title><rect x="25.3039%" y="469" width="0.1105%" height="15" fill="rgb(225,31,38)" fg:x="229" fg:w="1"/><text x="25.5539%" y="479.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::alloc_impl (2 samples, 0.22%)</title><rect x="25.5249%" y="421" width="0.2210%" height="15" fill="rgb(250,208,3)" fg:x="231" fg:w="2"/><text x="25.7749%" y="431.50"></text></g><g><title>maelstrom-txn`alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="25.6354%" y="405" width="0.1105%" height="15" fill="rgb(246,54,23)" fg:x="232" fg:w="1"/><text x="25.8854%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.11%)</title><rect x="25.6354%" y="389" width="0.1105%" height="15" fill="rgb(243,76,11)" fg:x="232" fg:w="1"/><text x="25.8854%" y="399.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4 samples, 0.44%)</title><rect x="25.4144%" y="469" width="0.4420%" height="15" fill="rgb(245,21,50)" fg:x="230" fg:w="4"/><text x="25.6644%" y="479.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3 samples, 0.33%)</title><rect x="25.5249%" y="453" width="0.3315%" height="15" fill="rgb(228,9,43)" fg:x="231" fg:w="3"/><text x="25.7749%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.33%)</title><rect x="25.5249%" y="437" width="0.3315%" height="15" fill="rgb(208,100,47)" fg:x="231" fg:w="3"/><text x="25.7749%" y="447.50"></text></g><g><title>maelstrom-txn`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked::precondition_check (1 samples, 0.11%)</title><rect x="25.7459%" y="421" width="0.1105%" height="15" fill="rgb(232,26,8)" fg:x="233" fg:w="1"/><text x="25.9959%" y="431.50"></text></g><g><title>maelstrom-txn`serde_json::value::to_value (76 samples, 8.40%)</title><rect x="17.6796%" y="741" width="8.3978%" height="15" fill="rgb(216,166,38)" fg:x="160" fg:w="76"/><text x="17.9296%" y="751.50">maelstrom-tx..</text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (76 samples, 8.40%)</title><rect x="17.6796%" y="725" width="8.3978%" height="15" fill="rgb(251,202,51)" fg:x="160" fg:w="76"/><text x="17.9296%" y="735.50">maelstrom-tx..</text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (76 samples, 8.40%)</title><rect x="17.6796%" y="709" width="8.3978%" height="15" fill="rgb(254,216,34)" fg:x="160" fg:w="76"/><text x="17.9296%" y="719.50">maelstrom-tx..</text></g><g><title>maelstrom-txn`serde::ser::Serializer::collect_map (76 samples, 8.40%)</title><rect x="17.6796%" y="693" width="8.3978%" height="15" fill="rgb(251,32,27)" fg:x="160" fg:w="76"/><text x="17.9296%" y="703.50">maelstrom-tx..</text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::try_for_each (76 samples, 8.40%)</title><rect x="17.6796%" y="677" width="8.3978%" height="15" fill="rgb(208,127,28)" fg:x="160" fg:w="76"/><text x="17.9296%" y="687.50">maelstrom-tx..</text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::try_fold (76 samples, 8.40%)</title><rect x="17.6796%" y="661" width="8.3978%" height="15" fill="rgb(224,137,22)" fg:x="160" fg:w="76"/><text x="17.9296%" y="671.50">maelstrom-tx..</text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (72 samples, 7.96%)</title><rect x="18.1215%" y="645" width="7.9558%" height="15" fill="rgb(254,70,32)" fg:x="164" fg:w="72"/><text x="18.3715%" y="655.50">maelstrom-t..</text></g><g><title>maelstrom-txn`serde::ser::Serializer::collect_map::_{{closure}} (72 samples, 7.96%)</title><rect x="18.1215%" y="629" width="7.9558%" height="15" fill="rgb(229,75,37)" fg:x="164" fg:w="72"/><text x="18.3715%" y="639.50">maelstrom-t..</text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (72 samples, 7.96%)</title><rect x="18.1215%" y="613" width="7.9558%" height="15" fill="rgb(252,64,23)" fg:x="164" fg:w="72"/><text x="18.3715%" y="623.50">maelstrom-t..</text></g><g><title>maelstrom-txn`&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (62 samples, 6.85%)</title><rect x="19.2265%" y="597" width="6.8508%" height="15" fill="rgb(232,162,48)" fg:x="174" fg:w="62"/><text x="19.4765%" y="607.50">maelstrom..</text></g><g><title>maelstrom-txn`serde_json::value::to_value (9 samples, 0.99%)</title><rect x="25.0829%" y="581" width="0.9945%" height="15" fill="rgb(246,160,12)" fg:x="227" fg:w="9"/><text x="25.3329%" y="591.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.99%)</title><rect x="25.0829%" y="565" width="0.9945%" height="15" fill="rgb(247,166,0)" fg:x="227" fg:w="9"/><text x="25.3329%" y="575.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.99%)</title><rect x="25.0829%" y="549" width="0.9945%" height="15" fill="rgb(249,219,21)" fg:x="227" fg:w="9"/><text x="25.3329%" y="559.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (9 samples, 0.99%)</title><rect x="25.0829%" y="533" width="0.9945%" height="15" fill="rgb(205,209,3)" fg:x="227" fg:w="9"/><text x="25.3329%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_str (9 samples, 0.99%)</title><rect x="25.0829%" y="517" width="0.9945%" height="15" fill="rgb(243,44,1)" fg:x="227" fg:w="9"/><text x="25.3329%" y="527.50"></text></g><g><title>maelstrom-txn`alloc::str::_&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (9 samples, 0.99%)</title><rect x="25.0829%" y="501" width="0.9945%" height="15" fill="rgb(206,159,16)" fg:x="227" fg:w="9"/><text x="25.3329%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.99%)</title><rect x="25.0829%" y="485" width="0.9945%" height="15" fill="rgb(244,77,30)" fg:x="227" fg:w="9"/><text x="25.3329%" y="495.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (2 samples, 0.22%)</title><rect x="25.8564%" y="469" width="0.2210%" height="15" fill="rgb(218,69,12)" fg:x="234" fg:w="2"/><text x="26.1064%" y="479.50"></text></g><g><title>maelstrom-txn`core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.11%)</title><rect x="26.2983%" y="613" width="0.1105%" height="15" fill="rgb(212,87,7)" fg:x="238" fg:w="1"/><text x="26.5483%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="26.2983%" y="645" width="0.2210%" height="15" fill="rgb(245,114,25)" fg:x="238" fg:w="2"/><text x="26.5483%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="26.2983%" y="629" width="0.2210%" height="15" fill="rgb(210,61,42)" fg:x="238" fg:w="2"/><text x="26.5483%" y="639.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.11%)</title><rect x="26.4088%" y="613" width="0.1105%" height="15" fill="rgb(211,52,33)" fg:x="239" fg:w="1"/><text x="26.6588%" y="623.50"></text></g><g><title>maelstrom-txn`core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.11%)</title><rect x="26.4088%" y="597" width="0.1105%" height="15" fill="rgb(234,58,33)" fg:x="239" fg:w="1"/><text x="26.6588%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.11%)</title><rect x="26.6298%" y="629" width="0.1105%" height="15" fill="rgb(220,115,36)" fg:x="241" fg:w="1"/><text x="26.8798%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="26.7403%" y="629" width="0.1105%" height="15" fill="rgb(243,153,54)" fg:x="242" fg:w="1"/><text x="26.9903%" y="639.50"></text></g><g><title>maelstrom-txn`core::fmt::num::_&lt;impl core::fmt::Debug for usize&gt;::fmt (107 samples, 11.82%)</title><rect x="26.9613%" y="597" width="11.8232%" height="15" fill="rgb(251,47,18)" fg:x="244" fg:w="107"/><text x="27.2113%" y="607.50">maelstrom-txn`core..</text></g><g><title>maelstrom-txn`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (106 samples, 11.71%)</title><rect x="27.0718%" y="581" width="11.7127%" height="15" fill="rgb(242,102,42)" fg:x="245" fg:w="106"/><text x="27.3218%" y="591.50">maelstrom-txn`cor..</text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (106 samples, 11.71%)</title><rect x="27.0718%" y="565" width="11.7127%" height="15" fill="rgb(234,31,38)" fg:x="245" fg:w="106"/><text x="27.3218%" y="575.50">maelstrom-txn`&lt;co..</text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (102 samples, 11.27%)</title><rect x="27.5138%" y="549" width="11.2707%" height="15" fill="rgb(221,117,51)" fg:x="249" fg:w="102"/><text x="27.7638%" y="559.50">maelstrom-txn`&lt;st..</text></g><g><title>libsystem_kernel.dylib`write (102 samples, 11.27%)</title><rect x="27.5138%" y="533" width="11.2707%" height="15" fill="rgb(212,20,18)" fg:x="249" fg:w="102"/><text x="27.7638%" y="543.50">libsystem_kernel...</text></g><g><title>maelstrom-txn`&lt;&amp;T as core::fmt::Debug&gt;::fmt (109 samples, 12.04%)</title><rect x="26.8508%" y="613" width="12.0442%" height="15" fill="rgb(245,133,36)" fg:x="243" fg:w="109"/><text x="27.1008%" y="623.50">maelstrom-txn`&lt;&amp;T ..</text></g><g><title>maelstrom-txn`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.11%)</title><rect x="38.7845%" y="597" width="0.1105%" height="15" fill="rgb(212,6,19)" fg:x="351" fg:w="1"/><text x="39.0345%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`write (46 samples, 5.08%)</title><rect x="39.2265%" y="581" width="5.0829%" height="15" fill="rgb(218,1,36)" fg:x="355" fg:w="46"/><text x="39.4765%" y="591.50">libsys..</text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::entry (162 samples, 17.90%)</title><rect x="26.5193%" y="645" width="17.9006%" height="15" fill="rgb(246,84,54)" fg:x="240" fg:w="162"/><text x="26.7693%" y="655.50">maelstrom-txn`core::fmt::bui..</text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::key (159 samples, 17.57%)</title><rect x="26.8508%" y="629" width="17.5691%" height="15" fill="rgb(242,110,6)" fg:x="243" fg:w="159"/><text x="27.1008%" y="639.50">maelstrom-txn`core::fmt::bu..</text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (50 samples, 5.52%)</title><rect x="38.8950%" y="613" width="5.5249%" height="15" fill="rgb(214,47,5)" fg:x="352" fg:w="50"/><text x="39.1450%" y="623.50">maelstr..</text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (48 samples, 5.30%)</title><rect x="39.1160%" y="597" width="5.3039%" height="15" fill="rgb(218,159,25)" fg:x="354" fg:w="48"/><text x="39.3660%" y="607.50">maelst..</text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (1 samples, 0.11%)</title><rect x="44.3094%" y="581" width="0.1105%" height="15" fill="rgb(215,211,28)" fg:x="401" fg:w="1"/><text x="44.5594%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`write (32 samples, 3.54%)</title><rect x="45.5249%" y="549" width="3.5359%" height="15" fill="rgb(238,59,32)" fg:x="412" fg:w="32"/><text x="45.7749%" y="559.50">lib..</text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (34 samples, 3.76%)</title><rect x="45.4144%" y="581" width="3.7569%" height="15" fill="rgb(226,82,3)" fg:x="411" fg:w="34"/><text x="45.6644%" y="591.50">mael..</text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (33 samples, 3.65%)</title><rect x="45.5249%" y="565" width="3.6464%" height="15" fill="rgb(240,164,32)" fg:x="412" fg:w="33"/><text x="45.7749%" y="575.50">mael..</text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (1 samples, 0.11%)</title><rect x="49.0608%" y="549" width="0.1105%" height="15" fill="rgb(232,46,7)" fg:x="444" fg:w="1"/><text x="49.3108%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="49.1713%" y="581" width="0.1105%" height="15" fill="rgb(229,129,53)" fg:x="445" fg:w="1"/><text x="49.4213%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`write (97 samples, 10.72%)</title><rect x="49.2818%" y="565" width="10.7182%" height="15" fill="rgb(234,188,29)" fg:x="446" fg:w="97"/><text x="49.5318%" y="575.50">libsystem_kernel..</text></g><g><title>maelstrom-txn`&lt;str as core::fmt::Debug&gt;::fmt (137 samples, 15.14%)</title><rect x="45.0829%" y="597" width="15.1381%" height="15" fill="rgb(246,141,4)" fg:x="408" fg:w="137"/><text x="45.3329%" y="607.50">maelstrom-txn`&lt;str as c..</text></g><g><title>maelstrom-txn`core::fmt::Write::write_char (99 samples, 10.94%)</title><rect x="49.2818%" y="581" width="10.9392%" height="15" fill="rgb(229,23,39)" fg:x="446" fg:w="99"/><text x="49.5318%" y="591.50">maelstrom-txn`co..</text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (2 samples, 0.22%)</title><rect x="60.0000%" y="565" width="0.2210%" height="15" fill="rgb(206,12,3)" fg:x="543" fg:w="2"/><text x="60.2500%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;&amp;T as core::fmt::Debug&gt;::fmt (141 samples, 15.58%)</title><rect x="44.8619%" y="629" width="15.5801%" height="15" fill="rgb(252,226,20)" fg:x="406" fg:w="141"/><text x="45.1119%" y="639.50">maelstrom-txn`&lt;&amp;T as cor..</text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::fmt::Debug&gt;::fmt (140 samples, 15.47%)</title><rect x="44.9724%" y="613" width="15.4696%" height="15" fill="rgb(216,123,35)" fg:x="407" fg:w="140"/><text x="45.2224%" y="623.50">maelstrom-txn`&lt;alloc::st..</text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (2 samples, 0.22%)</title><rect x="60.2210%" y="597" width="0.2210%" height="15" fill="rgb(212,68,40)" fg:x="545" fg:w="2"/><text x="60.4710%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`write (40 samples, 4.42%)</title><rect x="60.9945%" y="597" width="4.4199%" height="15" fill="rgb(254,125,32)" fg:x="552" fg:w="40"/><text x="61.2445%" y="607.50">libsy..</text></g><g><title>maelstrom-txn`&lt;&amp;T as core::fmt::Debug&gt;::fmt (356 samples, 39.34%)</title><rect x="26.1878%" y="693" width="39.3370%" height="15" fill="rgb(253,97,22)" fg:x="237" fg:w="356"/><text x="26.4378%" y="703.50">maelstrom-txn`&lt;&amp;T as core::fmt::Debug&gt;::fmt</text></g><g><title>maelstrom-txn`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::fmt::Debug&gt;::fmt (356 samples, 39.34%)</title><rect x="26.1878%" y="677" width="39.3370%" height="15" fill="rgb(241,101,14)" fg:x="237" fg:w="356"/><text x="26.4378%" y="687.50">maelstrom-txn`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as co..</text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::entries (356 samples, 39.34%)</title><rect x="26.1878%" y="661" width="39.3370%" height="15" fill="rgb(238,103,29)" fg:x="237" fg:w="356"/><text x="26.4378%" y="671.50">maelstrom-txn`core::fmt::builders::DebugMap::entries</text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::value (191 samples, 21.10%)</title><rect x="44.4199%" y="645" width="21.1050%" height="15" fill="rgb(233,195,47)" fg:x="402" fg:w="191"/><text x="44.6699%" y="655.50">maelstrom-txn`core::fmt::builders..</text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (46 samples, 5.08%)</title><rect x="60.4420%" y="629" width="5.0829%" height="15" fill="rgb(246,218,30)" fg:x="547" fg:w="46"/><text x="60.6920%" y="639.50">maelst..</text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (41 samples, 4.53%)</title><rect x="60.9945%" y="613" width="4.5304%" height="15" fill="rgb(219,145,47)" fg:x="552" fg:w="41"/><text x="61.2445%" y="623.50">maels..</text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (1 samples, 0.11%)</title><rect x="65.4144%" y="597" width="0.1105%" height="15" fill="rgb(243,12,26)" fg:x="592" fg:w="1"/><text x="65.6644%" y="607.50"></text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Transactor::cas_root (566 samples, 62.54%)</title><rect x="3.0939%" y="757" width="62.5414%" height="15" fill="rgb(214,87,16)" fg:x="28" fg:w="566"/><text x="3.3439%" y="767.50">maelstrom-txn`maelstrom_node::transactor2::Transactor::cas_root</text></g><g><title>maelstrom-txn`std::io::stdio::_eprint (358 samples, 39.56%)</title><rect x="26.0773%" y="741" width="39.5580%" height="15" fill="rgb(208,99,42)" fg:x="236" fg:w="358"/><text x="26.3273%" y="751.50">maelstrom-txn`std::io::stdio::_eprint</text></g><g><title>maelstrom-txn`&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (358 samples, 39.56%)</title><rect x="26.0773%" y="725" width="39.5580%" height="15" fill="rgb(253,99,2)" fg:x="236" fg:w="358"/><text x="26.3273%" y="735.50">maelstrom-txn`&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_..</text></g><g><title>maelstrom-txn`core::fmt::write (358 samples, 39.56%)</title><rect x="26.0773%" y="709" width="39.5580%" height="15" fill="rgb(220,168,23)" fg:x="236" fg:w="358"/><text x="26.3273%" y="719.50">maelstrom-txn`core::fmt::write</text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="65.5249%" y="693" width="0.1105%" height="15" fill="rgb(242,38,24)" fg:x="593" fg:w="1"/><text x="65.7749%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.11%)</title><rect x="65.5249%" y="677" width="0.1105%" height="15" fill="rgb(225,182,9)" fg:x="593" fg:w="1"/><text x="65.7749%" y="687.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.11%)</title><rect x="65.6354%" y="549" width="0.1105%" height="15" fill="rgb(243,178,37)" fg:x="594" fg:w="1"/><text x="65.8854%" y="559.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.11%)</title><rect x="65.7459%" y="293" width="0.1105%" height="15" fill="rgb(232,139,19)" fg:x="595" fg:w="1"/><text x="65.9959%" y="303.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="65.8564%" y="149" width="0.1105%" height="15" fill="rgb(225,201,24)" fg:x="596" fg:w="1"/><text x="66.1064%" y="159.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="65.8564%" y="133" width="0.1105%" height="15" fill="rgb(221,47,46)" fg:x="596" fg:w="1"/><text x="66.1064%" y="143.50"></text></g><g><title>maelstrom-txn`alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="65.8564%" y="117" width="0.1105%" height="15" fill="rgb(249,23,13)" fg:x="596" fg:w="1"/><text x="66.1064%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.11%)</title><rect x="65.8564%" y="101" width="0.1105%" height="15" fill="rgb(219,9,5)" fg:x="596" fg:w="1"/><text x="66.1064%" y="111.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5 samples, 0.55%)</title><rect x="65.8564%" y="181" width="0.5525%" height="15" fill="rgb(254,171,16)" fg:x="596" fg:w="5"/><text x="66.1064%" y="191.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5 samples, 0.55%)</title><rect x="65.8564%" y="165" width="0.5525%" height="15" fill="rgb(230,171,20)" fg:x="596" fg:w="5"/><text x="66.1064%" y="175.50"></text></g><g><title>maelstrom-txn`core::alloc::layout::Layout::repeat (4 samples, 0.44%)</title><rect x="65.9669%" y="149" width="0.4420%" height="15" fill="rgb(210,71,41)" fg:x="597" fg:w="4"/><text x="66.2169%" y="159.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (6 samples, 0.66%)</title><rect x="65.8564%" y="277" width="0.6630%" height="15" fill="rgb(206,173,20)" fg:x="596" fg:w="6"/><text x="66.1064%" y="287.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (6 samples, 0.66%)</title><rect x="65.8564%" y="261" width="0.6630%" height="15" fill="rgb(233,88,34)" fg:x="596" fg:w="6"/><text x="66.1064%" y="271.50"></text></g><g><title>maelstrom-txn`serde::de::Visitor::visit_borrowed_str (6 samples, 0.66%)</title><rect x="65.8564%" y="245" width="0.6630%" height="15" fill="rgb(223,209,46)" fg:x="596" fg:w="6"/><text x="66.1064%" y="255.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (6 samples, 0.66%)</title><rect x="65.8564%" y="229" width="0.6630%" height="15" fill="rgb(250,43,18)" fg:x="596" fg:w="6"/><text x="66.1064%" y="239.50"></text></g><g><title>maelstrom-txn`alloc::str::_&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (6 samples, 0.66%)</title><rect x="65.8564%" y="213" width="0.6630%" height="15" fill="rgb(208,13,10)" fg:x="596" fg:w="6"/><text x="66.1064%" y="223.50"></text></g><g><title>maelstrom-txn`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.66%)</title><rect x="65.8564%" y="197" width="0.6630%" height="15" fill="rgb(212,200,36)" fg:x="596" fg:w="6"/><text x="66.1064%" y="207.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.11%)</title><rect x="66.4088%" y="181" width="0.1105%" height="15" fill="rgb(225,90,30)" fg:x="601" fg:w="1"/><text x="66.6588%" y="191.50"></text></g><g><title>maelstrom-txn`core::ub_checks::is_nonoverlapping::runtime (1 samples, 0.11%)</title><rect x="66.4088%" y="165" width="0.1105%" height="15" fill="rgb(236,182,39)" fg:x="601" fg:w="1"/><text x="66.6588%" y="175.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2 samples, 0.22%)</title><rect x="66.6298%" y="165" width="0.2210%" height="15" fill="rgb(212,144,35)" fg:x="603" fg:w="2"/><text x="66.8798%" y="175.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="66.7403%" y="149" width="0.1105%" height="15" fill="rgb(228,63,44)" fg:x="604" fg:w="1"/><text x="66.9903%" y="159.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="66.7403%" y="133" width="0.1105%" height="15" fill="rgb(228,109,6)" fg:x="604" fg:w="1"/><text x="66.9903%" y="143.50"></text></g><g><title>maelstrom-txn`alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="66.7403%" y="117" width="0.1105%" height="15" fill="rgb(238,117,24)" fg:x="604" fg:w="1"/><text x="66.9903%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.11%)</title><rect x="66.7403%" y="101" width="0.1105%" height="15" fill="rgb(242,26,26)" fg:x="604" fg:w="1"/><text x="66.9903%" y="111.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4 samples, 0.44%)</title><rect x="66.5193%" y="181" width="0.4420%" height="15" fill="rgb(221,92,48)" fg:x="602" fg:w="4"/><text x="66.7693%" y="191.50"></text></g><g><title>maelstrom-txn`core::hint::assert_unchecked::precondition_check (1 samples, 0.11%)</title><rect x="66.8508%" y="165" width="0.1105%" height="15" fill="rgb(209,209,32)" fg:x="605" fg:w="1"/><text x="67.1008%" y="175.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (5 samples, 0.55%)</title><rect x="66.5193%" y="213" width="0.5525%" height="15" fill="rgb(221,70,22)" fg:x="602" fg:w="5"/><text x="66.7693%" y="223.50"></text></g><g><title>maelstrom-txn`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.55%)</title><rect x="66.5193%" y="197" width="0.5525%" height="15" fill="rgb(248,145,5)" fg:x="602" fg:w="5"/><text x="66.7693%" y="207.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.11%)</title><rect x="66.9613%" y="181" width="0.1105%" height="15" fill="rgb(226,116,26)" fg:x="606" fg:w="1"/><text x="67.2113%" y="191.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12 samples, 1.33%)</title><rect x="65.8564%" y="293" width="1.3260%" height="15" fill="rgb(244,5,17)" fg:x="596" fg:w="12"/><text x="66.1064%" y="303.50"></text></g><g><title>maelstrom-txn`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.66%)</title><rect x="66.5193%" y="277" width="0.6630%" height="15" fill="rgb(252,159,33)" fg:x="602" fg:w="6"/><text x="66.7693%" y="287.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.66%)</title><rect x="66.5193%" y="261" width="0.6630%" height="15" fill="rgb(206,71,0)" fg:x="602" fg:w="6"/><text x="66.7693%" y="271.50"></text></g><g><title>maelstrom-txn`serde::de::Visitor::visit_borrowed_str (6 samples, 0.66%)</title><rect x="66.5193%" y="245" width="0.6630%" height="15" fill="rgb(233,118,54)" fg:x="602" fg:w="6"/><text x="66.7693%" y="255.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (6 samples, 0.66%)</title><rect x="66.5193%" y="229" width="0.6630%" height="15" fill="rgb(234,83,48)" fg:x="602" fg:w="6"/><text x="66.7693%" y="239.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_string (1 samples, 0.11%)</title><rect x="67.0718%" y="213" width="0.1105%" height="15" fill="rgb(228,3,54)" fg:x="607" fg:w="1"/><text x="67.3218%" y="223.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::MapAccess&gt;::next_entry (14 samples, 1.55%)</title><rect x="65.7459%" y="341" width="1.5470%" height="15" fill="rgb(226,155,13)" fg:x="595" fg:w="14"/><text x="65.9959%" y="351.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_entry (14 samples, 1.55%)</title><rect x="65.7459%" y="325" width="1.5470%" height="15" fill="rgb(241,28,37)" fg:x="595" fg:w="14"/><text x="65.9959%" y="335.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (14 samples, 1.55%)</title><rect x="65.7459%" y="309" width="1.5470%" height="15" fill="rgb(233,93,10)" fg:x="595" fg:w="14"/><text x="65.9959%" y="319.50"></text></g><g><title>maelstrom-txn`serde::de::value::MapDeserializer&lt;I,E&gt;::next_pair (1 samples, 0.11%)</title><rect x="67.1823%" y="293" width="0.1105%" height="15" fill="rgb(225,113,19)" fg:x="608" fg:w="1"/><text x="67.4323%" y="303.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="67.1823%" y="277" width="0.1105%" height="15" fill="rgb(241,2,18)" fg:x="608" fg:w="1"/><text x="67.4323%" y="287.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.11%)</title><rect x="67.1823%" y="261" width="0.1105%" height="15" fill="rgb(228,207,21)" fg:x="608" fg:w="1"/><text x="67.4323%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.11%)</title><rect x="67.1823%" y="245" width="0.1105%" height="15" fill="rgb(213,211,35)" fg:x="608" fg:w="1"/><text x="67.4323%" y="255.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (1 samples, 0.11%)</title><rect x="67.5138%" y="277" width="0.1105%" height="15" fill="rgb(209,83,10)" fg:x="611" fg:w="1"/><text x="67.7638%" y="287.50"></text></g><g><title>maelstrom-txn`&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (4 samples, 0.44%)</title><rect x="67.7348%" y="229" width="0.4420%" height="15" fill="rgb(209,164,1)" fg:x="613" fg:w="4"/><text x="67.9848%" y="239.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (6 samples, 0.66%)</title><rect x="67.7348%" y="261" width="0.6630%" height="15" fill="rgb(213,184,43)" fg:x="613" fg:w="6"/><text x="67.9848%" y="271.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (6 samples, 0.66%)</title><rect x="67.7348%" y="245" width="0.6630%" height="15" fill="rgb(231,61,34)" fg:x="613" fg:w="6"/><text x="67.9848%" y="255.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (2 samples, 0.22%)</title><rect x="68.1768%" y="229" width="0.2210%" height="15" fill="rgb(235,75,3)" fg:x="617" fg:w="2"/><text x="68.4268%" y="239.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.55%)</title><rect x="68.3978%" y="261" width="0.5525%" height="15" fill="rgb(220,106,47)" fg:x="619" fg:w="5"/><text x="68.6478%" y="271.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.44%)</title><rect x="68.5083%" y="245" width="0.4420%" height="15" fill="rgb(210,196,33)" fg:x="620" fg:w="4"/><text x="68.7583%" y="255.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (16 samples, 1.77%)</title><rect x="67.2928%" y="309" width="1.7680%" height="15" fill="rgb(229,154,42)" fg:x="609" fg:w="16"/><text x="67.5428%" y="319.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (16 samples, 1.77%)</title><rect x="67.2928%" y="293" width="1.7680%" height="15" fill="rgb(228,114,26)" fg:x="609" fg:w="16"/><text x="67.5428%" y="303.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (13 samples, 1.44%)</title><rect x="67.6243%" y="277" width="1.4365%" height="15" fill="rgb(208,144,1)" fg:x="612" fg:w="13"/><text x="67.8743%" y="287.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (1 samples, 0.11%)</title><rect x="68.9503%" y="261" width="0.1105%" height="15" fill="rgb(239,112,37)" fg:x="624" fg:w="1"/><text x="69.2003%" y="271.50"></text></g><g><title>maelstrom-txn`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked::precondition_check (1 samples, 0.11%)</title><rect x="68.9503%" y="245" width="0.1105%" height="15" fill="rgb(210,96,50)" fg:x="624" fg:w="1"/><text x="69.2003%" y="255.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (1 samples, 0.11%)</title><rect x="69.0608%" y="277" width="0.1105%" height="15" fill="rgb(222,178,2)" fg:x="625" fg:w="1"/><text x="69.3108%" y="287.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (1 samples, 0.11%)</title><rect x="69.0608%" y="261" width="0.1105%" height="15" fill="rgb(226,74,18)" fg:x="625" fg:w="1"/><text x="69.3108%" y="271.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::slice_insert (1 samples, 0.11%)</title><rect x="69.0608%" y="245" width="0.1105%" height="15" fill="rgb(225,67,54)" fg:x="625" fg:w="1"/><text x="69.3108%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.11%)</title><rect x="69.0608%" y="229" width="0.1105%" height="15" fill="rgb(251,92,32)" fg:x="625" fg:w="1"/><text x="69.3108%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.11%)</title><rect x="69.1713%" y="261" width="0.1105%" height="15" fill="rgb(228,149,22)" fg:x="626" fg:w="1"/><text x="69.4213%" y="271.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (1 samples, 0.11%)</title><rect x="69.2818%" y="261" width="0.1105%" height="15" fill="rgb(243,54,13)" fg:x="627" fg:w="1"/><text x="69.5318%" y="271.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::slice_insert (1 samples, 0.11%)</title><rect x="69.2818%" y="245" width="0.1105%" height="15" fill="rgb(243,180,28)" fg:x="627" fg:w="1"/><text x="69.5318%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.11%)</title><rect x="69.2818%" y="229" width="0.1105%" height="15" fill="rgb(208,167,24)" fg:x="627" fg:w="1"/><text x="69.5318%" y="239.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.44%)</title><rect x="69.0608%" y="309" width="0.4420%" height="15" fill="rgb(245,73,45)" fg:x="625" fg:w="4"/><text x="69.3108%" y="319.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (4 samples, 0.44%)</title><rect x="69.0608%" y="293" width="0.4420%" height="15" fill="rgb(237,203,48)" fg:x="625" fg:w="4"/><text x="69.3108%" y="303.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (3 samples, 0.33%)</title><rect x="69.1713%" y="277" width="0.3315%" height="15" fill="rgb(211,197,16)" fg:x="626" fg:w="3"/><text x="69.4213%" y="287.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (1 samples, 0.11%)</title><rect x="69.3923%" y="261" width="0.1105%" height="15" fill="rgb(243,99,51)" fg:x="628" fg:w="1"/><text x="69.6423%" y="271.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::from_new_leaf (1 samples, 0.11%)</title><rect x="69.3923%" y="245" width="0.1105%" height="15" fill="rgb(215,123,29)" fg:x="628" fg:w="1"/><text x="69.6423%" y="255.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (35 samples, 3.87%)</title><rect x="65.7459%" y="421" width="3.8674%" height="15" fill="rgb(239,186,37)" fg:x="595" fg:w="35"/><text x="65.9959%" y="431.50">mael..</text></g><g><title>maelstrom-txn`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (35 samples, 3.87%)</title><rect x="65.7459%" y="405" width="3.8674%" height="15" fill="rgb(252,136,39)" fg:x="595" fg:w="35"/><text x="65.9959%" y="415.50">mael..</text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (35 samples, 3.87%)</title><rect x="65.7459%" y="389" width="3.8674%" height="15" fill="rgb(223,213,32)" fg:x="595" fg:w="35"/><text x="65.9959%" y="399.50">mael..</text></g><g><title>maelstrom-txn`serde::__private::de::content::visit_content_map (35 samples, 3.87%)</title><rect x="65.7459%" y="373" width="3.8674%" height="15" fill="rgb(233,115,5)" fg:x="595" fg:w="35"/><text x="65.9959%" y="383.50">mael..</text></g><g><title>maelstrom-txn`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (35 samples, 3.87%)</title><rect x="65.7459%" y="357" width="3.8674%" height="15" fill="rgb(207,226,44)" fg:x="595" fg:w="35"/><text x="65.9959%" y="367.50">mael..</text></g><g><title>maelstrom-txn`serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (21 samples, 2.32%)</title><rect x="67.2928%" y="341" width="2.3204%" height="15" fill="rgb(208,126,0)" fg:x="609" fg:w="21"/><text x="67.5428%" y="351.50">m..</text></g><g><title>maelstrom-txn`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (21 samples, 2.32%)</title><rect x="67.2928%" y="325" width="2.3204%" height="15" fill="rgb(244,66,21)" fg:x="609" fg:w="21"/><text x="67.5428%" y="335.50">m..</text></g><g><title>maelstrom-txn`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.11%)</title><rect x="69.5028%" y="309" width="0.1105%" height="15" fill="rgb(222,97,12)" fg:x="629" fg:w="1"/><text x="69.7528%" y="319.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageExtra&gt;::deserialize (36 samples, 3.98%)</title><rect x="65.7459%" y="549" width="3.9779%" height="15" fill="rgb(219,213,19)" fg:x="595" fg:w="36"/><text x="65.9959%" y="559.50">mael..</text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::KvReadOkExtra&gt;::deserialize (36 samples, 3.98%)</title><rect x="65.7459%" y="533" width="3.9779%" height="15" fill="rgb(252,169,30)" fg:x="595" fg:w="36"/><text x="65.9959%" y="543.50">mael..</text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (36 samples, 3.98%)</title><rect x="65.7459%" y="517" width="3.9779%" height="15" fill="rgb(206,32,51)" fg:x="595" fg:w="36"/><text x="65.9959%" y="527.50">mael..</text></g><g><title>maelstrom-txn`serde::__private::de::content::visit_content_map (36 samples, 3.98%)</title><rect x="65.7459%" y="501" width="3.9779%" height="15" fill="rgb(250,172,42)" fg:x="595" fg:w="36"/><text x="65.9959%" y="511.50">mael..</text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::KvReadOkExtra&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (36 samples, 3.98%)</title><rect x="65.7459%" y="485" width="3.9779%" height="15" fill="rgb(209,34,43)" fg:x="595" fg:w="36"/><text x="65.9959%" y="495.50">mael..</text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::MapAccess&gt;::next_value (36 samples, 3.98%)</title><rect x="65.7459%" y="469" width="3.9779%" height="15" fill="rgb(223,11,35)" fg:x="595" fg:w="36"/><text x="65.9959%" y="479.50">mael..</text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (36 samples, 3.98%)</title><rect x="65.7459%" y="453" width="3.9779%" height="15" fill="rgb(251,219,26)" fg:x="595" fg:w="36"/><text x="65.9959%" y="463.50">mael..</text></g><g><title>maelstrom-txn`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_value_seed (36 samples, 3.98%)</title><rect x="65.7459%" y="437" width="3.9779%" height="15" fill="rgb(231,119,3)" fg:x="595" fg:w="36"/><text x="65.9959%" y="447.50">mael..</text></g><g><title>maelstrom-txn`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.11%)</title><rect x="69.6133%" y="421" width="0.1105%" height="15" fill="rgb(216,97,11)" fg:x="630" fg:w="1"/><text x="69.8633%" y="431.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.22%)</title><rect x="69.7238%" y="437" width="0.2210%" height="15" fill="rgb(223,59,9)" fg:x="631" fg:w="2"/><text x="69.9738%" y="447.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.11%)</title><rect x="69.8343%" y="421" width="0.1105%" height="15" fill="rgb(233,93,31)" fg:x="632" fg:w="1"/><text x="70.0843%" y="431.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1 samples, 0.11%)</title><rect x="69.8343%" y="405" width="0.1105%" height="15" fill="rgb(239,81,33)" fg:x="632" fg:w="1"/><text x="70.0843%" y="415.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="69.8343%" y="389" width="0.1105%" height="15" fill="rgb(213,120,34)" fg:x="632" fg:w="1"/><text x="70.0843%" y="399.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.11%)</title><rect x="69.8343%" y="373" width="0.1105%" height="15" fill="rgb(243,49,53)" fg:x="632" fg:w="1"/><text x="70.0843%" y="383.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::grow_impl (1 samples, 0.11%)</title><rect x="69.8343%" y="357" width="0.1105%" height="15" fill="rgb(247,216,33)" fg:x="632" fg:w="1"/><text x="70.0843%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.11%)</title><rect x="69.8343%" y="341" width="0.1105%" height="15" fill="rgb(226,26,14)" fg:x="632" fg:w="1"/><text x="70.0843%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.11%)</title><rect x="69.8343%" y="325" width="0.1105%" height="15" fill="rgb(215,49,53)" fg:x="632" fg:w="1"/><text x="70.0843%" y="335.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.11%)</title><rect x="69.8343%" y="309" width="0.1105%" height="15" fill="rgb(245,162,40)" fg:x="632" fg:w="1"/><text x="70.0843%" y="319.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_borrowed_str (1 samples, 0.11%)</title><rect x="69.9448%" y="325" width="0.1105%" height="15" fill="rgb(229,68,17)" fg:x="633" fg:w="1"/><text x="70.1948%" y="335.50"></text></g><g><title>maelstrom-txn`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.11%)</title><rect x="70.6077%" y="277" width="0.1105%" height="15" fill="rgb(213,182,10)" fg:x="639" fg:w="1"/><text x="70.8577%" y="287.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.33%)</title><rect x="70.7182%" y="277" width="0.3315%" height="15" fill="rgb(245,125,30)" fg:x="640" fg:w="3"/><text x="70.9682%" y="287.50"></text></g><g><title>maelstrom-txn`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (2 samples, 0.22%)</title><rect x="70.8287%" y="261" width="0.2210%" height="15" fill="rgb(232,202,2)" fg:x="641" fg:w="2"/><text x="71.0787%" y="271.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (2 samples, 0.22%)</title><rect x="70.8287%" y="245" width="0.2210%" height="15" fill="rgb(237,140,51)" fg:x="641" fg:w="2"/><text x="71.0787%" y="255.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (11 samples, 1.22%)</title><rect x="69.9448%" y="405" width="1.2155%" height="15" fill="rgb(236,157,25)" fg:x="633" fg:w="11"/><text x="70.1948%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11 samples, 1.22%)</title><rect x="69.9448%" y="389" width="1.2155%" height="15" fill="rgb(219,209,0)" fg:x="633" fg:w="11"/><text x="70.1948%" y="399.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (11 samples, 1.22%)</title><rect x="69.9448%" y="373" width="1.2155%" height="15" fill="rgb(240,116,54)" fg:x="633" fg:w="11"/><text x="70.1948%" y="383.50"></text></g><g><title>maelstrom-txn`serde::de::Deserializer::__deserialize_content (11 samples, 1.22%)</title><rect x="69.9448%" y="357" width="1.2155%" height="15" fill="rgb(216,10,36)" fg:x="633" fg:w="11"/><text x="70.1948%" y="367.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 1.22%)</title><rect x="69.9448%" y="341" width="1.2155%" height="15" fill="rgb(222,72,44)" fg:x="633" fg:w="11"/><text x="70.1948%" y="351.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (10 samples, 1.10%)</title><rect x="70.0552%" y="325" width="1.1050%" height="15" fill="rgb(232,159,9)" fg:x="634" fg:w="10"/><text x="70.3052%" y="335.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::parse_str_bytes (10 samples, 1.10%)</title><rect x="70.0552%" y="309" width="1.1050%" height="15" fill="rgb(210,39,32)" fg:x="634" fg:w="10"/><text x="70.3052%" y="319.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::skip_to_escape (9 samples, 0.99%)</title><rect x="70.1657%" y="293" width="0.9945%" height="15" fill="rgb(216,194,45)" fg:x="635" fg:w="9"/><text x="70.4157%" y="303.50"></text></g><g><title>maelstrom-txn`core::slice::_&lt;impl [T]&gt;::chunks_exact (1 samples, 0.11%)</title><rect x="71.0497%" y="277" width="0.1105%" height="15" fill="rgb(218,18,35)" fg:x="643" fg:w="1"/><text x="71.2997%" y="287.50"></text></g><g><title>maelstrom-txn`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.11%)</title><rect x="71.0497%" y="261" width="0.1105%" height="15" fill="rgb(207,83,51)" fg:x="643" fg:w="1"/><text x="71.2997%" y="271.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.11%)</title><rect x="71.0497%" y="245" width="0.1105%" height="15" fill="rgb(225,63,43)" fg:x="643" fg:w="1"/><text x="71.2997%" y="255.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str::_{{closure}} (1 samples, 0.11%)</title><rect x="71.2707%" y="293" width="0.1105%" height="15" fill="rgb(207,57,36)" fg:x="645" fg:w="1"/><text x="71.5207%" y="303.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="71.4917%" y="277" width="0.1105%" height="15" fill="rgb(216,99,33)" fg:x="647" fg:w="1"/><text x="71.7417%" y="287.50"></text></g><g><title>maelstrom-txn`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.11%)</title><rect x="71.4917%" y="261" width="0.1105%" height="15" fill="rgb(225,42,16)" fg:x="647" fg:w="1"/><text x="71.7417%" y="271.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.11%)</title><rect x="71.4917%" y="245" width="0.1105%" height="15" fill="rgb(220,201,45)" fg:x="647" fg:w="1"/><text x="71.7417%" y="255.50"></text></g><g><title>maelstrom-txn`core::slice::_&lt;impl [T]&gt;::chunks_exact (5 samples, 0.55%)</title><rect x="71.6022%" y="277" width="0.5525%" height="15" fill="rgb(225,33,4)" fg:x="648" fg:w="5"/><text x="71.8522%" y="287.50"></text></g><g><title>maelstrom-txn`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (2 samples, 0.22%)</title><rect x="71.9337%" y="261" width="0.2210%" height="15" fill="rgb(224,33,50)" fg:x="651" fg:w="2"/><text x="72.1837%" y="271.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (10 samples, 1.10%)</title><rect x="71.1602%" y="325" width="1.1050%" height="15" fill="rgb(246,198,51)" fg:x="644" fg:w="10"/><text x="71.4102%" y="335.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::parse_str_bytes (10 samples, 1.10%)</title><rect x="71.1602%" y="309" width="1.1050%" height="15" fill="rgb(205,22,4)" fg:x="644" fg:w="10"/><text x="71.4102%" y="319.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::skip_to_escape (8 samples, 0.88%)</title><rect x="71.3812%" y="293" width="0.8840%" height="15" fill="rgb(206,3,8)" fg:x="646" fg:w="8"/><text x="71.6312%" y="303.50"></text></g><g><title>maelstrom-txn`serde_json::read::is_escape (1 samples, 0.11%)</title><rect x="72.1547%" y="277" width="0.1105%" height="15" fill="rgb(251,23,15)" fg:x="653" fg:w="1"/><text x="72.4047%" y="287.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (62 samples, 6.85%)</title><rect x="65.6354%" y="565" width="6.8508%" height="15" fill="rgb(252,88,28)" fg:x="594" fg:w="62"/><text x="65.8854%" y="575.50">maelstrom..</text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (25 samples, 2.76%)</title><rect x="69.7238%" y="549" width="2.7624%" height="15" fill="rgb(212,127,14)" fg:x="631" fg:w="25"/><text x="69.9738%" y="559.50">ma..</text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (25 samples, 2.76%)</title><rect x="69.7238%" y="533" width="2.7624%" height="15" fill="rgb(247,145,37)" fg:x="631" fg:w="25"/><text x="69.9738%" y="543.50">ma..</text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (25 samples, 2.76%)</title><rect x="69.7238%" y="517" width="2.7624%" height="15" fill="rgb(209,117,53)" fg:x="631" fg:w="25"/><text x="69.9738%" y="527.50">ma..</text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (25 samples, 2.76%)</title><rect x="69.7238%" y="501" width="2.7624%" height="15" fill="rgb(212,90,42)" fg:x="631" fg:w="25"/><text x="69.9738%" y="511.50">ma..</text></g><g><title>maelstrom-txn`serde::de::Deserializer::__deserialize_content (25 samples, 2.76%)</title><rect x="69.7238%" y="485" width="2.7624%" height="15" fill="rgb(218,164,37)" fg:x="631" fg:w="25"/><text x="69.9738%" y="495.50">ma..</text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (25 samples, 2.76%)</title><rect x="69.7238%" y="469" width="2.7624%" height="15" fill="rgb(246,65,34)" fg:x="631" fg:w="25"/><text x="69.9738%" y="479.50">ma..</text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (25 samples, 2.76%)</title><rect x="69.7238%" y="453" width="2.7624%" height="15" fill="rgb(231,100,33)" fg:x="631" fg:w="25"/><text x="69.9738%" y="463.50">ma..</text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_entry (23 samples, 2.54%)</title><rect x="69.9448%" y="437" width="2.5414%" height="15" fill="rgb(228,126,14)" fg:x="633" fg:w="23"/><text x="70.1948%" y="447.50">ma..</text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_entry_seed (23 samples, 2.54%)</title><rect x="69.9448%" y="421" width="2.5414%" height="15" fill="rgb(215,173,21)" fg:x="633" fg:w="23"/><text x="70.1948%" y="431.50">ma..</text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (12 samples, 1.33%)</title><rect x="71.1602%" y="405" width="1.3260%" height="15" fill="rgb(210,6,40)" fg:x="644" fg:w="12"/><text x="71.4102%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12 samples, 1.33%)</title><rect x="71.1602%" y="389" width="1.3260%" height="15" fill="rgb(212,48,18)" fg:x="644" fg:w="12"/><text x="71.4102%" y="399.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (12 samples, 1.33%)</title><rect x="71.1602%" y="373" width="1.3260%" height="15" fill="rgb(230,214,11)" fg:x="644" fg:w="12"/><text x="71.4102%" y="383.50"></text></g><g><title>maelstrom-txn`serde::de::Deserializer::__deserialize_content (12 samples, 1.33%)</title><rect x="71.1602%" y="357" width="1.3260%" height="15" fill="rgb(254,105,39)" fg:x="644" fg:w="12"/><text x="71.4102%" y="367.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 1.33%)</title><rect x="71.1602%" y="341" width="1.3260%" height="15" fill="rgb(245,158,5)" fg:x="644" fg:w="12"/><text x="71.4102%" y="351.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::clear (2 samples, 0.22%)</title><rect x="72.2652%" y="325" width="0.2210%" height="15" fill="rgb(249,208,11)" fg:x="654" fg:w="2"/><text x="72.5152%" y="335.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts_mut::precondition_check (1 samples, 0.11%)</title><rect x="72.3757%" y="309" width="0.1105%" height="15" fill="rgb(210,39,28)" fg:x="655" fg:w="1"/><text x="72.6257%" y="319.50"></text></g><g><title>maelstrom-txn`serde_json::de::from_str (63 samples, 6.96%)</title><rect x="65.6354%" y="725" width="6.9613%" height="15" fill="rgb(211,56,53)" fg:x="594" fg:w="63"/><text x="65.8854%" y="735.50">maelstrom..</text></g><g><title>maelstrom-txn`serde_json::de::from_trait (63 samples, 6.96%)</title><rect x="65.6354%" y="709" width="6.9613%" height="15" fill="rgb(226,201,30)" fg:x="594" fg:w="63"/><text x="65.8854%" y="719.50">maelstrom..</text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize (63 samples, 6.96%)</title><rect x="65.6354%" y="693" width="6.9613%" height="15" fill="rgb(239,101,34)" fg:x="594" fg:w="63"/><text x="65.8854%" y="703.50">maelstrom..</text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (63 samples, 6.96%)</title><rect x="65.6354%" y="677" width="6.9613%" height="15" fill="rgb(226,209,5)" fg:x="594" fg:w="63"/><text x="65.8854%" y="687.50">maelstrom..</text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (63 samples, 6.96%)</title><rect x="65.6354%" y="661" width="6.9613%" height="15" fill="rgb(250,105,47)" fg:x="594" fg:w="63"/><text x="65.8854%" y="671.50">maelstrom..</text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (63 samples, 6.96%)</title><rect x="65.6354%" y="645" width="6.9613%" height="15" fill="rgb(230,72,3)" fg:x="594" fg:w="63"/><text x="65.8854%" y="655.50">maelstrom..</text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (63 samples, 6.96%)</title><rect x="65.6354%" y="629" width="6.9613%" height="15" fill="rgb(232,218,39)" fg:x="594" fg:w="63"/><text x="65.8854%" y="639.50">maelstrom..</text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (63 samples, 6.96%)</title><rect x="65.6354%" y="613" width="6.9613%" height="15" fill="rgb(248,166,6)" fg:x="594" fg:w="63"/><text x="65.8854%" y="623.50">maelstrom..</text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize (63 samples, 6.96%)</title><rect x="65.6354%" y="597" width="6.9613%" height="15" fill="rgb(247,89,20)" fg:x="594" fg:w="63"/><text x="65.8854%" y="607.50">maelstrom..</text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (63 samples, 6.96%)</title><rect x="65.6354%" y="581" width="6.9613%" height="15" fill="rgb(248,130,54)" fg:x="594" fg:w="63"/><text x="65.8854%" y="591.50">maelstrom..</text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::end_map (1 samples, 0.11%)</title><rect x="72.4862%" y="565" width="0.1105%" height="15" fill="rgb(234,196,4)" fg:x="656" fg:w="1"/><text x="72.7362%" y="575.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1 samples, 0.11%)</title><rect x="72.4862%" y="549" width="0.1105%" height="15" fill="rgb(250,143,31)" fg:x="656" fg:w="1"/><text x="72.7362%" y="559.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::peek (1 samples, 0.11%)</title><rect x="72.4862%" y="533" width="0.1105%" height="15" fill="rgb(211,110,34)" fg:x="656" fg:w="1"/><text x="72.7362%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1 samples, 0.11%)</title><rect x="72.4862%" y="517" width="0.1105%" height="15" fill="rgb(215,124,48)" fg:x="656" fg:w="1"/><text x="72.7362%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.11%)</title><rect x="72.4862%" y="501" width="0.1105%" height="15" fill="rgb(216,46,13)" fg:x="656" fg:w="1"/><text x="72.7362%" y="511.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_string (1 samples, 0.11%)</title><rect x="72.5967%" y="725" width="0.1105%" height="15" fill="rgb(205,184,25)" fg:x="657" fg:w="1"/><text x="72.8467%" y="735.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_vec (1 samples, 0.11%)</title><rect x="72.5967%" y="709" width="0.1105%" height="15" fill="rgb(228,1,10)" fg:x="657" fg:w="1"/><text x="72.8467%" y="719.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_writer (1 samples, 0.11%)</title><rect x="72.5967%" y="693" width="0.1105%" height="15" fill="rgb(213,116,27)" fg:x="657" fg:w="1"/><text x="72.8467%" y="703.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::Message&gt;::serialize (1 samples, 0.11%)</title><rect x="72.5967%" y="677" width="0.1105%" height="15" fill="rgb(241,95,50)" fg:x="657" fg:w="1"/><text x="72.8467%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.11%)</title><rect x="72.5967%" y="661" width="0.1105%" height="15" fill="rgb(238,48,32)" fg:x="657" fg:w="1"/><text x="72.8467%" y="671.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (1 samples, 0.11%)</title><rect x="72.5967%" y="645" width="0.1105%" height="15" fill="rgb(235,113,49)" fg:x="657" fg:w="1"/><text x="72.8467%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.11%)</title><rect x="72.5967%" y="629" width="0.1105%" height="15" fill="rgb(205,127,43)" fg:x="657" fg:w="1"/><text x="72.8467%" y="639.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::MessageBody&gt;::serialize (1 samples, 0.11%)</title><rect x="72.5967%" y="613" width="0.1105%" height="15" fill="rgb(250,162,2)" fg:x="657" fg:w="1"/><text x="72.8467%" y="623.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.11%)</title><rect x="72.5967%" y="597" width="0.1105%" height="15" fill="rgb(220,13,41)" fg:x="657" fg:w="1"/><text x="72.8467%" y="607.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::MessageExtra&gt;::serialize (1 samples, 0.11%)</title><rect x="72.5967%" y="581" width="0.1105%" height="15" fill="rgb(249,221,25)" fg:x="657" fg:w="1"/><text x="72.8467%" y="591.50"></text></g><g><title>maelstrom-txn`serde::__private::ser::serialize_tagged_newtype (1 samples, 0.11%)</title><rect x="72.5967%" y="565" width="0.1105%" height="15" fill="rgb(215,208,19)" fg:x="657" fg:w="1"/><text x="72.8467%" y="575.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::KvReadExtra&gt;::serialize (1 samples, 0.11%)</title><rect x="72.5967%" y="549" width="0.1105%" height="15" fill="rgb(236,175,2)" fg:x="657" fg:w="1"/><text x="72.8467%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::ser::FlatMapSerializeStruct&lt;M&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.11%)</title><rect x="72.5967%" y="533" width="0.1105%" height="15" fill="rgb(241,52,2)" fg:x="657" fg:w="1"/><text x="72.8467%" y="543.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (1 samples, 0.11%)</title><rect x="72.5967%" y="517" width="0.1105%" height="15" fill="rgb(248,140,14)" fg:x="657" fg:w="1"/><text x="72.8467%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.11%)</title><rect x="72.5967%" y="501" width="0.1105%" height="15" fill="rgb(253,22,42)" fg:x="657" fg:w="1"/><text x="72.8467%" y="511.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.11%)</title><rect x="72.5967%" y="485" width="0.1105%" height="15" fill="rgb(234,61,47)" fg:x="657" fg:w="1"/><text x="72.8467%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.11%)</title><rect x="72.5967%" y="469" width="0.1105%" height="15" fill="rgb(208,226,15)" fg:x="657" fg:w="1"/><text x="72.8467%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.11%)</title><rect x="72.5967%" y="453" width="0.1105%" height="15" fill="rgb(217,221,4)" fg:x="657" fg:w="1"/><text x="72.8467%" y="463.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (1 samples, 0.11%)</title><rect x="72.5967%" y="437" width="0.1105%" height="15" fill="rgb(212,174,34)" fg:x="657" fg:w="1"/><text x="72.8467%" y="447.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_string (1 samples, 0.11%)</title><rect x="72.5967%" y="421" width="0.1105%" height="15" fill="rgb(253,83,4)" fg:x="657" fg:w="1"/><text x="72.8467%" y="431.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.11%)</title><rect x="72.5967%" y="405" width="0.1105%" height="15" fill="rgb(250,195,49)" fg:x="657" fg:w="1"/><text x="72.8467%" y="415.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.11%)</title><rect x="72.5967%" y="389" width="0.1105%" height="15" fill="rgb(241,192,25)" fg:x="657" fg:w="1"/><text x="72.8467%" y="399.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="72.5967%" y="373" width="0.1105%" height="15" fill="rgb(208,124,10)" fg:x="657" fg:w="1"/><text x="72.8467%" y="383.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="72.5967%" y="357" width="0.1105%" height="15" fill="rgb(222,33,0)" fg:x="657" fg:w="1"/><text x="72.8467%" y="367.50"></text></g><g><title>maelstrom-txn`maelstrom_node::node::Node::sync_rpc (65 samples, 7.18%)</title><rect x="65.6354%" y="741" width="7.1823%" height="15" fill="rgb(234,209,28)" fg:x="594" fg:w="65"/><text x="65.8854%" y="751.50">maelstrom-..</text></g><g><title>maelstrom-txn`std::io::stdio::_eprint (1 samples, 0.11%)</title><rect x="72.7072%" y="725" width="0.1105%" height="15" fill="rgb(224,11,23)" fg:x="658" fg:w="1"/><text x="72.9572%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (1 samples, 0.11%)</title><rect x="72.7072%" y="709" width="0.1105%" height="15" fill="rgb(232,99,1)" fg:x="658" fg:w="1"/><text x="72.9572%" y="719.50"></text></g><g><title>maelstrom-txn`core::fmt::write (1 samples, 0.11%)</title><rect x="72.7072%" y="693" width="0.1105%" height="15" fill="rgb(237,95,45)" fg:x="658" fg:w="1"/><text x="72.9572%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="72.7072%" y="677" width="0.1105%" height="15" fill="rgb(208,109,11)" fg:x="658" fg:w="1"/><text x="72.9572%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.11%)</title><rect x="72.7072%" y="661" width="0.1105%" height="15" fill="rgb(216,190,48)" fg:x="658" fg:w="1"/><text x="72.9572%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;alloc::borrow::Cow&lt;B&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.11%)</title><rect x="72.9282%" y="549" width="0.1105%" height="15" fill="rgb(251,171,36)" fg:x="660" fg:w="1"/><text x="73.1782%" y="559.50"></text></g><g><title>maelstrom-txn`alloc::str::_&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (1 samples, 0.11%)</title><rect x="72.9282%" y="533" width="0.1105%" height="15" fill="rgb(230,62,22)" fg:x="660" fg:w="1"/><text x="73.1782%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.11%)</title><rect x="72.9282%" y="517" width="0.1105%" height="15" fill="rgb(225,114,35)" fg:x="660" fg:w="1"/><text x="73.1782%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.11%)</title><rect x="73.0387%" y="437" width="0.1105%" height="15" fill="rgb(215,118,42)" fg:x="661" fg:w="1"/><text x="73.2887%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.11%)</title><rect x="73.0387%" y="421" width="0.1105%" height="15" fill="rgb(243,119,21)" fg:x="661" fg:w="1"/><text x="73.2887%" y="431.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;serde_json::value::de::MapKeyDeserializer&gt; (2 samples, 0.22%)</title><rect x="73.0387%" y="549" width="0.2210%" height="15" fill="rgb(252,177,53)" fg:x="661" fg:w="2"/><text x="73.2887%" y="559.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::borrow::Cow&lt;str&gt;&gt; (2 samples, 0.22%)</title><rect x="73.0387%" y="533" width="0.2210%" height="15" fill="rgb(237,209,29)" fg:x="661" fg:w="2"/><text x="73.2887%" y="543.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.22%)</title><rect x="73.0387%" y="517" width="0.2210%" height="15" fill="rgb(212,65,23)" fg:x="661" fg:w="2"/><text x="73.2887%" y="527.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.22%)</title><rect x="73.0387%" y="501" width="0.2210%" height="15" fill="rgb(230,222,46)" fg:x="661" fg:w="2"/><text x="73.2887%" y="511.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.22%)</title><rect x="73.0387%" y="485" width="0.2210%" height="15" fill="rgb(215,135,32)" fg:x="661" fg:w="2"/><text x="73.2887%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.22%)</title><rect x="73.0387%" y="469" width="0.2210%" height="15" fill="rgb(246,101,22)" fg:x="661" fg:w="2"/><text x="73.2887%" y="479.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2 samples, 0.22%)</title><rect x="73.0387%" y="453" width="0.2210%" height="15" fill="rgb(206,107,13)" fg:x="661" fg:w="2"/><text x="73.2887%" y="463.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1 samples, 0.11%)</title><rect x="73.1492%" y="437" width="0.1105%" height="15" fill="rgb(250,100,44)" fg:x="662" fg:w="1"/><text x="73.3992%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for usize&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_u64 (1 samples, 0.11%)</title><rect x="73.2597%" y="533" width="0.1105%" height="15" fill="rgb(231,147,38)" fg:x="663" fg:w="1"/><text x="73.5097%" y="543.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::parse_number (2 samples, 0.22%)</title><rect x="73.4807%" y="517" width="0.2210%" height="15" fill="rgb(229,8,40)" fg:x="665" fg:w="2"/><text x="73.7307%" y="527.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::peek_or_null (1 samples, 0.11%)</title><rect x="73.5912%" y="501" width="0.1105%" height="15" fill="rgb(221,135,30)" fg:x="666" fg:w="1"/><text x="73.8412%" y="511.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::peek (1 samples, 0.11%)</title><rect x="73.5912%" y="485" width="0.1105%" height="15" fill="rgb(249,193,18)" fg:x="666" fg:w="1"/><text x="73.8412%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1 samples, 0.11%)</title><rect x="73.5912%" y="469" width="0.1105%" height="15" fill="rgb(209,133,39)" fg:x="666" fg:w="1"/><text x="73.8412%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.11%)</title><rect x="73.5912%" y="453" width="0.1105%" height="15" fill="rgb(232,100,14)" fg:x="666" fg:w="1"/><text x="73.8412%" y="463.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::deserialize_number (5 samples, 0.55%)</title><rect x="73.2597%" y="549" width="0.5525%" height="15" fill="rgb(224,185,1)" fg:x="663" fg:w="5"/><text x="73.5097%" y="559.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::parse_integer (4 samples, 0.44%)</title><rect x="73.3702%" y="533" width="0.4420%" height="15" fill="rgb(223,139,8)" fg:x="664" fg:w="4"/><text x="73.6202%" y="543.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::peek_or_null (1 samples, 0.11%)</title><rect x="73.7017%" y="517" width="0.1105%" height="15" fill="rgb(232,213,38)" fg:x="667" fg:w="1"/><text x="73.9517%" y="527.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::peek (1 samples, 0.11%)</title><rect x="73.7017%" y="501" width="0.1105%" height="15" fill="rgb(207,94,22)" fg:x="667" fg:w="1"/><text x="73.9517%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1 samples, 0.11%)</title><rect x="73.7017%" y="485" width="0.1105%" height="15" fill="rgb(219,183,54)" fg:x="667" fg:w="1"/><text x="73.9517%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10 samples, 1.10%)</title><rect x="72.8177%" y="597" width="1.1050%" height="15" fill="rgb(216,185,54)" fg:x="659" fg:w="10"/><text x="73.0677%" y="607.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for usize&gt;::deserialize (10 samples, 1.10%)</title><rect x="72.8177%" y="581" width="1.1050%" height="15" fill="rgb(254,217,39)" fg:x="659" fg:w="10"/><text x="73.0677%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::de::MapKeyDeserializer as serde::de::Deserializer&gt;::deserialize_u64 (10 samples, 1.10%)</title><rect x="72.8177%" y="565" width="1.1050%" height="15" fill="rgb(240,178,23)" fg:x="659" fg:w="10"/><text x="73.0677%" y="575.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::peek (1 samples, 0.11%)</title><rect x="73.8122%" y="549" width="0.1105%" height="15" fill="rgb(218,11,47)" fg:x="668" fg:w="1"/><text x="74.0622%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1 samples, 0.11%)</title><rect x="73.8122%" y="533" width="0.1105%" height="15" fill="rgb(218,51,51)" fg:x="668" fg:w="1"/><text x="74.0622%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.11%)</title><rect x="73.8122%" y="517" width="0.1105%" height="15" fill="rgb(238,126,27)" fg:x="668" fg:w="1"/><text x="74.0622%" y="527.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.22%)</title><rect x="73.9227%" y="565" width="0.2210%" height="15" fill="rgb(249,202,22)" fg:x="669" fg:w="2"/><text x="74.1727%" y="575.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (2 samples, 0.22%)</title><rect x="73.9227%" y="549" width="0.2210%" height="15" fill="rgb(254,195,49)" fg:x="669" fg:w="2"/><text x="74.1727%" y="559.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::mem::replace (1 samples, 0.11%)</title><rect x="74.0331%" y="533" width="0.1105%" height="15" fill="rgb(208,123,14)" fg:x="670" fg:w="1"/><text x="74.2831%" y="543.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1 samples, 0.11%)</title><rect x="74.0331%" y="517" width="0.1105%" height="15" fill="rgb(224,200,8)" fg:x="670" fg:w="1"/><text x="74.2831%" y="527.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (1 samples, 0.11%)</title><rect x="74.0331%" y="501" width="0.1105%" height="15" fill="rgb(217,61,36)" fg:x="670" fg:w="1"/><text x="74.2831%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::MapAccess&gt;::next_entry (13 samples, 1.44%)</title><rect x="72.8177%" y="661" width="1.4365%" height="15" fill="rgb(206,35,45)" fg:x="659" fg:w="13"/><text x="73.0677%" y="671.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_entry (13 samples, 1.44%)</title><rect x="72.8177%" y="645" width="1.4365%" height="15" fill="rgb(217,65,33)" fg:x="659" fg:w="13"/><text x="73.0677%" y="655.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_entry_seed (13 samples, 1.44%)</title><rect x="72.8177%" y="629" width="1.4365%" height="15" fill="rgb(222,158,48)" fg:x="659" fg:w="13"/><text x="73.0677%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (13 samples, 1.44%)</title><rect x="72.8177%" y="613" width="1.4365%" height="15" fill="rgb(254,2,54)" fg:x="659" fg:w="13"/><text x="73.0677%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::map::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.33%)</title><rect x="73.9227%" y="597" width="0.3315%" height="15" fill="rgb(250,143,38)" fg:x="669" fg:w="3"/><text x="74.1727%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.33%)</title><rect x="73.9227%" y="581" width="0.3315%" height="15" fill="rgb(248,25,0)" fg:x="669" fg:w="3"/><text x="74.1727%" y="591.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_key_val (1 samples, 0.11%)</title><rect x="74.1436%" y="565" width="0.1105%" height="15" fill="rgb(206,152,27)" fg:x="671" fg:w="1"/><text x="74.3936%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.11%)</title><rect x="74.2541%" y="581" width="0.1105%" height="15" fill="rgb(240,77,30)" fg:x="672" fg:w="1"/><text x="74.5041%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.33%)</title><rect x="74.2541%" y="613" width="0.3315%" height="15" fill="rgb(231,5,3)" fg:x="672" fg:w="3"/><text x="74.5041%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.33%)</title><rect x="74.2541%" y="597" width="0.3315%" height="15" fill="rgb(207,226,32)" fg:x="672" fg:w="3"/><text x="74.5041%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.22%)</title><rect x="74.3646%" y="581" width="0.2210%" height="15" fill="rgb(222,207,47)" fg:x="673" fg:w="2"/><text x="74.6146%" y="591.50"></text></g><g><title>maelstrom-txn`core::hash::BuildHasher::hash_one (4 samples, 0.44%)</title><rect x="74.2541%" y="629" width="0.4420%" height="15" fill="rgb(229,115,45)" fg:x="672" fg:w="4"/><text x="74.5041%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.11%)</title><rect x="74.5856%" y="613" width="0.1105%" height="15" fill="rgb(224,191,6)" fg:x="675" fg:w="1"/><text x="74.8356%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.11%)</title><rect x="74.5856%" y="597" width="0.1105%" height="15" fill="rgb(230,227,24)" fg:x="675" fg:w="1"/><text x="74.8356%" y="607.50"></text></g><g><title>maelstrom-txn`core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.11%)</title><rect x="74.8066%" y="597" width="0.1105%" height="15" fill="rgb(228,80,19)" fg:x="677" fg:w="1"/><text x="75.0566%" y="607.50"></text></g><g><title>maelstrom-txn`core::core_arch::x86::m128iExt::as_i8x16 (1 samples, 0.11%)</title><rect x="74.8066%" y="581" width="0.1105%" height="15" fill="rgb(247,229,0)" fg:x="677" fg:w="1"/><text x="75.0566%" y="591.50"></text></g><g><title>maelstrom-txn`core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.11%)</title><rect x="74.9171%" y="597" width="0.1105%" height="15" fill="rgb(237,194,15)" fg:x="678" fg:w="1"/><text x="75.1671%" y="607.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.11%)</title><rect x="74.9171%" y="581" width="0.1105%" height="15" fill="rgb(219,203,20)" fg:x="678" fg:w="1"/><text x="75.1671%" y="591.50"></text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Transactor::get_root (88 samples, 9.72%)</title><rect x="65.6354%" y="757" width="9.7238%" height="15" fill="rgb(234,128,8)" fg:x="594" fg:w="88"/><text x="65.8854%" y="767.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`serde_json::value::from_value (23 samples, 2.54%)</title><rect x="72.8177%" y="741" width="2.5414%" height="15" fill="rgb(248,202,8)" fg:x="659" fg:w="23"/><text x="73.0677%" y="751.50">ma..</text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (23 samples, 2.54%)</title><rect x="72.8177%" y="725" width="2.5414%" height="15" fill="rgb(206,104,37)" fg:x="659" fg:w="23"/><text x="73.0677%" y="735.50">ma..</text></g><g><title>maelstrom-txn`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (23 samples, 2.54%)</title><rect x="72.8177%" y="709" width="2.5414%" height="15" fill="rgb(223,8,27)" fg:x="659" fg:w="23"/><text x="73.0677%" y="719.50">ma..</text></g><g><title>maelstrom-txn`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (23 samples, 2.54%)</title><rect x="72.8177%" y="693" width="2.5414%" height="15" fill="rgb(216,217,28)" fg:x="659" fg:w="23"/><text x="73.0677%" y="703.50">ma..</text></g><g><title>maelstrom-txn`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize::MapVisitor&lt;K,V,S&gt; as serde::de::Visitor&gt;::visit_map (23 samples, 2.54%)</title><rect x="72.8177%" y="677" width="2.5414%" height="15" fill="rgb(249,199,1)" fg:x="659" fg:w="23"/><text x="73.0677%" y="687.50">ma..</text></g><g><title>maelstrom-txn`std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (10 samples, 1.10%)</title><rect x="74.2541%" y="661" width="1.1050%" height="15" fill="rgb(240,85,17)" fg:x="672" fg:w="10"/><text x="74.5041%" y="671.50"></text></g><g><title>maelstrom-txn`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 1.10%)</title><rect x="74.2541%" y="645" width="1.1050%" height="15" fill="rgb(206,108,45)" fg:x="672" fg:w="10"/><text x="74.5041%" y="655.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (6 samples, 0.66%)</title><rect x="74.6961%" y="629" width="0.6630%" height="15" fill="rgb(245,210,41)" fg:x="676" fg:w="6"/><text x="74.9461%" y="639.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (5 samples, 0.55%)</title><rect x="74.8066%" y="613" width="0.5525%" height="15" fill="rgb(206,13,37)" fg:x="677" fg:w="5"/><text x="75.0566%" y="623.50"></text></g><g><title>maelstrom-txn`core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.33%)</title><rect x="75.0276%" y="597" width="0.3315%" height="15" fill="rgb(250,61,18)" fg:x="679" fg:w="3"/><text x="75.2776%" y="607.50"></text></g><g><title>maelstrom-txn`core::clone::Clone::clone (1 samples, 0.11%)</title><rect x="75.3591%" y="661" width="0.1105%" height="15" fill="rgb(235,172,48)" fg:x="682" fg:w="1"/><text x="75.6091%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="75.3591%" y="645" width="0.1105%" height="15" fill="rgb(249,201,17)" fg:x="682" fg:w="1"/><text x="75.6091%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.11%)</title><rect x="75.3591%" y="629" width="0.1105%" height="15" fill="rgb(219,208,6)" fg:x="682" fg:w="1"/><text x="75.6091%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2 samples, 0.22%)</title><rect x="75.3591%" y="693" width="0.2210%" height="15" fill="rgb(248,31,23)" fg:x="682" fg:w="2"/><text x="75.6091%" y="703.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2 samples, 0.22%)</title><rect x="75.3591%" y="677" width="0.2210%" height="15" fill="rgb(245,15,42)" fg:x="682" fg:w="2"/><text x="75.6091%" y="687.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.11%)</title><rect x="75.4696%" y="661" width="0.1105%" height="15" fill="rgb(222,217,39)" fg:x="683" fg:w="1"/><text x="75.7196%" y="671.50"></text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Transactor::merge (3 samples, 0.33%)</title><rect x="75.3591%" y="757" width="0.3315%" height="15" fill="rgb(210,219,27)" fg:x="682" fg:w="3"/><text x="75.6091%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (3 samples, 0.33%)</title><rect x="75.3591%" y="741" width="0.3315%" height="15" fill="rgb(252,166,36)" fg:x="682" fg:w="3"/><text x="75.6091%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.33%)</title><rect x="75.3591%" y="725" width="0.3315%" height="15" fill="rgb(245,132,34)" fg:x="682" fg:w="3"/><text x="75.6091%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.33%)</title><rect x="75.3591%" y="709" width="0.3315%" height="15" fill="rgb(236,54,3)" fg:x="682" fg:w="3"/><text x="75.6091%" y="719.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.11%)</title><rect x="75.5801%" y="693" width="0.1105%" height="15" fill="rgb(241,173,43)" fg:x="684" fg:w="1"/><text x="75.8301%" y="703.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.11%)</title><rect x="75.5801%" y="677" width="0.1105%" height="15" fill="rgb(215,190,9)" fg:x="684" fg:w="1"/><text x="75.8301%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="75.5801%" y="661" width="0.1105%" height="15" fill="rgb(242,101,16)" fg:x="684" fg:w="1"/><text x="75.8301%" y="671.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="75.5801%" y="645" width="0.1105%" height="15" fill="rgb(223,190,21)" fg:x="684" fg:w="1"/><text x="75.8301%" y="655.50"></text></g><g><title>maelstrom-txn`alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="75.5801%" y="629" width="0.1105%" height="15" fill="rgb(215,228,25)" fg:x="684" fg:w="1"/><text x="75.8301%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.11%)</title><rect x="75.5801%" y="613" width="0.1105%" height="15" fill="rgb(225,36,22)" fg:x="684" fg:w="1"/><text x="75.8301%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="75.6906%" y="693" width="0.1105%" height="15" fill="rgb(251,106,46)" fg:x="685" fg:w="1"/><text x="75.9406%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.22%)</title><rect x="75.8011%" y="661" width="0.2210%" height="15" fill="rgb(208,90,1)" fg:x="686" fg:w="2"/><text x="76.0511%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (51 samples, 5.64%)</title><rect x="76.1326%" y="597" width="5.6354%" height="15" fill="rgb(243,10,4)" fg:x="689" fg:w="51"/><text x="76.3826%" y="607.50">maelstr..</text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (46 samples, 5.08%)</title><rect x="76.6851%" y="581" width="5.0829%" height="15" fill="rgb(212,137,27)" fg:x="694" fg:w="46"/><text x="76.9351%" y="591.50">maelst..</text></g><g><title>libsystem_kernel.dylib`write (45 samples, 4.97%)</title><rect x="76.7956%" y="565" width="4.9724%" height="15" fill="rgb(231,220,49)" fg:x="695" fg:w="45"/><text x="77.0456%" y="575.50">libsys..</text></g><g><title>maelstrom-txn`&lt;&amp;T as core::fmt::Debug&gt;::fmt (53 samples, 5.86%)</title><rect x="76.0221%" y="645" width="5.8564%" height="15" fill="rgb(237,96,20)" fg:x="688" fg:w="53"/><text x="76.2721%" y="655.50">maelstr..</text></g><g><title>maelstrom-txn`core::fmt::num::_&lt;impl core::fmt::Debug for usize&gt;::fmt (53 samples, 5.86%)</title><rect x="76.0221%" y="629" width="5.8564%" height="15" fill="rgb(239,229,30)" fg:x="688" fg:w="53"/><text x="76.2721%" y="639.50">maelstr..</text></g><g><title>maelstrom-txn`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (53 samples, 5.86%)</title><rect x="76.0221%" y="613" width="5.8564%" height="15" fill="rgb(219,65,33)" fg:x="688" fg:w="53"/><text x="76.2721%" y="623.50">maelstr..</text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="81.7680%" y="597" width="0.1105%" height="15" fill="rgb(243,134,7)" fg:x="740" fg:w="1"/><text x="82.0180%" y="607.50"></text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::entry (75 samples, 8.29%)</title><rect x="75.8011%" y="677" width="8.2873%" height="15" fill="rgb(216,177,54)" fg:x="686" fg:w="75"/><text x="76.0511%" y="687.50">maelstrom-tx..</text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::key (73 samples, 8.07%)</title><rect x="76.0221%" y="661" width="8.0663%" height="15" fill="rgb(211,160,20)" fg:x="688" fg:w="73"/><text x="76.2721%" y="671.50">maelstrom-t..</text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (20 samples, 2.21%)</title><rect x="81.8785%" y="645" width="2.2099%" height="15" fill="rgb(239,85,39)" fg:x="741" fg:w="20"/><text x="82.1285%" y="655.50">m..</text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (19 samples, 2.10%)</title><rect x="81.9890%" y="629" width="2.0994%" height="15" fill="rgb(232,125,22)" fg:x="742" fg:w="19"/><text x="82.2390%" y="639.50">m..</text></g><g><title>libsystem_kernel.dylib`write (19 samples, 2.10%)</title><rect x="81.9890%" y="613" width="2.0994%" height="15" fill="rgb(244,57,34)" fg:x="742" fg:w="19"/><text x="82.2390%" y="623.50">l..</text></g><g><title>libsystem_kernel.dylib`write (25 samples, 2.76%)</title><rect x="84.6409%" y="581" width="2.7624%" height="15" fill="rgb(214,203,32)" fg:x="766" fg:w="25"/><text x="84.8909%" y="591.50">li..</text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (31 samples, 3.43%)</title><rect x="84.1989%" y="613" width="3.4254%" height="15" fill="rgb(207,58,43)" fg:x="762" fg:w="31"/><text x="84.4489%" y="623.50">mae..</text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (27 samples, 2.98%)</title><rect x="84.6409%" y="597" width="2.9834%" height="15" fill="rgb(215,193,15)" fg:x="766" fg:w="27"/><text x="84.8909%" y="607.50">mae..</text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (2 samples, 0.22%)</title><rect x="87.4033%" y="581" width="0.2210%" height="15" fill="rgb(232,15,44)" fg:x="791" fg:w="2"/><text x="87.6533%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`write (53 samples, 5.86%)</title><rect x="87.6243%" y="597" width="5.8564%" height="15" fill="rgb(212,3,48)" fg:x="793" fg:w="53"/><text x="87.8743%" y="607.50">libsyst..</text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::fmt::Debug&gt;::fmt (87 samples, 9.61%)</title><rect x="84.0884%" y="645" width="9.6133%" height="15" fill="rgb(218,128,7)" fg:x="761" fg:w="87"/><text x="84.3384%" y="655.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`&lt;str as core::fmt::Debug&gt;::fmt (86 samples, 9.50%)</title><rect x="84.1989%" y="629" width="9.5028%" height="15" fill="rgb(226,216,39)" fg:x="762" fg:w="86"/><text x="84.4489%" y="639.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`core::fmt::Write::write_char (55 samples, 6.08%)</title><rect x="87.6243%" y="613" width="6.0773%" height="15" fill="rgb(243,47,51)" fg:x="793" fg:w="55"/><text x="87.8743%" y="623.50">maelstro..</text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (2 samples, 0.22%)</title><rect x="93.4807%" y="597" width="0.2210%" height="15" fill="rgb(241,183,40)" fg:x="846" fg:w="2"/><text x="93.7307%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.22%)</title><rect x="93.7017%" y="581" width="0.2210%" height="15" fill="rgb(231,217,32)" fg:x="848" fg:w="2"/><text x="93.9517%" y="591.50"></text></g><g><title>maelstrom-txn`core::fmt::num::_&lt;impl core::fmt::Debug for usize&gt;::fmt (2 samples, 0.22%)</title><rect x="93.7017%" y="565" width="0.2210%" height="15" fill="rgb(229,61,38)" fg:x="848" fg:w="2"/><text x="93.9517%" y="575.50"></text></g><g><title>maelstrom-txn`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.22%)</title><rect x="93.7017%" y="549" width="0.2210%" height="15" fill="rgb(225,210,5)" fg:x="848" fg:w="2"/><text x="93.9517%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (2 samples, 0.22%)</title><rect x="93.7017%" y="533" width="0.2210%" height="15" fill="rgb(231,79,45)" fg:x="848" fg:w="2"/><text x="93.9517%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (2 samples, 0.22%)</title><rect x="93.7017%" y="517" width="0.2210%" height="15" fill="rgb(224,100,7)" fg:x="848" fg:w="2"/><text x="93.9517%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.22%)</title><rect x="93.7017%" y="501" width="0.2210%" height="15" fill="rgb(241,198,18)" fg:x="848" fg:w="2"/><text x="93.9517%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`write (2 samples, 0.22%)</title><rect x="93.7017%" y="485" width="0.2210%" height="15" fill="rgb(252,97,53)" fg:x="848" fg:w="2"/><text x="93.9517%" y="495.50"></text></g><g><title>maelstrom-txn`core::fmt::builders::DebugList::entries (3 samples, 0.33%)</title><rect x="93.7017%" y="613" width="0.3315%" height="15" fill="rgb(220,88,7)" fg:x="848" fg:w="3"/><text x="93.9517%" y="623.50"></text></g><g><title>maelstrom-txn`core::fmt::builders::DebugSet::entry (3 samples, 0.33%)</title><rect x="93.7017%" y="597" width="0.3315%" height="15" fill="rgb(213,176,14)" fg:x="848" fg:w="3"/><text x="93.9517%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="93.9227%" y="581" width="0.1105%" height="15" fill="rgb(246,73,7)" fg:x="850" fg:w="1"/><text x="94.1727%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="93.9227%" y="565" width="0.1105%" height="15" fill="rgb(245,64,36)" fg:x="850" fg:w="1"/><text x="94.1727%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="93.9227%" y="549" width="0.1105%" height="15" fill="rgb(245,80,10)" fg:x="850" fg:w="1"/><text x="94.1727%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.11%)</title><rect x="93.9227%" y="533" width="0.1105%" height="15" fill="rgb(232,107,50)" fg:x="850" fg:w="1"/><text x="94.1727%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;&amp;T as core::fmt::Debug&gt;::fmt (91 samples, 10.06%)</title><rect x="84.0884%" y="661" width="10.0552%" height="15" fill="rgb(253,3,0)" fg:x="761" fg:w="91"/><text x="84.3384%" y="671.50">maelstrom-txn`&lt;..</text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as core::fmt::Debug&gt;::fmt (4 samples, 0.44%)</title><rect x="93.7017%" y="645" width="0.4420%" height="15" fill="rgb(212,99,53)" fg:x="848" fg:w="4"/><text x="93.9517%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;[T] as core::fmt::Debug&gt;::fmt (4 samples, 0.44%)</title><rect x="93.7017%" y="629" width="0.4420%" height="15" fill="rgb(249,111,54)" fg:x="848" fg:w="4"/><text x="93.9517%" y="639.50"></text></g><g><title>maelstrom-txn`core::fmt::builders::DebugList::finish (1 samples, 0.11%)</title><rect x="94.0331%" y="613" width="0.1105%" height="15" fill="rgb(249,55,30)" fg:x="851" fg:w="1"/><text x="94.2831%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="94.0331%" y="597" width="0.1105%" height="15" fill="rgb(237,47,42)" fg:x="851" fg:w="1"/><text x="94.2831%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="94.0331%" y="581" width="0.1105%" height="15" fill="rgb(211,20,18)" fg:x="851" fg:w="1"/><text x="94.2831%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.11%)</title><rect x="94.0331%" y="565" width="0.1105%" height="15" fill="rgb(231,203,46)" fg:x="851" fg:w="1"/><text x="94.2831%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::fmt::Debug&gt;::fmt (193 samples, 21.33%)</title><rect x="75.6906%" y="709" width="21.3260%" height="15" fill="rgb(237,142,3)" fg:x="685" fg:w="193"/><text x="75.9406%" y="719.50">maelstrom-txn`&lt;std::collections::h..</text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::entries (192 samples, 21.22%)</title><rect x="75.8011%" y="693" width="21.2155%" height="15" fill="rgb(241,107,1)" fg:x="686" fg:w="192"/><text x="76.0511%" y="703.50">maelstrom-txn`core::fmt::builders..</text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::value (117 samples, 12.93%)</title><rect x="84.0884%" y="677" width="12.9282%" height="15" fill="rgb(229,83,13)" fg:x="761" fg:w="117"/><text x="84.3384%" y="687.50">maelstrom-txn`core:..</text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (26 samples, 2.87%)</title><rect x="94.1436%" y="661" width="2.8729%" height="15" fill="rgb(241,91,40)" fg:x="852" fg:w="26"/><text x="94.3936%" y="671.50">ma..</text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (24 samples, 2.65%)</title><rect x="94.3646%" y="645" width="2.6519%" height="15" fill="rgb(225,3,45)" fg:x="854" fg:w="24"/><text x="94.6146%" y="655.50">ma..</text></g><g><title>libsystem_kernel.dylib`write (24 samples, 2.65%)</title><rect x="94.3646%" y="629" width="2.6519%" height="15" fill="rgb(244,223,14)" fg:x="854" fg:w="24"/><text x="94.6146%" y="639.50">li..</text></g><g><title>maelstrom-txn`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::fmt::Debug&gt;::fmt (1 samples, 0.11%)</title><rect x="97.0166%" y="709" width="0.1105%" height="15" fill="rgb(224,124,37)" fg:x="878" fg:w="1"/><text x="97.2666%" y="719.50"></text></g><g><title>maelstrom-txn`core::fmt::builders::DebugSet::finish (1 samples, 0.11%)</title><rect x="97.0166%" y="693" width="0.1105%" height="15" fill="rgb(251,171,30)" fg:x="878" fg:w="1"/><text x="97.2666%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="97.0166%" y="677" width="0.1105%" height="15" fill="rgb(236,46,54)" fg:x="878" fg:w="1"/><text x="97.2666%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.11%)</title><rect x="97.0166%" y="661" width="0.1105%" height="15" fill="rgb(245,213,5)" fg:x="878" fg:w="1"/><text x="97.2666%" y="671.50"></text></g><g><title>maelstrom-txn`maelstrom_node::node::Node::handle_message (880 samples, 97.24%)</title><rect x="0.2210%" y="805" width="97.2376%" height="15" fill="rgb(230,144,27)" fg:x="2" fg:w="880"/><text x="0.4710%" y="815.50">maelstrom-txn`maelstrom_node::node::Node::handle_message</text></g><g><title>maelstrom-txn`&lt;maelstrom_node::message_handlers::TxnHandler as maelstrom_node::message_handlers::MessageHandler&gt;::handle (880 samples, 97.24%)</title><rect x="0.2210%" y="789" width="97.2376%" height="15" fill="rgb(220,86,6)" fg:x="2" fg:w="880"/><text x="0.4710%" y="799.50">maelstrom-txn`&lt;maelstrom_node::message_handlers::TxnHandler as maelstrom_node::message_handlers::MessageHandler&gt;::handle</text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Transactor::transact (880 samples, 97.24%)</title><rect x="0.2210%" y="773" width="97.2376%" height="15" fill="rgb(240,20,13)" fg:x="2" fg:w="880"/><text x="0.4710%" y="783.50">maelstrom-txn`maelstrom_node::transactor2::Transactor::transact</text></g><g><title>maelstrom-txn`std::io::stdio::_eprint (197 samples, 21.77%)</title><rect x="75.6906%" y="757" width="21.7680%" height="15" fill="rgb(217,89,34)" fg:x="685" fg:w="197"/><text x="75.9406%" y="767.50">maelstrom-txn`std::io::stdio::_epr..</text></g><g><title>maelstrom-txn`&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (197 samples, 21.77%)</title><rect x="75.6906%" y="741" width="21.7680%" height="15" fill="rgb(229,13,5)" fg:x="685" fg:w="197"/><text x="75.9406%" y="751.50">maelstrom-txn`&lt;&amp;std::io::stdio::St..</text></g><g><title>maelstrom-txn`core::fmt::write (197 samples, 21.77%)</title><rect x="75.6906%" y="725" width="21.7680%" height="15" fill="rgb(244,67,35)" fg:x="685" fg:w="197"/><text x="75.9406%" y="735.50">maelstrom-txn`core::fmt::write</text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3 samples, 0.33%)</title><rect x="97.1271%" y="709" width="0.3315%" height="15" fill="rgb(221,40,2)" fg:x="879" fg:w="3"/><text x="97.3771%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`write (3 samples, 0.33%)</title><rect x="97.1271%" y="693" width="0.3315%" height="15" fill="rgb(237,157,21)" fg:x="879" fg:w="3"/><text x="97.3771%" y="703.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (1 samples, 0.11%)</title><rect x="97.4586%" y="661" width="0.1105%" height="15" fill="rgb(222,94,11)" fg:x="882" fg:w="1"/><text x="97.7086%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.11%)</title><rect x="97.4586%" y="645" width="0.1105%" height="15" fill="rgb(249,113,6)" fg:x="882" fg:w="1"/><text x="97.7086%" y="655.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for core::option::Option&lt;T&gt;&gt;::serialize (1 samples, 0.11%)</title><rect x="97.4586%" y="629" width="0.1105%" height="15" fill="rgb(238,137,36)" fg:x="882" fg:w="1"/><text x="97.7086%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_some (1 samples, 0.11%)</title><rect x="97.4586%" y="613" width="0.1105%" height="15" fill="rgb(210,102,26)" fg:x="882" fg:w="1"/><text x="97.7086%" y="623.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for u64&gt;::serialize (1 samples, 0.11%)</title><rect x="97.4586%" y="597" width="0.1105%" height="15" fill="rgb(218,30,30)" fg:x="882" fg:w="1"/><text x="97.7086%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (1 samples, 0.11%)</title><rect x="97.4586%" y="581" width="0.1105%" height="15" fill="rgb(214,67,26)" fg:x="882" fg:w="1"/><text x="97.7086%" y="591.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_u64 (1 samples, 0.11%)</title><rect x="97.4586%" y="565" width="0.1105%" height="15" fill="rgb(251,9,53)" fg:x="882" fg:w="1"/><text x="97.7086%" y="575.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.11%)</title><rect x="97.4586%" y="549" width="0.1105%" height="15" fill="rgb(228,204,25)" fg:x="882" fg:w="1"/><text x="97.7086%" y="559.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.11%)</title><rect x="97.4586%" y="533" width="0.1105%" height="15" fill="rgb(207,153,8)" fg:x="882" fg:w="1"/><text x="97.7086%" y="543.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="97.4586%" y="517" width="0.1105%" height="15" fill="rgb(242,9,16)" fg:x="882" fg:w="1"/><text x="97.7086%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="97.4586%" y="501" width="0.1105%" height="15" fill="rgb(217,211,10)" fg:x="882" fg:w="1"/><text x="97.7086%" y="511.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.11%)</title><rect x="97.4586%" y="485" width="0.1105%" height="15" fill="rgb(219,228,52)" fg:x="882" fg:w="1"/><text x="97.7086%" y="495.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="97.4586%" y="469" width="0.1105%" height="15" fill="rgb(231,92,29)" fg:x="882" fg:w="1"/><text x="97.7086%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.55%)</title><rect x="97.9006%" y="485" width="0.5525%" height="15" fill="rgb(232,8,23)" fg:x="886" fg:w="5"/><text x="98.1506%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="98.3425%" y="469" width="0.1105%" height="15" fill="rgb(216,211,34)" fg:x="890" fg:w="1"/><text x="98.5925%" y="479.50"></text></g><g><title>maelstrom-txn`core::str::traits::_&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.11%)</title><rect x="98.4530%" y="485" width="0.1105%" height="15" fill="rgb(236,151,0)" fg:x="891" fg:w="1"/><text x="98.7030%" y="495.50"></text></g><g><title>maelstrom-txn`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (1 samples, 0.11%)</title><rect x="98.4530%" y="469" width="0.1105%" height="15" fill="rgb(209,168,3)" fg:x="891" fg:w="1"/><text x="98.7030%" y="479.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_char_escape (5 samples, 0.55%)</title><rect x="98.5635%" y="485" width="0.5525%" height="15" fill="rgb(208,129,28)" fg:x="892" fg:w="5"/><text x="98.8135%" y="495.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (5 samples, 0.55%)</title><rect x="98.5635%" y="469" width="0.5525%" height="15" fill="rgb(229,78,22)" fg:x="892" fg:w="5"/><text x="98.8135%" y="479.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (5 samples, 0.55%)</title><rect x="98.5635%" y="453" width="0.5525%" height="15" fill="rgb(228,187,13)" fg:x="892" fg:w="5"/><text x="98.8135%" y="463.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5 samples, 0.55%)</title><rect x="98.5635%" y="437" width="0.5525%" height="15" fill="rgb(240,119,24)" fg:x="892" fg:w="5"/><text x="98.8135%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.55%)</title><rect x="98.5635%" y="421" width="0.5525%" height="15" fill="rgb(209,194,42)" fg:x="892" fg:w="5"/><text x="98.8135%" y="431.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.44%)</title><rect x="98.6740%" y="405" width="0.4420%" height="15" fill="rgb(247,200,46)" fg:x="893" fg:w="4"/><text x="98.9240%" y="415.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (3 samples, 0.33%)</title><rect x="98.7845%" y="389" width="0.3315%" height="15" fill="rgb(218,76,16)" fg:x="894" fg:w="3"/><text x="99.0345%" y="399.50"></text></g><g><title>maelstrom-txn`maelstrom_node::node::Node::send (20 samples, 2.21%)</title><rect x="97.4586%" y="805" width="2.2099%" height="15" fill="rgb(225,21,48)" fg:x="882" fg:w="20"/><text x="97.7086%" y="815.50">m..</text></g><g><title>maelstrom-txn`serde_json::ser::to_string (20 samples, 2.21%)</title><rect x="97.4586%" y="789" width="2.2099%" height="15" fill="rgb(239,223,50)" fg:x="882" fg:w="20"/><text x="97.7086%" y="799.50">m..</text></g><g><title>maelstrom-txn`serde_json::ser::to_vec (20 samples, 2.21%)</title><rect x="97.4586%" y="773" width="2.2099%" height="15" fill="rgb(244,45,21)" fg:x="882" fg:w="20"/><text x="97.7086%" y="783.50">m..</text></g><g><title>maelstrom-txn`serde_json::ser::to_writer (20 samples, 2.21%)</title><rect x="97.4586%" y="757" width="2.2099%" height="15" fill="rgb(232,33,43)" fg:x="882" fg:w="20"/><text x="97.7086%" y="767.50">m..</text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::Message&gt;::serialize (20 samples, 2.21%)</title><rect x="97.4586%" y="741" width="2.2099%" height="15" fill="rgb(209,8,3)" fg:x="882" fg:w="20"/><text x="97.7086%" y="751.50">m..</text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 2.21%)</title><rect x="97.4586%" y="725" width="2.2099%" height="15" fill="rgb(214,25,53)" fg:x="882" fg:w="20"/><text x="97.7086%" y="735.50">m..</text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (20 samples, 2.21%)</title><rect x="97.4586%" y="709" width="2.2099%" height="15" fill="rgb(254,186,54)" fg:x="882" fg:w="20"/><text x="97.7086%" y="719.50">m..</text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (20 samples, 2.21%)</title><rect x="97.4586%" y="693" width="2.2099%" height="15" fill="rgb(208,174,49)" fg:x="882" fg:w="20"/><text x="97.7086%" y="703.50">m..</text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::MessageBody&gt;::serialize (20 samples, 2.21%)</title><rect x="97.4586%" y="677" width="2.2099%" height="15" fill="rgb(233,191,51)" fg:x="882" fg:w="20"/><text x="97.7086%" y="687.50">m..</text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (19 samples, 2.10%)</title><rect x="97.5691%" y="661" width="2.0994%" height="15" fill="rgb(222,134,10)" fg:x="883" fg:w="19"/><text x="97.8191%" y="671.50">m..</text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::MessageExtra&gt;::serialize (19 samples, 2.10%)</title><rect x="97.5691%" y="645" width="2.0994%" height="15" fill="rgb(230,226,20)" fg:x="883" fg:w="19"/><text x="97.8191%" y="655.50">m..</text></g><g><title>maelstrom-txn`serde::__private::ser::serialize_tagged_newtype (19 samples, 2.10%)</title><rect x="97.5691%" y="629" width="2.0994%" height="15" fill="rgb(251,111,25)" fg:x="883" fg:w="19"/><text x="97.8191%" y="639.50">m..</text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::ErrorExtra&gt;::serialize (19 samples, 2.10%)</title><rect x="97.5691%" y="613" width="2.0994%" height="15" fill="rgb(224,40,46)" fg:x="883" fg:w="19"/><text x="97.8191%" y="623.50">m..</text></g><g><title>maelstrom-txn`&lt;serde::__private::ser::FlatMapSerializeStruct&lt;M&gt; as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 2.10%)</title><rect x="97.5691%" y="597" width="2.0994%" height="15" fill="rgb(236,108,47)" fg:x="883" fg:w="19"/><text x="97.8191%" y="607.50">m..</text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (19 samples, 2.10%)</title><rect x="97.5691%" y="581" width="2.0994%" height="15" fill="rgb(234,93,0)" fg:x="883" fg:w="19"/><text x="97.8191%" y="591.50">m..</text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (19 samples, 2.10%)</title><rect x="97.5691%" y="565" width="2.0994%" height="15" fill="rgb(224,213,32)" fg:x="883" fg:w="19"/><text x="97.8191%" y="575.50">m..</text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (19 samples, 2.10%)</title><rect x="97.5691%" y="549" width="2.0994%" height="15" fill="rgb(251,11,48)" fg:x="883" fg:w="19"/><text x="97.8191%" y="559.50">m..</text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (19 samples, 2.10%)</title><rect x="97.5691%" y="533" width="2.0994%" height="15" fill="rgb(236,173,5)" fg:x="883" fg:w="19"/><text x="97.8191%" y="543.50">m..</text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (19 samples, 2.10%)</title><rect x="97.5691%" y="517" width="2.0994%" height="15" fill="rgb(230,95,12)" fg:x="883" fg:w="19"/><text x="97.8191%" y="527.50">m..</text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (19 samples, 2.10%)</title><rect x="97.5691%" y="501" width="2.0994%" height="15" fill="rgb(232,209,1)" fg:x="883" fg:w="19"/><text x="97.8191%" y="511.50">m..</text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_string_fragment (5 samples, 0.55%)</title><rect x="99.1160%" y="485" width="0.5525%" height="15" fill="rgb(232,6,1)" fg:x="897" fg:w="5"/><text x="99.3660%" y="495.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (5 samples, 0.55%)</title><rect x="99.1160%" y="469" width="0.5525%" height="15" fill="rgb(210,224,50)" fg:x="897" fg:w="5"/><text x="99.3660%" y="479.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (5 samples, 0.55%)</title><rect x="99.1160%" y="453" width="0.5525%" height="15" fill="rgb(228,127,35)" fg:x="897" fg:w="5"/><text x="99.3660%" y="463.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.44%)</title><rect x="99.2265%" y="437" width="0.4420%" height="15" fill="rgb(245,102,45)" fg:x="898" fg:w="4"/><text x="99.4765%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.33%)</title><rect x="99.3370%" y="421" width="0.3315%" height="15" fill="rgb(214,1,49)" fg:x="899" fg:w="3"/><text x="99.5870%" y="431.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.11%)</title><rect x="99.5580%" y="405" width="0.1105%" height="15" fill="rgb(226,163,40)" fg:x="901" fg:w="1"/><text x="99.8080%" y="415.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageExtra&gt;::deserialize (1 samples, 0.11%)</title><rect x="99.6685%" y="629" width="0.1105%" height="15" fill="rgb(239,212,28)" fg:x="902" fg:w="1"/><text x="99.9185%" y="639.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::TxnRequestExtra&gt;::deserialize (1 samples, 0.11%)</title><rect x="99.6685%" y="613" width="0.1105%" height="15" fill="rgb(220,20,13)" fg:x="902" fg:w="1"/><text x="99.9185%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.11%)</title><rect x="99.6685%" y="597" width="0.1105%" height="15" fill="rgb(210,164,35)" fg:x="902" fg:w="1"/><text x="99.9185%" y="607.50"></text></g><g><title>maelstrom-txn`serde::__private::de::content::visit_content_map (1 samples, 0.11%)</title><rect x="99.6685%" y="581" width="0.1105%" height="15" fill="rgb(248,109,41)" fg:x="902" fg:w="1"/><text x="99.9185%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::TxnRequestExtra&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.11%)</title><rect x="99.6685%" y="565" width="0.1105%" height="15" fill="rgb(238,23,50)" fg:x="902" fg:w="1"/><text x="99.9185%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::MapAccess&gt;::next_value (1 samples, 0.11%)</title><rect x="99.6685%" y="549" width="0.1105%" height="15" fill="rgb(211,48,49)" fg:x="902" fg:w="1"/><text x="99.9185%" y="559.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (1 samples, 0.11%)</title><rect x="99.6685%" y="533" width="0.1105%" height="15" fill="rgb(223,36,21)" fg:x="902" fg:w="1"/><text x="99.9185%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.11%)</title><rect x="99.6685%" y="517" width="0.1105%" height="15" fill="rgb(207,123,46)" fg:x="902" fg:w="1"/><text x="99.9185%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.11%)</title><rect x="99.6685%" y="501" width="0.1105%" height="15" fill="rgb(240,218,32)" fg:x="902" fg:w="1"/><text x="99.9185%" y="511.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (1 samples, 0.11%)</title><rect x="99.6685%" y="485" width="0.1105%" height="15" fill="rgb(252,5,43)" fg:x="902" fg:w="1"/><text x="99.9185%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.11%)</title><rect x="99.6685%" y="469" width="0.1105%" height="15" fill="rgb(252,84,19)" fg:x="902" fg:w="1"/><text x="99.9185%" y="479.50"></text></g><g><title>maelstrom-txn`serde::__private::de::content::visit_content_seq (1 samples, 0.11%)</title><rect x="99.6685%" y="453" width="0.1105%" height="15" fill="rgb(243,152,39)" fg:x="902" fg:w="1"/><text x="99.9185%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.11%)</title><rect x="99.6685%" y="437" width="0.1105%" height="15" fill="rgb(234,160,15)" fg:x="902" fg:w="1"/><text x="99.9185%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::SeqAccess&gt;::next_element (1 samples, 0.11%)</title><rect x="99.6685%" y="421" width="0.1105%" height="15" fill="rgb(237,34,20)" fg:x="902" fg:w="1"/><text x="99.9185%" y="431.50"></text></g><g><title>maelstrom-txn`serde::de::SeqAccess::next_element (1 samples, 0.11%)</title><rect x="99.6685%" y="405" width="0.1105%" height="15" fill="rgb(229,97,13)" fg:x="902" fg:w="1"/><text x="99.9185%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::value::SeqDeserializer&lt;I,E&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.11%)</title><rect x="99.6685%" y="389" width="0.1105%" height="15" fill="rgb(234,71,50)" fg:x="902" fg:w="1"/><text x="99.9185%" y="399.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.11%)</title><rect x="99.6685%" y="373" width="0.1105%" height="15" fill="rgb(253,155,4)" fg:x="902" fg:w="1"/><text x="99.9185%" y="383.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::Query&gt;::deserialize (1 samples, 0.11%)</title><rect x="99.6685%" y="357" width="0.1105%" height="15" fill="rgb(222,185,37)" fg:x="902" fg:w="1"/><text x="99.9185%" y="367.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_tuple_struct (1 samples, 0.11%)</title><rect x="99.6685%" y="341" width="0.1105%" height="15" fill="rgb(251,177,13)" fg:x="902" fg:w="1"/><text x="99.9185%" y="351.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.11%)</title><rect x="99.6685%" y="325" width="0.1105%" height="15" fill="rgb(250,179,40)" fg:x="902" fg:w="1"/><text x="99.9185%" y="335.50"></text></g><g><title>maelstrom-txn`serde::__private::de::content::visit_content_seq (1 samples, 0.11%)</title><rect x="99.6685%" y="309" width="0.1105%" height="15" fill="rgb(242,44,2)" fg:x="902" fg:w="1"/><text x="99.9185%" y="319.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Query&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.11%)</title><rect x="99.6685%" y="293" width="0.1105%" height="15" fill="rgb(216,177,13)" fg:x="902" fg:w="1"/><text x="99.9185%" y="303.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::SeqAccess&gt;::next_element (1 samples, 0.11%)</title><rect x="99.6685%" y="277" width="0.1105%" height="15" fill="rgb(216,106,43)" fg:x="902" fg:w="1"/><text x="99.9185%" y="287.50"></text></g><g><title>maelstrom-txn`serde::de::SeqAccess::next_element (1 samples, 0.11%)</title><rect x="99.6685%" y="261" width="0.1105%" height="15" fill="rgb(216,183,2)" fg:x="902" fg:w="1"/><text x="99.9185%" y="271.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::value::SeqDeserializer&lt;I,E&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.11%)</title><rect x="99.6685%" y="245" width="0.1105%" height="15" fill="rgb(249,75,3)" fg:x="902" fg:w="1"/><text x="99.9185%" y="255.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.11%)</title><rect x="99.6685%" y="229" width="0.1105%" height="15" fill="rgb(219,67,39)" fg:x="902" fg:w="1"/><text x="99.9185%" y="239.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::QueryValue&gt;::deserialize (1 samples, 0.11%)</title><rect x="99.6685%" y="213" width="0.1105%" height="15" fill="rgb(253,228,2)" fg:x="902" fg:w="1"/><text x="99.9185%" y="223.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;core::result::Result&lt;maelstrom_node::messages::QueryValue,serde_json::error::Error&gt;&gt; (1 samples, 0.11%)</title><rect x="99.6685%" y="197" width="0.1105%" height="15" fill="rgb(235,138,27)" fg:x="902" fg:w="1"/><text x="99.9185%" y="207.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;serde_json::error::Error&gt; (1 samples, 0.11%)</title><rect x="99.6685%" y="181" width="0.1105%" height="15" fill="rgb(236,97,51)" fg:x="902" fg:w="1"/><text x="99.9185%" y="191.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;serde_json::error::ErrorImpl&gt;&gt; (1 samples, 0.11%)</title><rect x="99.6685%" y="165" width="0.1105%" height="15" fill="rgb(240,80,30)" fg:x="902" fg:w="1"/><text x="99.9185%" y="175.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;serde_json::error::ErrorImpl&gt; (1 samples, 0.11%)</title><rect x="99.6685%" y="149" width="0.1105%" height="15" fill="rgb(230,178,19)" fg:x="902" fg:w="1"/><text x="99.9185%" y="159.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;serde_json::error::ErrorCode&gt; (1 samples, 0.11%)</title><rect x="99.6685%" y="133" width="0.1105%" height="15" fill="rgb(210,190,27)" fg:x="902" fg:w="1"/><text x="99.9185%" y="143.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (1 samples, 0.11%)</title><rect x="99.6685%" y="117" width="0.1105%" height="15" fill="rgb(222,107,31)" fg:x="902" fg:w="1"/><text x="99.9185%" y="127.50"></text></g><g><title>maelstrom-txn`&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="99.6685%" y="101" width="0.1105%" height="15" fill="rgb(216,127,34)" fg:x="902" fg:w="1"/><text x="99.9185%" y="111.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.11%)</title><rect x="99.6685%" y="85" width="0.1105%" height="15" fill="rgb(234,116,52)" fg:x="902" fg:w="1"/><text x="99.9185%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.11%)</title><rect x="99.6685%" y="69" width="0.1105%" height="15" fill="rgb(222,124,15)" fg:x="902" fg:w="1"/><text x="99.9185%" y="79.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.11%)</title><rect x="99.6685%" y="53" width="0.1105%" height="15" fill="rgb(231,179,28)" fg:x="902" fg:w="1"/><text x="99.9185%" y="63.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::clear (1 samples, 0.11%)</title><rect x="99.7790%" y="309" width="0.1105%" height="15" fill="rgb(226,93,45)" fg:x="903" fg:w="1"/><text x="100.0290%" y="319.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts_mut::precondition_check (1 samples, 0.11%)</title><rect x="99.7790%" y="293" width="0.1105%" height="15" fill="rgb(215,8,51)" fg:x="903" fg:w="1"/><text x="100.0290%" y="303.50"></text></g><g><title>all (905 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(223,106,5)" fg:x="0" fg:w="905"/><text x="0.2500%" y="959.50"></text></g><g><title>dyld`start (905 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(250,191,5)" fg:x="0" fg:w="905"/><text x="0.2500%" y="943.50">dyld`start</text></g><g><title>maelstrom-txn`main (905 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(242,132,44)" fg:x="0" fg:w="905"/><text x="0.2500%" y="927.50">maelstrom-txn`main</text></g><g><title>maelstrom-txn`std::rt::lang_start (905 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(251,152,29)" fg:x="0" fg:w="905"/><text x="0.2500%" y="911.50">maelstrom-txn`std::rt::lang_start</text></g><g><title>maelstrom-txn`std::rt::lang_start_internal (905 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(218,179,5)" fg:x="0" fg:w="905"/><text x="0.2500%" y="895.50">maelstrom-txn`std::rt::lang_start_internal</text></g><g><title>maelstrom-txn`std::rt::lang_start::_{{closure}} (905 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(227,67,19)" fg:x="0" fg:w="905"/><text x="0.2500%" y="879.50">maelstrom-txn`std::rt::lang_start::_{{closure}}</text></g><g><title>maelstrom-txn`std::sys::backtrace::__rust_begin_short_backtrace (905 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(233,119,31)" fg:x="0" fg:w="905"/><text x="0.2500%" y="863.50">maelstrom-txn`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>maelstrom-txn`core::ops::function::FnOnce::call_once (905 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(241,120,22)" fg:x="0" fg:w="905"/><text x="0.2500%" y="847.50">maelstrom-txn`core::ops::function::FnOnce::call_once</text></g><g><title>maelstrom-txn`maelstrom_txn::main (905 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(224,102,30)" fg:x="0" fg:w="905"/><text x="0.2500%" y="831.50">maelstrom-txn`maelstrom_txn::main</text></g><g><title>maelstrom-txn`serde_json::de::from_str (3 samples, 0.33%)</title><rect x="99.6685%" y="805" width="0.3315%" height="15" fill="rgb(210,164,37)" fg:x="902" fg:w="3"/><text x="99.9185%" y="815.50"></text></g><g><title>maelstrom-txn`serde_json::de::from_trait (3 samples, 0.33%)</title><rect x="99.6685%" y="789" width="0.3315%" height="15" fill="rgb(226,191,16)" fg:x="902" fg:w="3"/><text x="99.9185%" y="799.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize (3 samples, 0.33%)</title><rect x="99.6685%" y="773" width="0.3315%" height="15" fill="rgb(214,40,45)" fg:x="902" fg:w="3"/><text x="99.9185%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (3 samples, 0.33%)</title><rect x="99.6685%" y="757" width="0.3315%" height="15" fill="rgb(244,29,26)" fg:x="902" fg:w="3"/><text x="99.9185%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.33%)</title><rect x="99.6685%" y="741" width="0.3315%" height="15" fill="rgb(216,16,5)" fg:x="902" fg:w="3"/><text x="99.9185%" y="751.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (3 samples, 0.33%)</title><rect x="99.6685%" y="725" width="0.3315%" height="15" fill="rgb(249,76,35)" fg:x="902" fg:w="3"/><text x="99.9185%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.33%)</title><rect x="99.6685%" y="709" width="0.3315%" height="15" fill="rgb(207,11,44)" fg:x="902" fg:w="3"/><text x="99.9185%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.33%)</title><rect x="99.6685%" y="693" width="0.3315%" height="15" fill="rgb(228,190,49)" fg:x="902" fg:w="3"/><text x="99.9185%" y="703.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize (3 samples, 0.33%)</title><rect x="99.6685%" y="677" width="0.3315%" height="15" fill="rgb(214,173,12)" fg:x="902" fg:w="3"/><text x="99.9185%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (3 samples, 0.33%)</title><rect x="99.6685%" y="661" width="0.3315%" height="15" fill="rgb(218,26,35)" fg:x="902" fg:w="3"/><text x="99.9185%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.33%)</title><rect x="99.6685%" y="645" width="0.3315%" height="15" fill="rgb(220,200,19)" fg:x="902" fg:w="3"/><text x="99.9185%" y="655.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (2 samples, 0.22%)</title><rect x="99.7790%" y="629" width="0.2210%" height="15" fill="rgb(239,95,49)" fg:x="903" fg:w="2"/><text x="100.0290%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.22%)</title><rect x="99.7790%" y="613" width="0.2210%" height="15" fill="rgb(235,85,53)" fg:x="903" fg:w="2"/><text x="100.0290%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.22%)</title><rect x="99.7790%" y="597" width="0.2210%" height="15" fill="rgb(233,133,31)" fg:x="903" fg:w="2"/><text x="100.0290%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (2 samples, 0.22%)</title><rect x="99.7790%" y="581" width="0.2210%" height="15" fill="rgb(218,25,20)" fg:x="903" fg:w="2"/><text x="100.0290%" y="591.50"></text></g><g><title>maelstrom-txn`serde::de::Deserializer::__deserialize_content (2 samples, 0.22%)</title><rect x="99.7790%" y="565" width="0.2210%" height="15" fill="rgb(252,210,38)" fg:x="903" fg:w="2"/><text x="100.0290%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.22%)</title><rect x="99.7790%" y="549" width="0.2210%" height="15" fill="rgb(242,134,21)" fg:x="903" fg:w="2"/><text x="100.0290%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.22%)</title><rect x="99.7790%" y="533" width="0.2210%" height="15" fill="rgb(213,28,48)" fg:x="903" fg:w="2"/><text x="100.0290%" y="543.50"></text></g><g><title>maelstrom-txn`serde::de::SeqAccess::next_element (2 samples, 0.22%)</title><rect x="99.7790%" y="517" width="0.2210%" height="15" fill="rgb(250,196,2)" fg:x="903" fg:w="2"/><text x="100.0290%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2 samples, 0.22%)</title><rect x="99.7790%" y="501" width="0.2210%" height="15" fill="rgb(227,5,17)" fg:x="903" fg:w="2"/><text x="100.0290%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.22%)</title><rect x="99.7790%" y="485" width="0.2210%" height="15" fill="rgb(221,226,24)" fg:x="903" fg:w="2"/><text x="100.0290%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (2 samples, 0.22%)</title><rect x="99.7790%" y="469" width="0.2210%" height="15" fill="rgb(211,5,48)" fg:x="903" fg:w="2"/><text x="100.0290%" y="479.50"></text></g><g><title>maelstrom-txn`serde::de::Deserializer::__deserialize_content (2 samples, 0.22%)</title><rect x="99.7790%" y="453" width="0.2210%" height="15" fill="rgb(219,150,6)" fg:x="903" fg:w="2"/><text x="100.0290%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.22%)</title><rect x="99.7790%" y="437" width="0.2210%" height="15" fill="rgb(251,46,16)" fg:x="903" fg:w="2"/><text x="100.0290%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.22%)</title><rect x="99.7790%" y="421" width="0.2210%" height="15" fill="rgb(220,204,40)" fg:x="903" fg:w="2"/><text x="100.0290%" y="431.50"></text></g><g><title>maelstrom-txn`serde::de::SeqAccess::next_element (2 samples, 0.22%)</title><rect x="99.7790%" y="405" width="0.2210%" height="15" fill="rgb(211,85,2)" fg:x="903" fg:w="2"/><text x="100.0290%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2 samples, 0.22%)</title><rect x="99.7790%" y="389" width="0.2210%" height="15" fill="rgb(229,17,7)" fg:x="903" fg:w="2"/><text x="100.0290%" y="399.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.22%)</title><rect x="99.7790%" y="373" width="0.2210%" height="15" fill="rgb(239,72,28)" fg:x="903" fg:w="2"/><text x="100.0290%" y="383.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (2 samples, 0.22%)</title><rect x="99.7790%" y="357" width="0.2210%" height="15" fill="rgb(230,47,54)" fg:x="903" fg:w="2"/><text x="100.0290%" y="367.50"></text></g><g><title>maelstrom-txn`serde::de::Deserializer::__deserialize_content (2 samples, 0.22%)</title><rect x="99.7790%" y="341" width="0.2210%" height="15" fill="rgb(214,50,8)" fg:x="903" fg:w="2"/><text x="100.0290%" y="351.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.22%)</title><rect x="99.7790%" y="325" width="0.2210%" height="15" fill="rgb(216,198,43)" fg:x="903" fg:w="2"/><text x="100.0290%" y="335.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::parse_any_number (1 samples, 0.11%)</title><rect x="99.8895%" y="309" width="0.1105%" height="15" fill="rgb(234,20,35)" fg:x="904" fg:w="1"/><text x="100.1395%" y="319.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.11%)</title><rect x="99.8895%" y="293" width="0.1105%" height="15" fill="rgb(254,45,19)" fg:x="904" fg:w="1"/><text x="100.1395%" y="303.50"></text></g></svg></svg>