<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1222" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1205.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1205.00"> </text><svg id="frames" x="10" width="1180" total_samples="1893"><g><title>libsystem_kernel.dylib`read (1 samples, 0.05%)</title><rect x="0.0000%" y="1013" width="0.0528%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="0.0528%" y="997" width="0.0528%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.3028%" y="1007.50"></text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StdinLock as std::io::BufRead&gt;::read_line (3 samples, 0.16%)</title><rect x="0.0000%" y="1029" width="0.1585%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1039.50"></text></g><g><title>maelstrom-txn`std::io::read_until (2 samples, 0.11%)</title><rect x="0.0528%" y="1013" width="0.1057%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="2"/><text x="0.3028%" y="1023.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.05%)</title><rect x="0.1057%" y="997" width="0.0528%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="0.3557%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="0.1057%" y="981" width="0.0528%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.3557%" y="991.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;maelstrom_node::messages::Message&gt; (1 samples, 0.05%)</title><rect x="0.1585%" y="1029" width="0.0528%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="1"/><text x="0.4085%" y="1039.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.05%)</title><rect x="0.1585%" y="1013" width="0.0528%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="1"/><text x="0.4085%" y="1023.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="0.1585%" y="997" width="0.0528%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="1"/><text x="0.4085%" y="1007.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="0.1585%" y="981" width="0.0528%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="1"/><text x="0.4085%" y="991.50"></text></g><g><title>maelstrom-txn`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="0.1585%" y="965" width="0.0528%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="1"/><text x="0.4085%" y="975.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1 samples, 0.05%)</title><rect x="0.1585%" y="949" width="0.0528%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="1"/><text x="0.4085%" y="959.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1 samples, 0.05%)</title><rect x="0.1585%" y="933" width="0.0528%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="1"/><text x="0.4085%" y="943.50"></text></g><g><title>maelstrom-txn`core::str::converts::from_utf8 (1 samples, 0.05%)</title><rect x="0.2113%" y="1029" width="0.0528%" height="15" fill="rgb(206,188,39)" fg:x="4" fg:w="1"/><text x="0.4613%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="0.3698%" y="917" width="0.0528%" height="15" fill="rgb(217,207,13)" fg:x="7" fg:w="1"/><text x="0.6198%" y="927.50"></text></g><g><title>maelstrom-txn`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (5 samples, 0.26%)</title><rect x="0.3170%" y="981" width="0.2641%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="5"/><text x="0.5670%" y="991.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.26%)</title><rect x="0.3170%" y="965" width="0.2641%" height="15" fill="rgb(225,20,46)" fg:x="6" fg:w="5"/><text x="0.5670%" y="975.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.26%)</title><rect x="0.3170%" y="949" width="0.2641%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="5"/><text x="0.5670%" y="959.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (4 samples, 0.21%)</title><rect x="0.3698%" y="933" width="0.2113%" height="15" fill="rgb(221,200,47)" fg:x="7" fg:w="4"/><text x="0.6198%" y="943.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3 samples, 0.16%)</title><rect x="0.4226%" y="917" width="0.1585%" height="15" fill="rgb(226,26,5)" fg:x="8" fg:w="3"/><text x="0.6726%" y="927.50"></text></g><g><title>maelstrom-txn`core::clone::Clone::clone (3 samples, 0.16%)</title><rect x="0.4226%" y="901" width="0.1585%" height="15" fill="rgb(249,33,26)" fg:x="8" fg:w="3"/><text x="0.6726%" y="911.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.16%)</title><rect x="0.4226%" y="885" width="0.1585%" height="15" fill="rgb(235,183,28)" fg:x="8" fg:w="3"/><text x="0.6726%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.16%)</title><rect x="0.4226%" y="869" width="0.1585%" height="15" fill="rgb(221,5,38)" fg:x="8" fg:w="3"/><text x="0.6726%" y="879.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3 samples, 0.16%)</title><rect x="0.4226%" y="853" width="0.1585%" height="15" fill="rgb(247,18,42)" fg:x="8" fg:w="3"/><text x="0.6726%" y="863.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3 samples, 0.16%)</title><rect x="0.4226%" y="837" width="0.1585%" height="15" fill="rgb(241,131,45)" fg:x="8" fg:w="3"/><text x="0.6726%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.16%)</title><rect x="0.4226%" y="821" width="0.1585%" height="15" fill="rgb(249,31,29)" fg:x="8" fg:w="3"/><text x="0.6726%" y="831.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::alloc_impl (3 samples, 0.16%)</title><rect x="0.4226%" y="805" width="0.1585%" height="15" fill="rgb(225,111,53)" fg:x="8" fg:w="3"/><text x="0.6726%" y="815.50"></text></g><g><title>maelstrom-txn`alloc::alloc::alloc (3 samples, 0.16%)</title><rect x="0.4226%" y="789" width="0.1585%" height="15" fill="rgb(238,160,17)" fg:x="8" fg:w="3"/><text x="0.6726%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.16%)</title><rect x="0.4226%" y="773" width="0.1585%" height="15" fill="rgb(214,148,48)" fg:x="8" fg:w="3"/><text x="0.6726%" y="783.50"></text></g><g><title>maelstrom-txn`core::hash::BuildHasher::hash_one (2 samples, 0.11%)</title><rect x="0.5811%" y="773" width="0.1057%" height="15" fill="rgb(232,36,49)" fg:x="11" fg:w="2"/><text x="0.8311%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.11%)</title><rect x="0.5811%" y="757" width="0.1057%" height="15" fill="rgb(209,103,24)" fg:x="11" fg:w="2"/><text x="0.8311%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.11%)</title><rect x="0.5811%" y="741" width="0.1057%" height="15" fill="rgb(229,88,8)" fg:x="11" fg:w="2"/><text x="0.8311%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.11%)</title><rect x="0.5811%" y="725" width="0.1057%" height="15" fill="rgb(213,181,19)" fg:x="11" fg:w="2"/><text x="0.8311%" y="735.50"></text></g><g><title>maelstrom-txn`std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (3 samples, 0.16%)</title><rect x="0.5811%" y="805" width="0.1585%" height="15" fill="rgb(254,191,54)" fg:x="11" fg:w="3"/><text x="0.8311%" y="815.50"></text></g><g><title>maelstrom-txn`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.16%)</title><rect x="0.5811%" y="789" width="0.1585%" height="15" fill="rgb(241,83,37)" fg:x="11" fg:w="3"/><text x="0.8311%" y="799.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.05%)</title><rect x="0.6867%" y="773" width="0.0528%" height="15" fill="rgb(233,36,39)" fg:x="13" fg:w="1"/><text x="0.9367%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.21%)</title><rect x="0.5811%" y="965" width="0.2113%" height="15" fill="rgb(226,3,54)" fg:x="11" fg:w="4"/><text x="0.8311%" y="975.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.21%)</title><rect x="0.5811%" y="949" width="0.2113%" height="15" fill="rgb(245,192,40)" fg:x="11" fg:w="4"/><text x="0.8311%" y="959.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.21%)</title><rect x="0.5811%" y="933" width="0.2113%" height="15" fill="rgb(238,167,29)" fg:x="11" fg:w="4"/><text x="0.8311%" y="943.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.21%)</title><rect x="0.5811%" y="917" width="0.2113%" height="15" fill="rgb(232,182,51)" fg:x="11" fg:w="4"/><text x="0.8311%" y="927.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_trusted (4 samples, 0.21%)</title><rect x="0.5811%" y="901" width="0.2113%" height="15" fill="rgb(231,60,39)" fg:x="11" fg:w="4"/><text x="0.8311%" y="911.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::for_each (4 samples, 0.21%)</title><rect x="0.5811%" y="885" width="0.2113%" height="15" fill="rgb(208,69,12)" fg:x="11" fg:w="4"/><text x="0.8311%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.21%)</title><rect x="0.5811%" y="869" width="0.2113%" height="15" fill="rgb(235,93,37)" fg:x="11" fg:w="4"/><text x="0.8311%" y="879.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.21%)</title><rect x="0.5811%" y="853" width="0.2113%" height="15" fill="rgb(213,116,39)" fg:x="11" fg:w="4"/><text x="0.8311%" y="863.50"></text></g><g><title>maelstrom-txn`core::iter::adapters::map::map_fold::_{{closure}} (4 samples, 0.21%)</title><rect x="0.5811%" y="837" width="0.2113%" height="15" fill="rgb(222,207,29)" fg:x="11" fg:w="4"/><text x="0.8311%" y="847.50"></text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Transactor::transact::_{{closure}} (4 samples, 0.21%)</title><rect x="0.5811%" y="821" width="0.2113%" height="15" fill="rgb(206,96,30)" fg:x="11" fg:w="4"/><text x="0.8311%" y="831.50"></text></g><g><title>maelstrom-txn`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.05%)</title><rect x="0.7396%" y="805" width="0.0528%" height="15" fill="rgb(218,138,4)" fg:x="14" fg:w="1"/><text x="0.9896%" y="815.50"></text></g><g><title>maelstrom-txn`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.05%)</title><rect x="0.7396%" y="789" width="0.0528%" height="15" fill="rgb(250,191,14)" fg:x="14" fg:w="1"/><text x="0.9896%" y="799.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.05%)</title><rect x="0.7396%" y="773" width="0.0528%" height="15" fill="rgb(239,60,40)" fg:x="14" fg:w="1"/><text x="0.9896%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.05%)</title><rect x="0.8980%" y="693" width="0.0528%" height="15" fill="rgb(206,27,48)" fg:x="17" fg:w="1"/><text x="1.1480%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.05%)</title><rect x="0.8980%" y="677" width="0.0528%" height="15" fill="rgb(225,35,8)" fg:x="17" fg:w="1"/><text x="1.1480%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.05%)</title><rect x="0.8980%" y="661" width="0.0528%" height="15" fill="rgb(250,213,24)" fg:x="17" fg:w="1"/><text x="1.1480%" y="671.50"></text></g><g><title>maelstrom-txn`core::hash::BuildHasher::hash_one (2 samples, 0.11%)</title><rect x="0.8980%" y="709" width="0.1057%" height="15" fill="rgb(247,123,22)" fg:x="17" fg:w="2"/><text x="1.1480%" y="719.50"></text></g><g><title>maelstrom-txn`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.05%)</title><rect x="0.9509%" y="693" width="0.0528%" height="15" fill="rgb(231,138,38)" fg:x="18" fg:w="1"/><text x="1.2009%" y="703.50"></text></g><g><title>maelstrom-txn`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.05%)</title><rect x="0.9509%" y="677" width="0.0528%" height="15" fill="rgb(231,145,46)" fg:x="18" fg:w="1"/><text x="1.2009%" y="687.50"></text></g><g><title>maelstrom-txn`core::hash::Hasher::write_usize (1 samples, 0.05%)</title><rect x="0.9509%" y="661" width="0.0528%" height="15" fill="rgb(251,118,11)" fg:x="18" fg:w="1"/><text x="1.2009%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="0.9509%" y="645" width="0.0528%" height="15" fill="rgb(217,147,25)" fg:x="18" fg:w="1"/><text x="1.2009%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="0.9509%" y="629" width="0.0528%" height="15" fill="rgb(247,81,37)" fg:x="18" fg:w="1"/><text x="1.2009%" y="639.50"></text></g><g><title>maelstrom-txn`core::hash::sip::u8to64_le (1 samples, 0.05%)</title><rect x="0.9509%" y="613" width="0.0528%" height="15" fill="rgb(209,12,38)" fg:x="18" fg:w="1"/><text x="1.2009%" y="623.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.11%)</title><rect x="1.0037%" y="693" width="0.1057%" height="15" fill="rgb(227,1,9)" fg:x="19" fg:w="2"/><text x="1.2537%" y="703.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.11%)</title><rect x="1.0037%" y="677" width="0.1057%" height="15" fill="rgb(248,47,43)" fg:x="19" fg:w="2"/><text x="1.2537%" y="687.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (5 samples, 0.26%)</title><rect x="0.8980%" y="757" width="0.2641%" height="15" fill="rgb(221,10,30)" fg:x="17" fg:w="5"/><text x="1.1480%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (5 samples, 0.26%)</title><rect x="0.8980%" y="741" width="0.2641%" height="15" fill="rgb(210,229,1)" fg:x="17" fg:w="5"/><text x="1.1480%" y="751.50"></text></g><g><title>maelstrom-txn`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.26%)</title><rect x="0.8980%" y="725" width="0.2641%" height="15" fill="rgb(222,148,37)" fg:x="17" fg:w="5"/><text x="1.1480%" y="735.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (3 samples, 0.16%)</title><rect x="1.0037%" y="709" width="0.1585%" height="15" fill="rgb(234,67,33)" fg:x="19" fg:w="3"/><text x="1.2537%" y="719.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.05%)</title><rect x="1.1094%" y="693" width="0.0528%" height="15" fill="rgb(247,98,35)" fg:x="21" fg:w="1"/><text x="1.3594%" y="703.50"></text></g><g><title>maelstrom-txn`core::option::Option&lt;T&gt;::and_then (1 samples, 0.05%)</title><rect x="1.1622%" y="725" width="0.0528%" height="15" fill="rgb(247,138,52)" fg:x="22" fg:w="1"/><text x="1.4122%" y="735.50"></text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Root::get::_{{closure}} (1 samples, 0.05%)</title><rect x="1.1622%" y="709" width="0.0528%" height="15" fill="rgb(213,79,30)" fg:x="22" fg:w="1"/><text x="1.4122%" y="719.50"></text></g><g><title>maelstrom-txn`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.05%)</title><rect x="1.1622%" y="693" width="0.0528%" height="15" fill="rgb(246,177,23)" fg:x="22" fg:w="1"/><text x="1.4122%" y="703.50"></text></g><g><title>maelstrom-txn`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.05%)</title><rect x="1.1622%" y="677" width="0.0528%" height="15" fill="rgb(230,62,27)" fg:x="22" fg:w="1"/><text x="1.4122%" y="687.50"></text></g><g><title>maelstrom-txn`core::hash::BuildHasher::hash_one (1 samples, 0.05%)</title><rect x="1.1622%" y="661" width="0.0528%" height="15" fill="rgb(216,154,8)" fg:x="22" fg:w="1"/><text x="1.4122%" y="671.50"></text></g><g><title>maelstrom-txn`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.05%)</title><rect x="1.1622%" y="645" width="0.0528%" height="15" fill="rgb(244,35,45)" fg:x="22" fg:w="1"/><text x="1.4122%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.05%)</title><rect x="1.1622%" y="629" width="0.0528%" height="15" fill="rgb(251,115,12)" fg:x="22" fg:w="1"/><text x="1.4122%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.05%)</title><rect x="1.1622%" y="613" width="0.0528%" height="15" fill="rgb(240,54,50)" fg:x="22" fg:w="1"/><text x="1.4122%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.05%)</title><rect x="1.1622%" y="597" width="0.0528%" height="15" fill="rgb(233,84,52)" fg:x="22" fg:w="1"/><text x="1.4122%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="1.1622%" y="581" width="0.0528%" height="15" fill="rgb(207,117,47)" fg:x="22" fg:w="1"/><text x="1.4122%" y="591.50"></text></g><g><title>maelstrom-txn`core::hash::sip::u8to64_le (1 samples, 0.05%)</title><rect x="1.1622%" y="565" width="0.0528%" height="15" fill="rgb(249,43,39)" fg:x="22" fg:w="1"/><text x="1.4122%" y="575.50"></text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Root::get (2 samples, 0.11%)</title><rect x="1.1622%" y="741" width="0.1057%" height="15" fill="rgb(209,38,44)" fg:x="22" fg:w="2"/><text x="1.4122%" y="751.50"></text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Root::part_key (1 samples, 0.05%)</title><rect x="1.2150%" y="725" width="0.0528%" height="15" fill="rgb(236,212,23)" fg:x="23" fg:w="1"/><text x="1.4650%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;&amp;usize as core::ops::arith::Div&lt;usize&gt;&gt;::div (1 samples, 0.05%)</title><rect x="1.2150%" y="709" width="0.0528%" height="15" fill="rgb(242,79,21)" fg:x="23" fg:w="1"/><text x="1.4650%" y="719.50"></text></g><g><title>maelstrom-txn`core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.05%)</title><rect x="1.2678%" y="725" width="0.0528%" height="15" fill="rgb(211,96,35)" fg:x="24" fg:w="1"/><text x="1.5178%" y="735.50"></text></g><g><title>maelstrom-txn`core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.05%)</title><rect x="1.2678%" y="709" width="0.0528%" height="15" fill="rgb(253,215,40)" fg:x="24" fg:w="1"/><text x="1.5178%" y="719.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.05%)</title><rect x="1.3207%" y="725" width="0.0528%" height="15" fill="rgb(211,81,21)" fg:x="25" fg:w="1"/><text x="1.5707%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.11%)</title><rect x="1.3735%" y="709" width="0.1057%" height="15" fill="rgb(208,190,38)" fg:x="26" fg:w="2"/><text x="1.6235%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.11%)</title><rect x="1.3735%" y="693" width="0.1057%" height="15" fill="rgb(235,213,38)" fg:x="26" fg:w="2"/><text x="1.6235%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`read (15 samples, 0.79%)</title><rect x="1.4791%" y="693" width="0.7924%" height="15" fill="rgb(237,122,38)" fg:x="28" fg:w="15"/><text x="1.7291%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StdinLock as std::io::BufRead&gt;::read_line (18 samples, 0.95%)</title><rect x="1.4791%" y="709" width="0.9509%" height="15" fill="rgb(244,218,35)" fg:x="28" fg:w="18"/><text x="1.7291%" y="719.50"></text></g><g><title>maelstrom-txn`std::io::read_until (3 samples, 0.16%)</title><rect x="2.2715%" y="693" width="0.1585%" height="15" fill="rgb(240,68,47)" fg:x="43" fg:w="3"/><text x="2.5215%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="2.3772%" y="677" width="0.0528%" height="15" fill="rgb(210,16,53)" fg:x="45" fg:w="1"/><text x="2.6272%" y="687.50"></text></g><g><title>maelstrom-txn`core::sync::atomic::atomic_load (1 samples, 0.05%)</title><rect x="2.4300%" y="661" width="0.0528%" height="15" fill="rgb(235,124,12)" fg:x="46" fg:w="1"/><text x="2.6800%" y="671.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;std::io::stdio::StdinLock&gt; (2 samples, 0.11%)</title><rect x="2.4300%" y="709" width="0.1057%" height="15" fill="rgb(224,169,11)" fg:x="46" fg:w="2"/><text x="2.6800%" y="719.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;std::io::buffered::bufreader::BufReader&lt;std::io::stdio::StdinRaw&gt;&gt;&gt; (2 samples, 0.11%)</title><rect x="2.4300%" y="693" width="0.1057%" height="15" fill="rgb(250,166,2)" fg:x="46" fg:w="2"/><text x="2.6800%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="2.4300%" y="677" width="0.1057%" height="15" fill="rgb(242,216,29)" fg:x="46" fg:w="2"/><text x="2.6800%" y="687.50"></text></g><g><title>maelstrom-txn`std::sys::sync::mutex::pthread::raw (1 samples, 0.05%)</title><rect x="2.4828%" y="661" width="0.0528%" height="15" fill="rgb(230,116,27)" fg:x="47" fg:w="1"/><text x="2.7328%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.05%)</title><rect x="2.5357%" y="629" width="0.0528%" height="15" fill="rgb(228,99,48)" fg:x="48" fg:w="1"/><text x="2.7857%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.05%)</title><rect x="2.5885%" y="501" width="0.0528%" height="15" fill="rgb(253,11,6)" fg:x="49" fg:w="1"/><text x="2.8385%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="2.6413%" y="501" width="0.0528%" height="15" fill="rgb(247,143,39)" fg:x="50" fg:w="1"/><text x="2.8913%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.16%)</title><rect x="2.5885%" y="597" width="0.1585%" height="15" fill="rgb(236,97,10)" fg:x="49" fg:w="3"/><text x="2.8385%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (3 samples, 0.16%)</title><rect x="2.5885%" y="581" width="0.1585%" height="15" fill="rgb(233,208,19)" fg:x="49" fg:w="3"/><text x="2.8385%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (3 samples, 0.16%)</title><rect x="2.5885%" y="565" width="0.1585%" height="15" fill="rgb(216,164,2)" fg:x="49" fg:w="3"/><text x="2.8385%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.16%)</title><rect x="2.5885%" y="549" width="0.1585%" height="15" fill="rgb(220,129,5)" fg:x="49" fg:w="3"/><text x="2.8385%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (3 samples, 0.16%)</title><rect x="2.5885%" y="533" width="0.1585%" height="15" fill="rgb(242,17,10)" fg:x="49" fg:w="3"/><text x="2.8385%" y="543.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::parse_str_bytes (3 samples, 0.16%)</title><rect x="2.5885%" y="517" width="0.1585%" height="15" fill="rgb(242,107,0)" fg:x="49" fg:w="3"/><text x="2.8385%" y="527.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::skip_to_escape (1 samples, 0.05%)</title><rect x="2.6941%" y="501" width="0.0528%" height="15" fill="rgb(251,28,31)" fg:x="51" fg:w="1"/><text x="2.9441%" y="511.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_key (4 samples, 0.21%)</title><rect x="2.5885%" y="629" width="0.2113%" height="15" fill="rgb(233,223,10)" fg:x="49" fg:w="4"/><text x="2.8385%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.21%)</title><rect x="2.5885%" y="613" width="0.2113%" height="15" fill="rgb(215,21,27)" fg:x="49" fg:w="4"/><text x="2.8385%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (1 samples, 0.05%)</title><rect x="2.7470%" y="597" width="0.0528%" height="15" fill="rgb(232,23,21)" fg:x="52" fg:w="1"/><text x="2.9970%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::ignored_any::IgnoredAny as serde::de::Deserialize&gt;::deserialize (1 samples, 0.05%)</title><rect x="2.7998%" y="581" width="0.0528%" height="15" fill="rgb(244,5,23)" fg:x="53" fg:w="1"/><text x="3.0498%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_ignored_any (1 samples, 0.05%)</title><rect x="2.7998%" y="565" width="0.0528%" height="15" fill="rgb(226,81,46)" fg:x="53" fg:w="1"/><text x="3.0498%" y="575.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::ignore_value (1 samples, 0.05%)</title><rect x="2.7998%" y="549" width="0.0528%" height="15" fill="rgb(247,70,30)" fg:x="53" fg:w="1"/><text x="3.0498%" y="559.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::ignore_integer (1 samples, 0.05%)</title><rect x="2.7998%" y="533" width="0.0528%" height="15" fill="rgb(212,68,19)" fg:x="53" fg:w="1"/><text x="3.0498%" y="543.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::peek_or_null (1 samples, 0.05%)</title><rect x="2.7998%" y="517" width="0.0528%" height="15" fill="rgb(240,187,13)" fg:x="53" fg:w="1"/><text x="3.0498%" y="527.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::peek (1 samples, 0.05%)</title><rect x="2.7998%" y="501" width="0.0528%" height="15" fill="rgb(223,113,26)" fg:x="53" fg:w="1"/><text x="3.0498%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1 samples, 0.05%)</title><rect x="2.7998%" y="485" width="0.0528%" height="15" fill="rgb(206,192,2)" fg:x="53" fg:w="1"/><text x="3.0498%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.05%)</title><rect x="2.7998%" y="469" width="0.0528%" height="15" fill="rgb(241,108,4)" fg:x="53" fg:w="1"/><text x="3.0498%" y="479.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.05%)</title><rect x="2.8526%" y="533" width="0.0528%" height="15" fill="rgb(247,173,49)" fg:x="54" fg:w="1"/><text x="3.1026%" y="543.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.05%)</title><rect x="2.8526%" y="517" width="0.0528%" height="15" fill="rgb(224,114,35)" fg:x="54" fg:w="1"/><text x="3.1026%" y="527.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1 samples, 0.05%)</title><rect x="2.8526%" y="501" width="0.0528%" height="15" fill="rgb(245,159,27)" fg:x="54" fg:w="1"/><text x="3.1026%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="2.8526%" y="485" width="0.0528%" height="15" fill="rgb(245,172,44)" fg:x="54" fg:w="1"/><text x="3.1026%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.05%)</title><rect x="3.0111%" y="453" width="0.0528%" height="15" fill="rgb(236,23,11)" fg:x="57" fg:w="1"/><text x="3.2611%" y="463.50"></text></g><g><title>maelstrom-txn`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.05%)</title><rect x="3.0639%" y="405" width="0.0528%" height="15" fill="rgb(205,117,38)" fg:x="58" fg:w="1"/><text x="3.3139%" y="415.50"></text></g><g><title>maelstrom-txn`core::str::traits::_&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.05%)</title><rect x="3.0639%" y="389" width="0.0528%" height="15" fill="rgb(237,72,25)" fg:x="58" fg:w="1"/><text x="3.3139%" y="399.50"></text></g><g><title>maelstrom-txn`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.05%)</title><rect x="3.0639%" y="373" width="0.0528%" height="15" fill="rgb(244,70,9)" fg:x="58" fg:w="1"/><text x="3.3139%" y="383.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapAccess&lt;E&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.16%)</title><rect x="3.0111%" y="469" width="0.1585%" height="15" fill="rgb(217,125,39)" fg:x="57" fg:w="3"/><text x="3.2611%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::TagOrContentVisitor as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.11%)</title><rect x="3.0639%" y="453" width="0.1057%" height="15" fill="rgb(235,36,10)" fg:x="58" fg:w="2"/><text x="3.3139%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.11%)</title><rect x="3.0639%" y="437" width="0.1057%" height="15" fill="rgb(251,123,47)" fg:x="58" fg:w="2"/><text x="3.3139%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::TagOrContentVisitor as serde::de::Visitor&gt;::visit_borrowed_str (2 samples, 0.11%)</title><rect x="3.0639%" y="421" width="0.1057%" height="15" fill="rgb(221,13,13)" fg:x="58" fg:w="2"/><text x="3.3139%" y="431.50"></text></g><g><title>maelstrom-txn`core::result::Result&lt;T,E&gt;::map (1 samples, 0.05%)</title><rect x="3.1167%" y="405" width="0.0528%" height="15" fill="rgb(238,131,9)" fg:x="59" fg:w="1"/><text x="3.3667%" y="415.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.05%)</title><rect x="3.1696%" y="469" width="0.0528%" height="15" fill="rgb(211,50,8)" fg:x="60" fg:w="1"/><text x="3.4196%" y="479.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.05%)</title><rect x="3.1696%" y="453" width="0.0528%" height="15" fill="rgb(245,182,24)" fg:x="60" fg:w="1"/><text x="3.4196%" y="463.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1 samples, 0.05%)</title><rect x="3.1696%" y="437" width="0.0528%" height="15" fill="rgb(242,14,37)" fg:x="60" fg:w="1"/><text x="3.4196%" y="447.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::finish_grow (1 samples, 0.05%)</title><rect x="3.1696%" y="421" width="0.0528%" height="15" fill="rgb(246,228,12)" fg:x="60" fg:w="1"/><text x="3.4196%" y="431.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="3.1696%" y="405" width="0.0528%" height="15" fill="rgb(213,55,15)" fg:x="60" fg:w="1"/><text x="3.4196%" y="415.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="3.1696%" y="389" width="0.0528%" height="15" fill="rgb(209,9,3)" fg:x="60" fg:w="1"/><text x="3.4196%" y="399.50"></text></g><g><title>maelstrom-txn`alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="3.1696%" y="373" width="0.0528%" height="15" fill="rgb(230,59,30)" fg:x="60" fg:w="1"/><text x="3.4196%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.05%)</title><rect x="3.1696%" y="357" width="0.0528%" height="15" fill="rgb(209,121,21)" fg:x="60" fg:w="1"/><text x="3.4196%" y="367.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.37%)</title><rect x="2.9583%" y="517" width="0.3698%" height="15" fill="rgb(220,109,13)" fg:x="56" fg:w="7"/><text x="3.2083%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_map (7 samples, 0.37%)</title><rect x="2.9583%" y="501" width="0.3698%" height="15" fill="rgb(232,18,1)" fg:x="56" fg:w="7"/><text x="3.2083%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::TaggedContentVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_map (7 samples, 0.37%)</title><rect x="2.9583%" y="485" width="0.3698%" height="15" fill="rgb(215,41,42)" fg:x="56" fg:w="7"/><text x="3.2083%" y="495.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (2 samples, 0.11%)</title><rect x="3.2224%" y="469" width="0.1057%" height="15" fill="rgb(224,123,36)" fg:x="61" fg:w="2"/><text x="3.4724%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapAccess&lt;E&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.11%)</title><rect x="3.2224%" y="453" width="0.1057%" height="15" fill="rgb(240,125,3)" fg:x="61" fg:w="2"/><text x="3.4724%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.11%)</title><rect x="3.2224%" y="437" width="0.1057%" height="15" fill="rgb(205,98,50)" fg:x="61" fg:w="2"/><text x="3.4724%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (2 samples, 0.11%)</title><rect x="3.2224%" y="421" width="0.1057%" height="15" fill="rgb(205,185,37)" fg:x="61" fg:w="2"/><text x="3.4724%" y="431.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::__deserialize_content (2 samples, 0.11%)</title><rect x="3.2224%" y="405" width="0.1057%" height="15" fill="rgb(238,207,15)" fg:x="61" fg:w="2"/><text x="3.4724%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as core::clone::Clone&gt;::clone (2 samples, 0.11%)</title><rect x="3.2224%" y="389" width="0.1057%" height="15" fill="rgb(213,199,42)" fg:x="61" fg:w="2"/><text x="3.4724%" y="399.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.11%)</title><rect x="3.2224%" y="373" width="0.1057%" height="15" fill="rgb(235,201,11)" fg:x="61" fg:w="2"/><text x="3.4724%" y="383.50"></text></g><g><title>maelstrom-txn`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.11%)</title><rect x="3.2224%" y="357" width="0.1057%" height="15" fill="rgb(207,46,11)" fg:x="61" fg:w="2"/><text x="3.4724%" y="367.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="3.2752%" y="341" width="0.0528%" height="15" fill="rgb(241,35,35)" fg:x="62" fg:w="1"/><text x="3.5252%" y="351.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="3.2752%" y="325" width="0.0528%" height="15" fill="rgb(243,32,47)" fg:x="62" fg:w="1"/><text x="3.5252%" y="335.50"></text></g><g><title>maelstrom-txn`core::result::Result&lt;T,E&gt;::map (1 samples, 0.05%)</title><rect x="3.3281%" y="517" width="0.0528%" height="15" fill="rgb(247,202,23)" fg:x="63" fg:w="1"/><text x="3.5781%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.05%)</title><rect x="3.4337%" y="421" width="0.0528%" height="15" fill="rgb(219,102,11)" fg:x="65" fg:w="1"/><text x="3.6837%" y="431.50"></text></g><g><title>maelstrom-txn`core::ops::function::FnOnce::call_once (1 samples, 0.05%)</title><rect x="3.4865%" y="405" width="0.0528%" height="15" fill="rgb(243,110,44)" fg:x="66" fg:w="1"/><text x="3.7365%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::MapAccess&gt;::next_key (3 samples, 0.16%)</title><rect x="3.4337%" y="453" width="0.1585%" height="15" fill="rgb(222,74,54)" fg:x="65" fg:w="3"/><text x="3.6837%" y="463.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_key (3 samples, 0.16%)</title><rect x="3.4337%" y="437" width="0.1585%" height="15" fill="rgb(216,99,12)" fg:x="65" fg:w="3"/><text x="3.6837%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.11%)</title><rect x="3.4865%" y="421" width="0.1057%" height="15" fill="rgb(226,22,26)" fg:x="66" fg:w="2"/><text x="3.7365%" y="431.50"></text></g><g><title>maelstrom-txn`serde::de::value::MapDeserializer&lt;I,E&gt;::next_pair (1 samples, 0.05%)</title><rect x="3.5394%" y="405" width="0.0528%" height="15" fill="rgb(217,163,10)" fg:x="67" fg:w="1"/><text x="3.7894%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="3.5394%" y="389" width="0.0528%" height="15" fill="rgb(213,25,53)" fg:x="67" fg:w="1"/><text x="3.7894%" y="399.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.05%)</title><rect x="3.5394%" y="373" width="0.0528%" height="15" fill="rgb(252,105,26)" fg:x="67" fg:w="1"/><text x="3.7894%" y="383.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="3.5394%" y="357" width="0.0528%" height="15" fill="rgb(220,39,43)" fg:x="67" fg:w="1"/><text x="3.7894%" y="367.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.05%)</title><rect x="3.5922%" y="341" width="0.0528%" height="15" fill="rgb(229,68,48)" fg:x="68" fg:w="1"/><text x="3.8422%" y="351.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::SeqAccess&gt;::next_element (1 samples, 0.05%)</title><rect x="3.5922%" y="325" width="0.0528%" height="15" fill="rgb(252,8,32)" fg:x="68" fg:w="1"/><text x="3.8422%" y="335.50"></text></g><g><title>maelstrom-txn`serde::de::SeqAccess::next_element (1 samples, 0.05%)</title><rect x="3.5922%" y="309" width="0.0528%" height="15" fill="rgb(223,20,43)" fg:x="68" fg:w="1"/><text x="3.8422%" y="319.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::value::SeqDeserializer&lt;I,E&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.05%)</title><rect x="3.5922%" y="293" width="0.0528%" height="15" fill="rgb(229,81,49)" fg:x="68" fg:w="1"/><text x="3.8422%" y="303.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="3.5922%" y="277" width="0.0528%" height="15" fill="rgb(236,28,36)" fg:x="68" fg:w="1"/><text x="3.8422%" y="287.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.05%)</title><rect x="3.5922%" y="261" width="0.0528%" height="15" fill="rgb(249,185,26)" fg:x="68" fg:w="1"/><text x="3.8422%" y="271.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="3.5922%" y="245" width="0.0528%" height="15" fill="rgb(249,174,33)" fg:x="68" fg:w="1"/><text x="3.8422%" y="255.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="3.6450%" y="293" width="0.0528%" height="15" fill="rgb(233,201,37)" fg:x="69" fg:w="1"/><text x="3.8950%" y="303.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageExtra&gt;::deserialize (16 samples, 0.85%)</title><rect x="2.9054%" y="533" width="0.8452%" height="15" fill="rgb(221,78,26)" fg:x="55" fg:w="16"/><text x="3.1554%" y="543.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::KvReadOkExtra&gt;::deserialize (7 samples, 0.37%)</title><rect x="3.3809%" y="517" width="0.3698%" height="15" fill="rgb(250,127,30)" fg:x="64" fg:w="7"/><text x="3.6309%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (7 samples, 0.37%)</title><rect x="3.3809%" y="501" width="0.3698%" height="15" fill="rgb(230,49,44)" fg:x="64" fg:w="7"/><text x="3.6309%" y="511.50"></text></g><g><title>maelstrom-txn`serde::__private::de::content::visit_content_map (7 samples, 0.37%)</title><rect x="3.3809%" y="485" width="0.3698%" height="15" fill="rgb(229,67,23)" fg:x="64" fg:w="7"/><text x="3.6309%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::KvReadOkExtra&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.37%)</title><rect x="3.3809%" y="469" width="0.3698%" height="15" fill="rgb(249,83,47)" fg:x="64" fg:w="7"/><text x="3.6309%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::MapAccess&gt;::next_value (3 samples, 0.16%)</title><rect x="3.5922%" y="453" width="0.1585%" height="15" fill="rgb(215,43,3)" fg:x="68" fg:w="3"/><text x="3.8422%" y="463.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (3 samples, 0.16%)</title><rect x="3.5922%" y="437" width="0.1585%" height="15" fill="rgb(238,154,13)" fg:x="68" fg:w="3"/><text x="3.8422%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.16%)</title><rect x="3.5922%" y="421" width="0.1585%" height="15" fill="rgb(219,56,2)" fg:x="68" fg:w="3"/><text x="3.8422%" y="431.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.16%)</title><rect x="3.5922%" y="405" width="0.1585%" height="15" fill="rgb(233,0,4)" fg:x="68" fg:w="3"/><text x="3.8422%" y="415.50"></text></g><g><title>maelstrom-txn`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.16%)</title><rect x="3.5922%" y="389" width="0.1585%" height="15" fill="rgb(235,30,7)" fg:x="68" fg:w="3"/><text x="3.8422%" y="399.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.16%)</title><rect x="3.5922%" y="373" width="0.1585%" height="15" fill="rgb(250,79,13)" fg:x="68" fg:w="3"/><text x="3.8422%" y="383.50"></text></g><g><title>maelstrom-txn`serde::__private::de::content::visit_content_seq (3 samples, 0.16%)</title><rect x="3.5922%" y="357" width="0.1585%" height="15" fill="rgb(211,146,34)" fg:x="68" fg:w="3"/><text x="3.8422%" y="367.50"></text></g><g><title>maelstrom-txn`serde::de::value::SeqDeserializer&lt;I,E&gt;::end (2 samples, 0.11%)</title><rect x="3.6450%" y="341" width="0.1057%" height="15" fill="rgb(228,22,38)" fg:x="69" fg:w="2"/><text x="3.8950%" y="351.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::count (2 samples, 0.11%)</title><rect x="3.6450%" y="325" width="0.1057%" height="15" fill="rgb(235,168,5)" fg:x="69" fg:w="2"/><text x="3.8950%" y="335.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::count (2 samples, 0.11%)</title><rect x="3.6450%" y="309" width="0.1057%" height="15" fill="rgb(221,155,16)" fg:x="69" fg:w="2"/><text x="3.8950%" y="319.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;serde::__private::de::content::Content&gt;&gt; (1 samples, 0.05%)</title><rect x="3.6978%" y="293" width="0.0528%" height="15" fill="rgb(215,215,53)" fg:x="70" fg:w="1"/><text x="3.9478%" y="303.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;[serde::__private::de::content::Content]&gt; (1 samples, 0.05%)</title><rect x="3.6978%" y="277" width="0.0528%" height="15" fill="rgb(223,4,10)" fg:x="70" fg:w="1"/><text x="3.9478%" y="287.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="3.8035%" y="405" width="0.0528%" height="15" fill="rgb(234,103,6)" fg:x="72" fg:w="1"/><text x="4.0535%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.16%)</title><rect x="3.7507%" y="501" width="0.1585%" height="15" fill="rgb(227,97,0)" fg:x="71" fg:w="3"/><text x="4.0007%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (3 samples, 0.16%)</title><rect x="3.7507%" y="485" width="0.1585%" height="15" fill="rgb(234,150,53)" fg:x="71" fg:w="3"/><text x="4.0007%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (3 samples, 0.16%)</title><rect x="3.7507%" y="469" width="0.1585%" height="15" fill="rgb(228,201,54)" fg:x="71" fg:w="3"/><text x="4.0007%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.16%)</title><rect x="3.7507%" y="453" width="0.1585%" height="15" fill="rgb(222,22,37)" fg:x="71" fg:w="3"/><text x="4.0007%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (3 samples, 0.16%)</title><rect x="3.7507%" y="437" width="0.1585%" height="15" fill="rgb(237,53,32)" fg:x="71" fg:w="3"/><text x="4.0007%" y="447.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::parse_str_bytes (3 samples, 0.16%)</title><rect x="3.7507%" y="421" width="0.1585%" height="15" fill="rgb(233,25,53)" fg:x="71" fg:w="3"/><text x="4.0007%" y="431.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::skip_to_escape (1 samples, 0.05%)</title><rect x="3.8563%" y="405" width="0.0528%" height="15" fill="rgb(210,40,34)" fg:x="73" fg:w="1"/><text x="4.1063%" y="415.50"></text></g><g><title>maelstrom-txn`core::slice::_&lt;impl [T]&gt;::chunks_exact (1 samples, 0.05%)</title><rect x="3.8563%" y="389" width="0.0528%" height="15" fill="rgb(241,220,44)" fg:x="73" fg:w="1"/><text x="4.1063%" y="399.50"></text></g><g><title>maelstrom-txn`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.05%)</title><rect x="3.8563%" y="373" width="0.0528%" height="15" fill="rgb(235,28,35)" fg:x="73" fg:w="1"/><text x="4.1063%" y="383.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_key (4 samples, 0.21%)</title><rect x="3.7507%" y="533" width="0.2113%" height="15" fill="rgb(210,56,17)" fg:x="71" fg:w="4"/><text x="4.0007%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.21%)</title><rect x="3.7507%" y="517" width="0.2113%" height="15" fill="rgb(224,130,29)" fg:x="71" fg:w="4"/><text x="4.0007%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (1 samples, 0.05%)</title><rect x="3.9091%" y="501" width="0.0528%" height="15" fill="rgb(235,212,8)" fg:x="74" fg:w="1"/><text x="4.1591%" y="511.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::eat_char (1 samples, 0.05%)</title><rect x="3.9091%" y="485" width="0.0528%" height="15" fill="rgb(223,33,50)" fg:x="74" fg:w="1"/><text x="4.1591%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::discard (1 samples, 0.05%)</title><rect x="3.9091%" y="469" width="0.0528%" height="15" fill="rgb(219,149,13)" fg:x="74" fg:w="1"/><text x="4.1591%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::discard (1 samples, 0.05%)</title><rect x="3.9091%" y="453" width="0.0528%" height="15" fill="rgb(250,156,29)" fg:x="74" fg:w="1"/><text x="4.1591%" y="463.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.05%)</title><rect x="4.0676%" y="421" width="0.0528%" height="15" fill="rgb(216,193,19)" fg:x="77" fg:w="1"/><text x="4.3176%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.05%)</title><rect x="4.1204%" y="293" width="0.0528%" height="15" fill="rgb(216,135,14)" fg:x="78" fg:w="1"/><text x="4.3704%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="4.1204%" y="277" width="0.0528%" height="15" fill="rgb(241,47,5)" fg:x="78" fg:w="1"/><text x="4.3704%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="4.1204%" y="261" width="0.0528%" height="15" fill="rgb(233,42,35)" fg:x="78" fg:w="1"/><text x="4.3704%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.11%)</title><rect x="4.1204%" y="325" width="0.1057%" height="15" fill="rgb(231,13,6)" fg:x="78" fg:w="2"/><text x="4.3704%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.11%)</title><rect x="4.1204%" y="309" width="0.1057%" height="15" fill="rgb(207,181,40)" fg:x="78" fg:w="2"/><text x="4.3704%" y="319.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.05%)</title><rect x="4.1733%" y="293" width="0.0528%" height="15" fill="rgb(254,173,49)" fg:x="79" fg:w="1"/><text x="4.4233%" y="303.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.21%)</title><rect x="4.1204%" y="421" width="0.2113%" height="15" fill="rgb(221,1,38)" fg:x="78" fg:w="4"/><text x="4.3704%" y="431.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.21%)</title><rect x="4.1204%" y="405" width="0.2113%" height="15" fill="rgb(206,124,46)" fg:x="78" fg:w="4"/><text x="4.3704%" y="415.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (4 samples, 0.21%)</title><rect x="4.1204%" y="389" width="0.2113%" height="15" fill="rgb(249,21,11)" fg:x="78" fg:w="4"/><text x="4.3704%" y="399.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::finish_grow (4 samples, 0.21%)</title><rect x="4.1204%" y="373" width="0.2113%" height="15" fill="rgb(222,201,40)" fg:x="78" fg:w="4"/><text x="4.3704%" y="383.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.21%)</title><rect x="4.1204%" y="357" width="0.2113%" height="15" fill="rgb(235,61,29)" fg:x="78" fg:w="4"/><text x="4.3704%" y="367.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::grow_impl (4 samples, 0.21%)</title><rect x="4.1204%" y="341" width="0.2113%" height="15" fill="rgb(219,207,3)" fg:x="78" fg:w="4"/><text x="4.3704%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.11%)</title><rect x="4.2261%" y="325" width="0.1057%" height="15" fill="rgb(222,56,46)" fg:x="80" fg:w="2"/><text x="4.4761%" y="335.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (8 samples, 0.42%)</title><rect x="3.9620%" y="485" width="0.4226%" height="15" fill="rgb(239,76,54)" fg:x="75" fg:w="8"/><text x="4.2120%" y="495.50"></text></g><g><title>maelstrom-txn`serde::de::Deserializer::__deserialize_content (8 samples, 0.42%)</title><rect x="3.9620%" y="469" width="0.4226%" height="15" fill="rgb(231,124,27)" fg:x="75" fg:w="8"/><text x="4.2120%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.42%)</title><rect x="3.9620%" y="453" width="0.4226%" height="15" fill="rgb(249,195,6)" fg:x="75" fg:w="8"/><text x="4.2120%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (7 samples, 0.37%)</title><rect x="4.0148%" y="437" width="0.3698%" height="15" fill="rgb(237,174,47)" fg:x="76" fg:w="7"/><text x="4.2648%" y="447.50"></text></g><g><title>maelstrom-txn`serde::de::SeqAccess::next_element (1 samples, 0.05%)</title><rect x="4.3317%" y="421" width="0.0528%" height="15" fill="rgb(206,201,31)" fg:x="82" fg:w="1"/><text x="4.5817%" y="431.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.05%)</title><rect x="4.3317%" y="405" width="0.0528%" height="15" fill="rgb(231,57,52)" fg:x="82" fg:w="1"/><text x="4.5817%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed::has_next_element (1 samples, 0.05%)</title><rect x="4.3317%" y="389" width="0.0528%" height="15" fill="rgb(248,177,22)" fg:x="82" fg:w="1"/><text x="4.5817%" y="399.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (30 samples, 1.58%)</title><rect x="2.8526%" y="549" width="1.5848%" height="15" fill="rgb(215,211,37)" fg:x="54" fg:w="30"/><text x="3.1026%" y="559.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (9 samples, 0.48%)</title><rect x="3.9620%" y="533" width="0.4754%" height="15" fill="rgb(241,128,51)" fg:x="75" fg:w="9"/><text x="4.2120%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (9 samples, 0.48%)</title><rect x="3.9620%" y="517" width="0.4754%" height="15" fill="rgb(227,165,31)" fg:x="75" fg:w="9"/><text x="4.2120%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9 samples, 0.48%)</title><rect x="3.9620%" y="501" width="0.4754%" height="15" fill="rgb(228,167,24)" fg:x="75" fg:w="9"/><text x="4.2120%" y="511.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1 samples, 0.05%)</title><rect x="4.3846%" y="485" width="0.0528%" height="15" fill="rgb(228,143,12)" fg:x="83" fg:w="1"/><text x="4.6346%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (1 samples, 0.05%)</title><rect x="4.3846%" y="469" width="0.0528%" height="15" fill="rgb(249,149,8)" fg:x="83" fg:w="1"/><text x="4.6346%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (1 samples, 0.05%)</title><rect x="4.3846%" y="453" width="0.0528%" height="15" fill="rgb(243,35,44)" fg:x="83" fg:w="1"/><text x="4.6346%" y="463.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for u64&gt;::deserialize (1 samples, 0.05%)</title><rect x="4.3846%" y="437" width="0.0528%" height="15" fill="rgb(246,89,9)" fg:x="83" fg:w="1"/><text x="4.6346%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u64 (1 samples, 0.05%)</title><rect x="4.3846%" y="421" width="0.0528%" height="15" fill="rgb(233,213,13)" fg:x="83" fg:w="1"/><text x="4.6346%" y="431.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::deserialize_number (1 samples, 0.05%)</title><rect x="4.3846%" y="405" width="0.0528%" height="15" fill="rgb(233,141,41)" fg:x="83" fg:w="1"/><text x="4.6346%" y="415.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize (31 samples, 1.64%)</title><rect x="2.8526%" y="581" width="1.6376%" height="15" fill="rgb(239,167,4)" fg:x="54" fg:w="31"/><text x="3.1026%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (31 samples, 1.64%)</title><rect x="2.8526%" y="565" width="1.6376%" height="15" fill="rgb(209,217,16)" fg:x="54" fg:w="31"/><text x="3.1026%" y="575.50"></text></g><g><title>maelstrom-txn`serde_json::de::MapAccess&lt;R&gt;::new (1 samples, 0.05%)</title><rect x="4.4374%" y="549" width="0.0528%" height="15" fill="rgb(219,88,35)" fg:x="84" fg:w="1"/><text x="4.6874%" y="559.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="4.4902%" y="469" width="0.0528%" height="15" fill="rgb(220,193,23)" fg:x="85" fg:w="1"/><text x="4.7402%" y="479.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1 samples, 0.05%)</title><rect x="4.4902%" y="453" width="0.0528%" height="15" fill="rgb(230,90,52)" fg:x="85" fg:w="1"/><text x="4.7402%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="4.4902%" y="437" width="0.0528%" height="15" fill="rgb(252,106,19)" fg:x="85" fg:w="1"/><text x="4.7402%" y="447.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="4.4902%" y="421" width="0.0528%" height="15" fill="rgb(206,74,20)" fg:x="85" fg:w="1"/><text x="4.7402%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.05%)</title><rect x="4.4902%" y="405" width="0.0528%" height="15" fill="rgb(230,138,44)" fg:x="85" fg:w="1"/><text x="4.7402%" y="415.50"></text></g><g><title>maelstrom-txn`serde::de::Visitor::visit_borrowed_str (2 samples, 0.11%)</title><rect x="4.4902%" y="533" width="0.1057%" height="15" fill="rgb(235,182,43)" fg:x="85" fg:w="2"/><text x="4.7402%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (2 samples, 0.11%)</title><rect x="4.4902%" y="517" width="0.1057%" height="15" fill="rgb(242,16,51)" fg:x="85" fg:w="2"/><text x="4.7402%" y="527.50"></text></g><g><title>maelstrom-txn`alloc::str::_&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.11%)</title><rect x="4.4902%" y="501" width="0.1057%" height="15" fill="rgb(248,9,4)" fg:x="85" fg:w="2"/><text x="4.7402%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.11%)</title><rect x="4.4902%" y="485" width="0.1057%" height="15" fill="rgb(210,31,22)" fg:x="85" fg:w="2"/><text x="4.7402%" y="495.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.05%)</title><rect x="4.5431%" y="469" width="0.0528%" height="15" fill="rgb(239,54,39)" fg:x="86" fg:w="1"/><text x="4.7931%" y="479.50"></text></g><g><title>maelstrom-txn`serde_json::de::from_str (40 samples, 2.11%)</title><rect x="2.5357%" y="709" width="2.1130%" height="15" fill="rgb(230,99,41)" fg:x="48" fg:w="40"/><text x="2.7857%" y="719.50">m..</text></g><g><title>maelstrom-txn`serde_json::de::from_trait (40 samples, 2.11%)</title><rect x="2.5357%" y="693" width="2.1130%" height="15" fill="rgb(253,106,12)" fg:x="48" fg:w="40"/><text x="2.7857%" y="703.50">m..</text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize (40 samples, 2.11%)</title><rect x="2.5357%" y="677" width="2.1130%" height="15" fill="rgb(213,46,41)" fg:x="48" fg:w="40"/><text x="2.7857%" y="687.50">m..</text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (40 samples, 2.11%)</title><rect x="2.5357%" y="661" width="2.1130%" height="15" fill="rgb(215,133,35)" fg:x="48" fg:w="40"/><text x="2.7857%" y="671.50">m..</text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (40 samples, 2.11%)</title><rect x="2.5357%" y="645" width="2.1130%" height="15" fill="rgb(213,28,5)" fg:x="48" fg:w="40"/><text x="2.7857%" y="655.50">m..</text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (35 samples, 1.85%)</title><rect x="2.7998%" y="629" width="1.8489%" height="15" fill="rgb(215,77,49)" fg:x="53" fg:w="35"/><text x="3.0498%" y="639.50">m..</text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (35 samples, 1.85%)</title><rect x="2.7998%" y="613" width="1.8489%" height="15" fill="rgb(248,100,22)" fg:x="53" fg:w="35"/><text x="3.0498%" y="623.50">m..</text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (35 samples, 1.85%)</title><rect x="2.7998%" y="597" width="1.8489%" height="15" fill="rgb(208,67,9)" fg:x="53" fg:w="35"/><text x="3.0498%" y="607.50">m..</text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (3 samples, 0.16%)</title><rect x="4.4902%" y="581" width="0.1585%" height="15" fill="rgb(219,133,21)" fg:x="85" fg:w="3"/><text x="4.7402%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (3 samples, 0.16%)</title><rect x="4.4902%" y="565" width="0.1585%" height="15" fill="rgb(246,46,29)" fg:x="85" fg:w="3"/><text x="4.7402%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (3 samples, 0.16%)</title><rect x="4.4902%" y="549" width="0.1585%" height="15" fill="rgb(246,185,52)" fg:x="85" fg:w="3"/><text x="4.7402%" y="559.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1 samples, 0.05%)</title><rect x="4.5959%" y="533" width="0.0528%" height="15" fill="rgb(252,136,11)" fg:x="87" fg:w="1"/><text x="4.8459%" y="543.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_string_fragment (1 samples, 0.05%)</title><rect x="4.7015%" y="533" width="0.0528%" height="15" fill="rgb(219,138,53)" fg:x="89" fg:w="1"/><text x="4.9515%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (3 samples, 0.16%)</title><rect x="4.7015%" y="613" width="0.1585%" height="15" fill="rgb(211,51,23)" fg:x="89" fg:w="3"/><text x="4.9515%" y="623.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (3 samples, 0.16%)</title><rect x="4.7015%" y="597" width="0.1585%" height="15" fill="rgb(247,221,28)" fg:x="89" fg:w="3"/><text x="4.9515%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (3 samples, 0.16%)</title><rect x="4.7015%" y="581" width="0.1585%" height="15" fill="rgb(251,222,45)" fg:x="89" fg:w="3"/><text x="4.9515%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (3 samples, 0.16%)</title><rect x="4.7015%" y="565" width="0.1585%" height="15" fill="rgb(217,162,53)" fg:x="89" fg:w="3"/><text x="4.9515%" y="575.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (3 samples, 0.16%)</title><rect x="4.7015%" y="549" width="0.1585%" height="15" fill="rgb(229,93,14)" fg:x="89" fg:w="3"/><text x="4.9515%" y="559.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (2 samples, 0.11%)</title><rect x="4.7544%" y="533" width="0.1057%" height="15" fill="rgb(209,67,49)" fg:x="90" fg:w="2"/><text x="5.0044%" y="543.50"></text></g><g><title>maelstrom-txn`core::option::Option&lt;T&gt;::is_none (1 samples, 0.05%)</title><rect x="4.8600%" y="581" width="0.0528%" height="15" fill="rgb(213,87,29)" fg:x="92" fg:w="1"/><text x="5.1100%" y="591.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.05%)</title><rect x="4.9128%" y="437" width="0.0528%" height="15" fill="rgb(205,151,52)" fg:x="93" fg:w="1"/><text x="5.1628%" y="447.50"></text></g><g><title>maelstrom-txn`itoa::Buffer::format (2 samples, 0.11%)</title><rect x="4.9128%" y="469" width="0.1057%" height="15" fill="rgb(253,215,39)" fg:x="93" fg:w="2"/><text x="5.1628%" y="479.50"></text></g><g><title>maelstrom-txn`itoa::_&lt;impl itoa::private::Sealed for u64&gt;::write (2 samples, 0.11%)</title><rect x="4.9128%" y="453" width="0.1057%" height="15" fill="rgb(221,220,41)" fg:x="93" fg:w="2"/><text x="5.1628%" y="463.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts (1 samples, 0.05%)</title><rect x="4.9657%" y="437" width="0.0528%" height="15" fill="rgb(218,133,21)" fg:x="94" fg:w="1"/><text x="5.2157%" y="447.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.05%)</title><rect x="4.9657%" y="421" width="0.0528%" height="15" fill="rgb(221,193,43)" fg:x="94" fg:w="1"/><text x="5.2157%" y="431.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (3 samples, 0.16%)</title><rect x="4.9128%" y="581" width="0.1585%" height="15" fill="rgb(240,128,52)" fg:x="93" fg:w="3"/><text x="5.1628%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.16%)</title><rect x="4.9128%" y="565" width="0.1585%" height="15" fill="rgb(253,114,12)" fg:x="93" fg:w="3"/><text x="5.1628%" y="575.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for core::option::Option&lt;T&gt;&gt;::serialize (3 samples, 0.16%)</title><rect x="4.9128%" y="549" width="0.1585%" height="15" fill="rgb(215,223,47)" fg:x="93" fg:w="3"/><text x="5.1628%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_some (3 samples, 0.16%)</title><rect x="4.9128%" y="533" width="0.1585%" height="15" fill="rgb(248,225,23)" fg:x="93" fg:w="3"/><text x="5.1628%" y="543.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for u64&gt;::serialize (3 samples, 0.16%)</title><rect x="4.9128%" y="517" width="0.1585%" height="15" fill="rgb(250,108,0)" fg:x="93" fg:w="3"/><text x="5.1628%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (3 samples, 0.16%)</title><rect x="4.9128%" y="501" width="0.1585%" height="15" fill="rgb(228,208,7)" fg:x="93" fg:w="3"/><text x="5.1628%" y="511.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_u64 (3 samples, 0.16%)</title><rect x="4.9128%" y="485" width="0.1585%" height="15" fill="rgb(244,45,10)" fg:x="93" fg:w="3"/><text x="5.1628%" y="495.50"></text></g><g><title>maelstrom-txn`itoa::Buffer::new (1 samples, 0.05%)</title><rect x="5.0185%" y="469" width="0.0528%" height="15" fill="rgb(207,125,25)" fg:x="95" fg:w="1"/><text x="5.2685%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="5.0185%" y="453" width="0.0528%" height="15" fill="rgb(210,195,18)" fg:x="95" fg:w="1"/><text x="5.2685%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::ser::FlatMapSerializeStruct&lt;M&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.11%)</title><rect x="5.0713%" y="517" width="0.1057%" height="15" fill="rgb(249,80,12)" fg:x="96" fg:w="2"/><text x="5.3213%" y="527.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (2 samples, 0.11%)</title><rect x="5.0713%" y="501" width="0.1057%" height="15" fill="rgb(221,65,9)" fg:x="96" fg:w="2"/><text x="5.3213%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.11%)</title><rect x="5.0713%" y="485" width="0.1057%" height="15" fill="rgb(235,49,36)" fg:x="96" fg:w="2"/><text x="5.3213%" y="495.50"></text></g><g><title>maelstrom-txn`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.11%)</title><rect x="5.0713%" y="469" width="0.1057%" height="15" fill="rgb(225,32,20)" fg:x="96" fg:w="2"/><text x="5.3213%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.11%)</title><rect x="5.0713%" y="453" width="0.1057%" height="15" fill="rgb(215,141,46)" fg:x="96" fg:w="2"/><text x="5.3213%" y="463.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (2 samples, 0.11%)</title><rect x="5.0713%" y="437" width="0.1057%" height="15" fill="rgb(250,160,47)" fg:x="96" fg:w="2"/><text x="5.3213%" y="447.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (2 samples, 0.11%)</title><rect x="5.0713%" y="421" width="0.1057%" height="15" fill="rgb(216,222,40)" fg:x="96" fg:w="2"/><text x="5.3213%" y="431.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_string_fragment (1 samples, 0.05%)</title><rect x="5.1241%" y="405" width="0.0528%" height="15" fill="rgb(234,217,39)" fg:x="97" fg:w="1"/><text x="5.3741%" y="415.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="5.1241%" y="389" width="0.0528%" height="15" fill="rgb(207,178,40)" fg:x="97" fg:w="1"/><text x="5.3741%" y="399.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="5.1241%" y="373" width="0.0528%" height="15" fill="rgb(221,136,13)" fg:x="97" fg:w="1"/><text x="5.3741%" y="383.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="5.1241%" y="357" width="0.0528%" height="15" fill="rgb(249,199,10)" fg:x="97" fg:w="1"/><text x="5.3741%" y="367.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="5.1241%" y="341" width="0.0528%" height="15" fill="rgb(249,222,13)" fg:x="97" fg:w="1"/><text x="5.3741%" y="351.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="5.1241%" y="325" width="0.0528%" height="15" fill="rgb(244,185,38)" fg:x="97" fg:w="1"/><text x="5.3741%" y="335.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.05%)</title><rect x="5.1241%" y="309" width="0.0528%" height="15" fill="rgb(236,202,9)" fg:x="97" fg:w="1"/><text x="5.3741%" y="319.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_string (1 samples, 0.05%)</title><rect x="5.1770%" y="389" width="0.0528%" height="15" fill="rgb(250,229,37)" fg:x="98" fg:w="1"/><text x="5.4270%" y="399.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="5.1770%" y="373" width="0.0528%" height="15" fill="rgb(206,174,23)" fg:x="98" fg:w="1"/><text x="5.4270%" y="383.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="5.1770%" y="357" width="0.0528%" height="15" fill="rgb(211,33,43)" fg:x="98" fg:w="1"/><text x="5.4270%" y="367.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="5.1770%" y="341" width="0.0528%" height="15" fill="rgb(245,58,50)" fg:x="98" fg:w="1"/><text x="5.4270%" y="351.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="5.1770%" y="325" width="0.0528%" height="15" fill="rgb(244,68,36)" fg:x="98" fg:w="1"/><text x="5.4270%" y="335.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.05%)</title><rect x="5.1770%" y="309" width="0.0528%" height="15" fill="rgb(232,229,15)" fg:x="98" fg:w="1"/><text x="5.4270%" y="319.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.11%)</title><rect x="5.1770%" y="469" width="0.1057%" height="15" fill="rgb(254,30,23)" fg:x="98" fg:w="2"/><text x="5.4270%" y="479.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (2 samples, 0.11%)</title><rect x="5.1770%" y="453" width="0.1057%" height="15" fill="rgb(235,160,14)" fg:x="98" fg:w="2"/><text x="5.4270%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.11%)</title><rect x="5.1770%" y="437" width="0.1057%" height="15" fill="rgb(212,155,44)" fg:x="98" fg:w="2"/><text x="5.4270%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.11%)</title><rect x="5.1770%" y="421" width="0.1057%" height="15" fill="rgb(226,2,50)" fg:x="98" fg:w="2"/><text x="5.4270%" y="431.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (2 samples, 0.11%)</title><rect x="5.1770%" y="405" width="0.1057%" height="15" fill="rgb(234,177,6)" fg:x="98" fg:w="2"/><text x="5.4270%" y="415.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (1 samples, 0.05%)</title><rect x="5.2298%" y="389" width="0.0528%" height="15" fill="rgb(217,24,9)" fg:x="99" fg:w="1"/><text x="5.4798%" y="399.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="5.2298%" y="373" width="0.0528%" height="15" fill="rgb(220,13,46)" fg:x="99" fg:w="1"/><text x="5.4798%" y="383.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::MessageExtra&gt;::serialize (5 samples, 0.26%)</title><rect x="5.0713%" y="565" width="0.2641%" height="15" fill="rgb(239,221,27)" fg:x="96" fg:w="5"/><text x="5.3213%" y="575.50"></text></g><g><title>maelstrom-txn`serde::__private::ser::serialize_tagged_newtype (5 samples, 0.26%)</title><rect x="5.0713%" y="549" width="0.2641%" height="15" fill="rgb(222,198,25)" fg:x="96" fg:w="5"/><text x="5.3213%" y="559.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::KvReadExtra&gt;::serialize (5 samples, 0.26%)</title><rect x="5.0713%" y="533" width="0.2641%" height="15" fill="rgb(211,99,13)" fg:x="96" fg:w="5"/><text x="5.3213%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::ser::TaggedSerializer&lt;S&gt; as serde::ser::Serializer&gt;::serialize_struct (3 samples, 0.16%)</title><rect x="5.1770%" y="517" width="0.1585%" height="15" fill="rgb(232,111,31)" fg:x="98" fg:w="3"/><text x="5.4270%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::ser::FlatMapSerializeStruct&lt;M&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.16%)</title><rect x="5.1770%" y="501" width="0.1585%" height="15" fill="rgb(245,82,37)" fg:x="98" fg:w="3"/><text x="5.4270%" y="511.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (3 samples, 0.16%)</title><rect x="5.1770%" y="485" width="0.1585%" height="15" fill="rgb(227,149,46)" fg:x="98" fg:w="3"/><text x="5.4270%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.05%)</title><rect x="5.2826%" y="469" width="0.0528%" height="15" fill="rgb(218,36,50)" fg:x="100" fg:w="1"/><text x="5.5326%" y="479.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.05%)</title><rect x="5.2826%" y="453" width="0.0528%" height="15" fill="rgb(226,80,48)" fg:x="100" fg:w="1"/><text x="5.5326%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.05%)</title><rect x="5.2826%" y="437" width="0.0528%" height="15" fill="rgb(238,224,15)" fg:x="100" fg:w="1"/><text x="5.5326%" y="447.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (1 samples, 0.05%)</title><rect x="5.2826%" y="421" width="0.0528%" height="15" fill="rgb(241,136,10)" fg:x="100" fg:w="1"/><text x="5.5326%" y="431.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (1 samples, 0.05%)</title><rect x="5.2826%" y="405" width="0.0528%" height="15" fill="rgb(208,32,45)" fg:x="100" fg:w="1"/><text x="5.5326%" y="415.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::MessageBody&gt;::serialize (10 samples, 0.53%)</title><rect x="4.8600%" y="597" width="0.5283%" height="15" fill="rgb(207,135,9)" fg:x="92" fg:w="10"/><text x="5.1100%" y="607.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.32%)</title><rect x="5.0713%" y="581" width="0.3170%" height="15" fill="rgb(206,86,44)" fg:x="96" fg:w="6"/><text x="5.3213%" y="591.50"></text></g><g><title>maelstrom-txn`serde::__private::ser::serialize_tagged_newtype (1 samples, 0.05%)</title><rect x="5.3354%" y="565" width="0.0528%" height="15" fill="rgb(245,177,15)" fg:x="101" fg:w="1"/><text x="5.5854%" y="575.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::end_string (1 samples, 0.05%)</title><rect x="5.3883%" y="549" width="0.0528%" height="15" fill="rgb(206,64,50)" fg:x="102" fg:w="1"/><text x="5.6383%" y="559.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="5.3883%" y="533" width="0.0528%" height="15" fill="rgb(234,36,40)" fg:x="102" fg:w="1"/><text x="5.6383%" y="543.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="5.3883%" y="517" width="0.0528%" height="15" fill="rgb(213,64,8)" fg:x="102" fg:w="1"/><text x="5.6383%" y="527.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="5.3883%" y="501" width="0.0528%" height="15" fill="rgb(210,75,36)" fg:x="102" fg:w="1"/><text x="5.6383%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.63%)</title><rect x="4.8600%" y="613" width="0.6339%" height="15" fill="rgb(229,88,21)" fg:x="92" fg:w="12"/><text x="5.1100%" y="623.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (2 samples, 0.11%)</title><rect x="5.3883%" y="597" width="0.1057%" height="15" fill="rgb(252,204,47)" fg:x="102" fg:w="2"/><text x="5.6383%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.11%)</title><rect x="5.3883%" y="581" width="0.1057%" height="15" fill="rgb(208,77,27)" fg:x="102" fg:w="2"/><text x="5.6383%" y="591.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (2 samples, 0.11%)</title><rect x="5.3883%" y="565" width="0.1057%" height="15" fill="rgb(221,76,26)" fg:x="102" fg:w="2"/><text x="5.6383%" y="575.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (1 samples, 0.05%)</title><rect x="5.4411%" y="549" width="0.0528%" height="15" fill="rgb(225,139,18)" fg:x="103" fg:w="1"/><text x="5.6911%" y="559.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_string_fragment (1 samples, 0.05%)</title><rect x="5.4411%" y="533" width="0.0528%" height="15" fill="rgb(230,137,11)" fg:x="103" fg:w="1"/><text x="5.6911%" y="543.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="5.4411%" y="517" width="0.0528%" height="15" fill="rgb(212,28,1)" fg:x="103" fg:w="1"/><text x="5.6911%" y="527.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="5.4411%" y="501" width="0.0528%" height="15" fill="rgb(248,164,17)" fg:x="103" fg:w="1"/><text x="5.6911%" y="511.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="5.4411%" y="485" width="0.0528%" height="15" fill="rgb(222,171,42)" fg:x="103" fg:w="1"/><text x="5.6911%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="5.4411%" y="469" width="0.0528%" height="15" fill="rgb(243,84,45)" fg:x="103" fg:w="1"/><text x="5.6911%" y="479.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="5.4411%" y="453" width="0.0528%" height="15" fill="rgb(252,49,23)" fg:x="103" fg:w="1"/><text x="5.6911%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="5.4411%" y="437" width="0.0528%" height="15" fill="rgb(215,19,7)" fg:x="103" fg:w="1"/><text x="5.6911%" y="447.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_string (17 samples, 0.90%)</title><rect x="4.6487%" y="709" width="0.8980%" height="15" fill="rgb(238,81,41)" fg:x="88" fg:w="17"/><text x="4.8987%" y="719.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_vec (17 samples, 0.90%)</title><rect x="4.6487%" y="693" width="0.8980%" height="15" fill="rgb(210,199,37)" fg:x="88" fg:w="17"/><text x="4.8987%" y="703.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_writer (17 samples, 0.90%)</title><rect x="4.6487%" y="677" width="0.8980%" height="15" fill="rgb(244,192,49)" fg:x="88" fg:w="17"/><text x="4.8987%" y="687.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::Message&gt;::serialize (17 samples, 0.90%)</title><rect x="4.6487%" y="661" width="0.8980%" height="15" fill="rgb(226,211,11)" fg:x="88" fg:w="17"/><text x="4.8987%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 0.85%)</title><rect x="4.7015%" y="645" width="0.8452%" height="15" fill="rgb(236,162,54)" fg:x="89" fg:w="16"/><text x="4.9515%" y="655.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (16 samples, 0.85%)</title><rect x="4.7015%" y="629" width="0.8452%" height="15" fill="rgb(220,229,9)" fg:x="89" fg:w="16"/><text x="4.9515%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::State as core::cmp::PartialEq&gt;::eq (1 samples, 0.05%)</title><rect x="5.4939%" y="613" width="0.0528%" height="15" fill="rgb(250,87,22)" fg:x="104" fg:w="1"/><text x="5.7439%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.05%)</title><rect x="5.5468%" y="677" width="0.0528%" height="15" fill="rgb(239,43,17)" fg:x="105" fg:w="1"/><text x="5.7968%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::fmt::Display&gt;::fmt (5 samples, 0.26%)</title><rect x="5.5996%" y="661" width="0.2641%" height="15" fill="rgb(231,177,25)" fg:x="106" fg:w="5"/><text x="5.8496%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (5 samples, 0.26%)</title><rect x="5.5996%" y="645" width="0.2641%" height="15" fill="rgb(219,179,1)" fg:x="106" fg:w="5"/><text x="5.8496%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`write (5 samples, 0.26%)</title><rect x="5.5996%" y="629" width="0.2641%" height="15" fill="rgb(238,219,53)" fg:x="106" fg:w="5"/><text x="5.8496%" y="639.50"></text></g><g><title>maelstrom-txn`std::io::stdio::_eprint (18 samples, 0.95%)</title><rect x="5.5468%" y="709" width="0.9509%" height="15" fill="rgb(232,167,36)" fg:x="105" fg:w="18"/><text x="5.7968%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (18 samples, 0.95%)</title><rect x="5.5468%" y="693" width="0.9509%" height="15" fill="rgb(244,19,51)" fg:x="105" fg:w="18"/><text x="5.7968%" y="703.50"></text></g><g><title>maelstrom-txn`core::fmt::write (17 samples, 0.90%)</title><rect x="5.5996%" y="677" width="0.8980%" height="15" fill="rgb(224,6,22)" fg:x="106" fg:w="17"/><text x="5.8496%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (12 samples, 0.63%)</title><rect x="5.8637%" y="661" width="0.6339%" height="15" fill="rgb(224,145,5)" fg:x="111" fg:w="12"/><text x="6.1137%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`write (12 samples, 0.63%)</title><rect x="5.8637%" y="645" width="0.6339%" height="15" fill="rgb(234,130,49)" fg:x="111" fg:w="12"/><text x="6.1137%" y="655.50"></text></g><g><title>maelstrom-txn`core::fmt::write (3 samples, 0.16%)</title><rect x="6.4976%" y="677" width="0.1585%" height="15" fill="rgb(254,6,2)" fg:x="123" fg:w="3"/><text x="6.7476%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3 samples, 0.16%)</title><rect x="6.4976%" y="661" width="0.1585%" height="15" fill="rgb(208,96,46)" fg:x="123" fg:w="3"/><text x="6.7476%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (3 samples, 0.16%)</title><rect x="6.4976%" y="645" width="0.1585%" height="15" fill="rgb(239,3,39)" fg:x="123" fg:w="3"/><text x="6.7476%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`write (3 samples, 0.16%)</title><rect x="6.4976%" y="629" width="0.1585%" height="15" fill="rgb(233,210,1)" fg:x="123" fg:w="3"/><text x="6.7476%" y="639.50"></text></g><g><title>maelstrom-txn`maelstrom_node::node::Node::sync_rpc (101 samples, 5.34%)</title><rect x="1.3735%" y="725" width="5.3354%" height="15" fill="rgb(244,137,37)" fg:x="26" fg:w="101"/><text x="1.6235%" y="735.50">maelstr..</text></g><g><title>maelstrom-txn`std::io::stdio::_print (4 samples, 0.21%)</title><rect x="6.4976%" y="709" width="0.2113%" height="15" fill="rgb(240,136,2)" fg:x="123" fg:w="4"/><text x="6.7476%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (4 samples, 0.21%)</title><rect x="6.4976%" y="693" width="0.2113%" height="15" fill="rgb(239,18,37)" fg:x="123" fg:w="4"/><text x="6.7476%" y="703.50"></text></g><g><title>maelstrom-txn`std::io::stdio::Stderr::lock (1 samples, 0.05%)</title><rect x="6.6561%" y="677" width="0.0528%" height="15" fill="rgb(218,185,22)" fg:x="126" fg:w="1"/><text x="6.9061%" y="687.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.05%)</title><rect x="6.7089%" y="677" width="0.0528%" height="15" fill="rgb(225,218,4)" fg:x="127" fg:w="1"/><text x="6.9589%" y="687.50"></text></g><g><title>maelstrom-txn`core::iter::adapters::map::map_fold::_{{closure}} (112 samples, 5.92%)</title><rect x="0.8980%" y="773" width="5.9165%" height="15" fill="rgb(230,182,32)" fg:x="17" fg:w="112"/><text x="1.1480%" y="783.50">maelstro..</text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Transactor::transact::_{{closure}} (107 samples, 5.65%)</title><rect x="1.1622%" y="757" width="5.6524%" height="15" fill="rgb(242,56,43)" fg:x="22" fg:w="107"/><text x="1.4122%" y="767.50">maelstr..</text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Transactor::load_chunk (105 samples, 5.55%)</title><rect x="1.2678%" y="741" width="5.5468%" height="15" fill="rgb(233,99,24)" fg:x="24" fg:w="105"/><text x="1.5178%" y="751.50">maelstr..</text></g><g><title>maelstrom-txn`serde_json::value::from_value (2 samples, 0.11%)</title><rect x="6.7089%" y="725" width="0.1057%" height="15" fill="rgb(234,209,42)" fg:x="127" fg:w="2"/><text x="6.9589%" y="735.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (2 samples, 0.11%)</title><rect x="6.7089%" y="709" width="0.1057%" height="15" fill="rgb(227,7,12)" fg:x="127" fg:w="2"/><text x="6.9589%" y="719.50"></text></g><g><title>maelstrom-txn`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.11%)</title><rect x="6.7089%" y="693" width="0.1057%" height="15" fill="rgb(245,203,43)" fg:x="127" fg:w="2"/><text x="6.9589%" y="703.50"></text></g><g><title>maelstrom-txn`serde_json::value::de::visit_array (1 samples, 0.05%)</title><rect x="6.7618%" y="677" width="0.0528%" height="15" fill="rgb(238,205,33)" fg:x="128" fg:w="1"/><text x="7.0118%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.05%)</title><rect x="6.7618%" y="661" width="0.0528%" height="15" fill="rgb(231,56,7)" fg:x="128" fg:w="1"/><text x="7.0118%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::SeqAccess&gt;::next_element (1 samples, 0.05%)</title><rect x="6.7618%" y="645" width="0.0528%" height="15" fill="rgb(244,186,29)" fg:x="128" fg:w="1"/><text x="7.0118%" y="655.50"></text></g><g><title>maelstrom-txn`serde::de::SeqAccess::next_element (1 samples, 0.05%)</title><rect x="6.7618%" y="629" width="0.0528%" height="15" fill="rgb(234,111,31)" fg:x="128" fg:w="1"/><text x="7.0118%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.05%)</title><rect x="6.7618%" y="613" width="0.0528%" height="15" fill="rgb(241,149,10)" fg:x="128" fg:w="1"/><text x="7.0118%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.05%)</title><rect x="6.7618%" y="597" width="0.0528%" height="15" fill="rgb(249,206,44)" fg:x="128" fg:w="1"/><text x="7.0118%" y="607.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for usize&gt;::deserialize (1 samples, 0.05%)</title><rect x="6.7618%" y="581" width="0.0528%" height="15" fill="rgb(251,153,30)" fg:x="128" fg:w="1"/><text x="7.0118%" y="591.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.05%)</title><rect x="6.7618%" y="565" width="0.0528%" height="15" fill="rgb(239,152,38)" fg:x="128" fg:w="1"/><text x="7.0118%" y="575.50"></text></g><g><title>maelstrom-txn`core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.05%)</title><rect x="6.8146%" y="693" width="0.0528%" height="15" fill="rgb(249,139,47)" fg:x="129" fg:w="1"/><text x="7.0646%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="6.8146%" y="677" width="0.0528%" height="15" fill="rgb(244,64,35)" fg:x="129" fg:w="1"/><text x="7.0646%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`read (4 samples, 0.21%)</title><rect x="6.8674%" y="645" width="0.2113%" height="15" fill="rgb(216,46,15)" fg:x="130" fg:w="4"/><text x="7.1174%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StdinLock as std::io::BufRead&gt;::read_line (5 samples, 0.26%)</title><rect x="6.8674%" y="661" width="0.2641%" height="15" fill="rgb(250,74,19)" fg:x="130" fg:w="5"/><text x="7.1174%" y="671.50"></text></g><g><title>maelstrom-txn`std::io::read_until (1 samples, 0.05%)</title><rect x="7.0787%" y="645" width="0.0528%" height="15" fill="rgb(249,42,33)" fg:x="134" fg:w="1"/><text x="7.3287%" y="655.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.05%)</title><rect x="7.0787%" y="629" width="0.0528%" height="15" fill="rgb(242,149,17)" fg:x="134" fg:w="1"/><text x="7.3287%" y="639.50"></text></g><g><title>maelstrom-txn`__rdl_alloc (1 samples, 0.05%)</title><rect x="7.0787%" y="613" width="0.0528%" height="15" fill="rgb(244,29,21)" fg:x="134" fg:w="1"/><text x="7.3287%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;str as alloc::string::ToString&gt;::to_string (1 samples, 0.05%)</title><rect x="7.1315%" y="661" width="0.0528%" height="15" fill="rgb(220,130,37)" fg:x="135" fg:w="1"/><text x="7.3815%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.05%)</title><rect x="7.1315%" y="645" width="0.0528%" height="15" fill="rgb(211,67,2)" fg:x="135" fg:w="1"/><text x="7.3815%" y="655.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="7.1315%" y="629" width="0.0528%" height="15" fill="rgb(235,68,52)" fg:x="135" fg:w="1"/><text x="7.3815%" y="639.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1 samples, 0.05%)</title><rect x="7.1315%" y="613" width="0.0528%" height="15" fill="rgb(246,142,3)" fg:x="135" fg:w="1"/><text x="7.3815%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="7.1315%" y="597" width="0.0528%" height="15" fill="rgb(241,25,7)" fg:x="135" fg:w="1"/><text x="7.3815%" y="607.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="7.1315%" y="581" width="0.0528%" height="15" fill="rgb(242,119,39)" fg:x="135" fg:w="1"/><text x="7.3815%" y="591.50"></text></g><g><title>maelstrom-txn`alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="7.1315%" y="565" width="0.0528%" height="15" fill="rgb(241,98,45)" fg:x="135" fg:w="1"/><text x="7.3815%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.05%)</title><rect x="7.1315%" y="549" width="0.0528%" height="15" fill="rgb(254,28,30)" fg:x="135" fg:w="1"/><text x="7.3815%" y="559.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.05%)</title><rect x="7.1844%" y="661" width="0.0528%" height="15" fill="rgb(241,142,54)" fg:x="136" fg:w="1"/><text x="7.4344%" y="671.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="7.1844%" y="645" width="0.0528%" height="15" fill="rgb(222,85,15)" fg:x="136" fg:w="1"/><text x="7.4344%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="7.1844%" y="629" width="0.0528%" height="15" fill="rgb(210,85,47)" fg:x="136" fg:w="1"/><text x="7.4344%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="7.2372%" y="645" width="0.0528%" height="15" fill="rgb(224,206,25)" fg:x="137" fg:w="1"/><text x="7.4872%" y="655.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;std::io::stdio::StdinLock&gt; (2 samples, 0.11%)</title><rect x="7.2372%" y="661" width="0.1057%" height="15" fill="rgb(243,201,19)" fg:x="137" fg:w="2"/><text x="7.4872%" y="671.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;std::io::buffered::bufreader::BufReader&lt;std::io::stdio::StdinRaw&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="7.2900%" y="645" width="0.0528%" height="15" fill="rgb(236,59,4)" fg:x="138" fg:w="1"/><text x="7.5400%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="7.2900%" y="629" width="0.0528%" height="15" fill="rgb(254,179,45)" fg:x="138" fg:w="1"/><text x="7.5400%" y="639.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="7.2900%" y="613" width="0.0528%" height="15" fill="rgb(226,14,10)" fg:x="138" fg:w="1"/><text x="7.5400%" y="623.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;&gt; (1 samples, 0.05%)</title><rect x="7.3428%" y="629" width="0.0528%" height="15" fill="rgb(244,27,41)" fg:x="139" fg:w="1"/><text x="7.5928%" y="639.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="7.3428%" y="613" width="0.0528%" height="15" fill="rgb(235,35,32)" fg:x="139" fg:w="1"/><text x="7.5928%" y="623.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="7.3428%" y="597" width="0.0528%" height="15" fill="rgb(218,68,31)" fg:x="139" fg:w="1"/><text x="7.5928%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="7.3428%" y="581" width="0.0528%" height="15" fill="rgb(207,120,37)" fg:x="139" fg:w="1"/><text x="7.5928%" y="591.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1 samples, 0.05%)</title><rect x="7.3428%" y="565" width="0.0528%" height="15" fill="rgb(227,98,0)" fg:x="139" fg:w="1"/><text x="7.5928%" y="575.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1 samples, 0.05%)</title><rect x="7.3428%" y="549" width="0.0528%" height="15" fill="rgb(207,7,3)" fg:x="139" fg:w="1"/><text x="7.5928%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.05%)</title><rect x="7.4485%" y="485" width="0.0528%" height="15" fill="rgb(206,98,19)" fg:x="141" fg:w="1"/><text x="7.6985%" y="495.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::parse_str_bytes (1 samples, 0.05%)</title><rect x="7.4485%" y="469" width="0.0528%" height="15" fill="rgb(217,5,26)" fg:x="141" fg:w="1"/><text x="7.6985%" y="479.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::skip_to_escape (1 samples, 0.05%)</title><rect x="7.4485%" y="453" width="0.0528%" height="15" fill="rgb(235,190,38)" fg:x="141" fg:w="1"/><text x="7.6985%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.05%)</title><rect x="7.4485%" y="437" width="0.0528%" height="15" fill="rgb(247,86,24)" fg:x="141" fg:w="1"/><text x="7.6985%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="7.4485%" y="421" width="0.0528%" height="15" fill="rgb(205,101,16)" fg:x="141" fg:w="1"/><text x="7.6985%" y="431.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_key (2 samples, 0.11%)</title><rect x="7.4485%" y="581" width="0.1057%" height="15" fill="rgb(246,168,33)" fg:x="141" fg:w="2"/><text x="7.6985%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.11%)</title><rect x="7.4485%" y="565" width="0.1057%" height="15" fill="rgb(231,114,1)" fg:x="141" fg:w="2"/><text x="7.6985%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.11%)</title><rect x="7.4485%" y="549" width="0.1057%" height="15" fill="rgb(207,184,53)" fg:x="141" fg:w="2"/><text x="7.6985%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (2 samples, 0.11%)</title><rect x="7.4485%" y="533" width="0.1057%" height="15" fill="rgb(224,95,51)" fg:x="141" fg:w="2"/><text x="7.6985%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (2 samples, 0.11%)</title><rect x="7.4485%" y="517" width="0.1057%" height="15" fill="rgb(212,188,45)" fg:x="141" fg:w="2"/><text x="7.6985%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.11%)</title><rect x="7.4485%" y="501" width="0.1057%" height="15" fill="rgb(223,154,38)" fg:x="141" fg:w="2"/><text x="7.6985%" y="511.50"></text></g><g><title>maelstrom-txn`serde::de::Visitor::visit_borrowed_str (1 samples, 0.05%)</title><rect x="7.5013%" y="485" width="0.0528%" height="15" fill="rgb(251,22,52)" fg:x="142" fg:w="1"/><text x="7.7513%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.05%)</title><rect x="7.5013%" y="469" width="0.0528%" height="15" fill="rgb(229,209,22)" fg:x="142" fg:w="1"/><text x="7.7513%" y="479.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::clear (1 samples, 0.05%)</title><rect x="7.6070%" y="485" width="0.0528%" height="15" fill="rgb(234,138,34)" fg:x="144" fg:w="1"/><text x="7.8570%" y="495.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts_mut::precondition_check (1 samples, 0.05%)</title><rect x="7.6070%" y="469" width="0.0528%" height="15" fill="rgb(212,95,11)" fg:x="144" fg:w="1"/><text x="7.8570%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::ignored_any::IgnoredAny as serde::de::Deserialize&gt;::deserialize (2 samples, 0.11%)</title><rect x="7.6070%" y="533" width="0.1057%" height="15" fill="rgb(240,179,47)" fg:x="144" fg:w="2"/><text x="7.8570%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_ignored_any (2 samples, 0.11%)</title><rect x="7.6070%" y="517" width="0.1057%" height="15" fill="rgb(240,163,11)" fg:x="144" fg:w="2"/><text x="7.8570%" y="527.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::ignore_value (2 samples, 0.11%)</title><rect x="7.6070%" y="501" width="0.1057%" height="15" fill="rgb(236,37,12)" fg:x="144" fg:w="2"/><text x="7.8570%" y="511.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::ignore_integer (1 samples, 0.05%)</title><rect x="7.6598%" y="485" width="0.0528%" height="15" fill="rgb(232,164,16)" fg:x="145" fg:w="1"/><text x="7.9098%" y="495.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::peek_or_null (1 samples, 0.05%)</title><rect x="7.6598%" y="469" width="0.0528%" height="15" fill="rgb(244,205,15)" fg:x="145" fg:w="1"/><text x="7.9098%" y="479.50"></text></g><g><title>maelstrom-txn`core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.05%)</title><rect x="7.6598%" y="453" width="0.0528%" height="15" fill="rgb(223,117,47)" fg:x="145" fg:w="1"/><text x="7.9098%" y="463.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.05%)</title><rect x="7.7126%" y="485" width="0.0528%" height="15" fill="rgb(244,107,35)" fg:x="146" fg:w="1"/><text x="7.9626%" y="495.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.05%)</title><rect x="7.7126%" y="469" width="0.0528%" height="15" fill="rgb(205,140,8)" fg:x="146" fg:w="1"/><text x="7.9626%" y="479.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1 samples, 0.05%)</title><rect x="7.7126%" y="453" width="0.0528%" height="15" fill="rgb(228,84,46)" fg:x="146" fg:w="1"/><text x="7.9626%" y="463.50"></text></g><g><title>maelstrom-txn`core::cmp::max_by (1 samples, 0.05%)</title><rect x="7.7126%" y="437" width="0.0528%" height="15" fill="rgb(254,188,9)" fg:x="146" fg:w="1"/><text x="7.9626%" y="447.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::KvReadOkExtra&gt;::deserialize (1 samples, 0.05%)</title><rect x="7.7655%" y="485" width="0.0528%" height="15" fill="rgb(206,112,54)" fg:x="147" fg:w="1"/><text x="8.0155%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.05%)</title><rect x="7.8183%" y="453" width="0.0528%" height="15" fill="rgb(216,84,49)" fg:x="148" fg:w="1"/><text x="8.0683%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapAccess&lt;E&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.05%)</title><rect x="7.8711%" y="421" width="0.0528%" height="15" fill="rgb(214,194,35)" fg:x="149" fg:w="1"/><text x="8.1211%" y="431.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.05%)</title><rect x="7.9239%" y="421" width="0.0528%" height="15" fill="rgb(249,28,3)" fg:x="150" fg:w="1"/><text x="8.1739%" y="431.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.21%)</title><rect x="7.8183%" y="469" width="0.2113%" height="15" fill="rgb(222,56,52)" fg:x="148" fg:w="4"/><text x="8.0683%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_map (3 samples, 0.16%)</title><rect x="7.8711%" y="453" width="0.1585%" height="15" fill="rgb(245,217,50)" fg:x="149" fg:w="3"/><text x="8.1211%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::TaggedContentVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_map (3 samples, 0.16%)</title><rect x="7.8711%" y="437" width="0.1585%" height="15" fill="rgb(213,201,24)" fg:x="149" fg:w="3"/><text x="8.1211%" y="447.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (1 samples, 0.05%)</title><rect x="7.9768%" y="421" width="0.0528%" height="15" fill="rgb(248,116,28)" fg:x="151" fg:w="1"/><text x="8.2268%" y="431.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapAccess&lt;E&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.05%)</title><rect x="7.9768%" y="405" width="0.0528%" height="15" fill="rgb(219,72,43)" fg:x="151" fg:w="1"/><text x="8.2268%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.05%)</title><rect x="7.9768%" y="389" width="0.0528%" height="15" fill="rgb(209,138,14)" fg:x="151" fg:w="1"/><text x="8.2268%" y="399.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (1 samples, 0.05%)</title><rect x="7.9768%" y="373" width="0.0528%" height="15" fill="rgb(222,18,33)" fg:x="151" fg:w="1"/><text x="8.2268%" y="383.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::__deserialize_content (1 samples, 0.05%)</title><rect x="7.9768%" y="357" width="0.0528%" height="15" fill="rgb(213,199,7)" fg:x="151" fg:w="1"/><text x="8.2268%" y="367.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="7.9768%" y="341" width="0.0528%" height="15" fill="rgb(250,110,10)" fg:x="151" fg:w="1"/><text x="8.2268%" y="351.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="7.9768%" y="325" width="0.0528%" height="15" fill="rgb(248,123,6)" fg:x="151" fg:w="1"/><text x="8.2268%" y="335.50"></text></g><g><title>maelstrom-txn`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.05%)</title><rect x="7.9768%" y="309" width="0.0528%" height="15" fill="rgb(206,91,31)" fg:x="151" fg:w="1"/><text x="8.2268%" y="319.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="7.9768%" y="293" width="0.0528%" height="15" fill="rgb(211,154,13)" fg:x="151" fg:w="1"/><text x="8.2268%" y="303.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::MapAccess&gt;::next_key (1 samples, 0.05%)</title><rect x="8.0296%" y="405" width="0.0528%" height="15" fill="rgb(225,148,7)" fg:x="152" fg:w="1"/><text x="8.2796%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.05%)</title><rect x="8.0296%" y="389" width="0.0528%" height="15" fill="rgb(220,160,43)" fg:x="152" fg:w="1"/><text x="8.2796%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="8.0824%" y="229" width="0.0528%" height="15" fill="rgb(213,52,39)" fg:x="153" fg:w="1"/><text x="8.3324%" y="239.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.05%)</title><rect x="8.1352%" y="213" width="0.0528%" height="15" fill="rgb(243,137,7)" fg:x="154" fg:w="1"/><text x="8.3852%" y="223.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.05%)</title><rect x="8.1352%" y="197" width="0.0528%" height="15" fill="rgb(230,79,13)" fg:x="154" fg:w="1"/><text x="8.3852%" y="207.50"></text></g><g><title>maelstrom-txn`serde::de::Visitor::visit_borrowed_str (1 samples, 0.05%)</title><rect x="8.1352%" y="181" width="0.0528%" height="15" fill="rgb(247,105,23)" fg:x="154" fg:w="1"/><text x="8.3852%" y="191.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.05%)</title><rect x="8.1352%" y="165" width="0.0528%" height="15" fill="rgb(223,179,41)" fg:x="154" fg:w="1"/><text x="8.3852%" y="175.50"></text></g><g><title>maelstrom-txn`alloc::str::_&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.05%)</title><rect x="8.1352%" y="149" width="0.0528%" height="15" fill="rgb(218,9,34)" fg:x="154" fg:w="1"/><text x="8.3852%" y="159.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.11%)</title><rect x="8.1352%" y="229" width="0.1057%" height="15" fill="rgb(222,106,8)" fg:x="154" fg:w="2"/><text x="8.3852%" y="239.50"></text></g><g><title>maelstrom-txn`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.05%)</title><rect x="8.1881%" y="213" width="0.0528%" height="15" fill="rgb(211,220,0)" fg:x="155" fg:w="1"/><text x="8.4381%" y="223.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.05%)</title><rect x="8.1881%" y="197" width="0.0528%" height="15" fill="rgb(229,52,16)" fg:x="155" fg:w="1"/><text x="8.4381%" y="207.50"></text></g><g><title>maelstrom-txn`serde::de::Visitor::visit_borrowed_str (1 samples, 0.05%)</title><rect x="8.1881%" y="181" width="0.0528%" height="15" fill="rgb(212,155,18)" fg:x="155" fg:w="1"/><text x="8.4381%" y="191.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.05%)</title><rect x="8.1881%" y="165" width="0.0528%" height="15" fill="rgb(242,21,14)" fg:x="155" fg:w="1"/><text x="8.4381%" y="175.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.05%)</title><rect x="8.1881%" y="149" width="0.0528%" height="15" fill="rgb(222,19,48)" fg:x="155" fg:w="1"/><text x="8.4381%" y="159.50"></text></g><g><title>maelstrom-txn`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.05%)</title><rect x="8.1881%" y="133" width="0.0528%" height="15" fill="rgb(232,45,27)" fg:x="155" fg:w="1"/><text x="8.4381%" y="143.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="8.1881%" y="117" width="0.0528%" height="15" fill="rgb(249,103,42)" fg:x="155" fg:w="1"/><text x="8.4381%" y="127.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1 samples, 0.05%)</title><rect x="8.1881%" y="101" width="0.0528%" height="15" fill="rgb(246,81,33)" fg:x="155" fg:w="1"/><text x="8.4381%" y="111.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="8.1881%" y="85" width="0.0528%" height="15" fill="rgb(252,33,42)" fg:x="155" fg:w="1"/><text x="8.4381%" y="95.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="8.1881%" y="69" width="0.0528%" height="15" fill="rgb(209,212,41)" fg:x="155" fg:w="1"/><text x="8.4381%" y="79.50"></text></g><g><title>maelstrom-txn`alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="8.1881%" y="53" width="0.0528%" height="15" fill="rgb(207,154,6)" fg:x="155" fg:w="1"/><text x="8.4381%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.05%)</title><rect x="8.1881%" y="37" width="0.0528%" height="15" fill="rgb(223,64,47)" fg:x="155" fg:w="1"/><text x="8.4381%" y="47.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.05%)</title><rect x="8.2409%" y="229" width="0.0528%" height="15" fill="rgb(211,161,38)" fg:x="156" fg:w="1"/><text x="8.4909%" y="239.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::MapAccess&gt;::next_entry (5 samples, 0.26%)</title><rect x="8.0824%" y="277" width="0.2641%" height="15" fill="rgb(219,138,40)" fg:x="153" fg:w="5"/><text x="8.3324%" y="287.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_entry (5 samples, 0.26%)</title><rect x="8.0824%" y="261" width="0.2641%" height="15" fill="rgb(241,228,46)" fg:x="153" fg:w="5"/><text x="8.3324%" y="271.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (5 samples, 0.26%)</title><rect x="8.0824%" y="245" width="0.2641%" height="15" fill="rgb(223,209,38)" fg:x="153" fg:w="5"/><text x="8.3324%" y="255.50"></text></g><g><title>maelstrom-txn`serde::de::value::MapDeserializer&lt;I,E&gt;::next_pair (1 samples, 0.05%)</title><rect x="8.2937%" y="229" width="0.0528%" height="15" fill="rgb(236,164,45)" fg:x="157" fg:w="1"/><text x="8.5437%" y="239.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.05%)</title><rect x="8.3465%" y="277" width="0.0528%" height="15" fill="rgb(231,15,5)" fg:x="158" fg:w="1"/><text x="8.5965%" y="287.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.05%)</title><rect x="8.3465%" y="261" width="0.0528%" height="15" fill="rgb(252,35,15)" fg:x="158" fg:w="1"/><text x="8.5965%" y="271.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.05%)</title><rect x="8.3465%" y="245" width="0.0528%" height="15" fill="rgb(248,181,18)" fg:x="158" fg:w="1"/><text x="8.5965%" y="255.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.05%)</title><rect x="8.3465%" y="229" width="0.0528%" height="15" fill="rgb(233,39,42)" fg:x="158" fg:w="1"/><text x="8.5965%" y="239.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.05%)</title><rect x="8.3465%" y="213" width="0.0528%" height="15" fill="rgb(238,110,33)" fg:x="158" fg:w="1"/><text x="8.5965%" y="223.50"></text></g><g><title>maelstrom-txn`serde::de::Visitor::visit_borrowed_str (1 samples, 0.05%)</title><rect x="8.3465%" y="197" width="0.0528%" height="15" fill="rgb(233,195,10)" fg:x="158" fg:w="1"/><text x="8.5965%" y="207.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::de::KeyClassifier as serde::de::Visitor&gt;::visit_str (1 samples, 0.05%)</title><rect x="8.3465%" y="181" width="0.0528%" height="15" fill="rgb(254,105,3)" fg:x="158" fg:w="1"/><text x="8.5965%" y="191.50"></text></g><g><title>maelstrom-txn`alloc::str::_&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.05%)</title><rect x="8.3465%" y="165" width="0.0528%" height="15" fill="rgb(221,225,9)" fg:x="158" fg:w="1"/><text x="8.5965%" y="175.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="8.3465%" y="149" width="0.0528%" height="15" fill="rgb(224,227,45)" fg:x="158" fg:w="1"/><text x="8.5965%" y="159.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (2 samples, 0.11%)</title><rect x="8.3994%" y="245" width="0.1057%" height="15" fill="rgb(229,198,43)" fg:x="159" fg:w="2"/><text x="8.6494%" y="255.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2 samples, 0.11%)</title><rect x="8.3994%" y="229" width="0.1057%" height="15" fill="rgb(206,209,35)" fg:x="159" fg:w="2"/><text x="8.6494%" y="239.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2 samples, 0.11%)</title><rect x="8.3994%" y="213" width="0.1057%" height="15" fill="rgb(245,195,53)" fg:x="159" fg:w="2"/><text x="8.6494%" y="223.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (1 samples, 0.05%)</title><rect x="8.4522%" y="197" width="0.0528%" height="15" fill="rgb(240,92,26)" fg:x="160" fg:w="1"/><text x="8.7022%" y="207.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (1 samples, 0.05%)</title><rect x="8.4522%" y="181" width="0.0528%" height="15" fill="rgb(207,40,23)" fg:x="160" fg:w="1"/><text x="8.7022%" y="191.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.05%)</title><rect x="8.4522%" y="165" width="0.0528%" height="15" fill="rgb(223,111,35)" fg:x="160" fg:w="1"/><text x="8.7022%" y="175.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (3 samples, 0.16%)</title><rect x="8.6107%" y="197" width="0.1585%" height="15" fill="rgb(229,147,28)" fg:x="163" fg:w="3"/><text x="8.8607%" y="207.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 0.74%)</title><rect x="8.0824%" y="293" width="0.7396%" height="15" fill="rgb(211,29,28)" fg:x="153" fg:w="14"/><text x="8.3324%" y="303.50"></text></g><g><title>maelstrom-txn`serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (8 samples, 0.42%)</title><rect x="8.3994%" y="277" width="0.4226%" height="15" fill="rgb(228,72,33)" fg:x="159" fg:w="8"/><text x="8.6494%" y="287.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (8 samples, 0.42%)</title><rect x="8.3994%" y="261" width="0.4226%" height="15" fill="rgb(205,214,31)" fg:x="159" fg:w="8"/><text x="8.6494%" y="271.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (6 samples, 0.32%)</title><rect x="8.5050%" y="245" width="0.3170%" height="15" fill="rgb(224,111,15)" fg:x="161" fg:w="6"/><text x="8.7550%" y="255.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (5 samples, 0.26%)</title><rect x="8.5578%" y="229" width="0.2641%" height="15" fill="rgb(253,21,26)" fg:x="162" fg:w="5"/><text x="8.8078%" y="239.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (5 samples, 0.26%)</title><rect x="8.5578%" y="213" width="0.2641%" height="15" fill="rgb(245,139,43)" fg:x="162" fg:w="5"/><text x="8.8078%" y="223.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::from_new_leaf (1 samples, 0.05%)</title><rect x="8.7691%" y="197" width="0.0528%" height="15" fill="rgb(252,170,7)" fg:x="166" fg:w="1"/><text x="9.0191%" y="207.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="8.8220%" y="133" width="0.0528%" height="15" fill="rgb(231,118,14)" fg:x="167" fg:w="1"/><text x="9.0720%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.05%)</title><rect x="8.8220%" y="117" width="0.0528%" height="15" fill="rgb(238,83,0)" fg:x="167" fg:w="1"/><text x="9.0720%" y="127.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageExtra&gt;::deserialize (21 samples, 1.11%)</title><rect x="7.8183%" y="485" width="1.1094%" height="15" fill="rgb(221,39,39)" fg:x="148" fg:w="21"/><text x="8.0683%" y="495.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::KvReadOkExtra&gt;::deserialize (17 samples, 0.90%)</title><rect x="8.0296%" y="469" width="0.8980%" height="15" fill="rgb(222,119,46)" fg:x="152" fg:w="17"/><text x="8.2796%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (17 samples, 0.90%)</title><rect x="8.0296%" y="453" width="0.8980%" height="15" fill="rgb(222,165,49)" fg:x="152" fg:w="17"/><text x="8.2796%" y="463.50"></text></g><g><title>maelstrom-txn`serde::__private::de::content::visit_content_map (17 samples, 0.90%)</title><rect x="8.0296%" y="437" width="0.8980%" height="15" fill="rgb(219,113,52)" fg:x="152" fg:w="17"/><text x="8.2796%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::KvReadOkExtra&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (17 samples, 0.90%)</title><rect x="8.0296%" y="421" width="0.8980%" height="15" fill="rgb(214,7,15)" fg:x="152" fg:w="17"/><text x="8.2796%" y="431.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::MapAccess&gt;::next_value (16 samples, 0.85%)</title><rect x="8.0824%" y="405" width="0.8452%" height="15" fill="rgb(235,32,4)" fg:x="153" fg:w="16"/><text x="8.3324%" y="415.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (16 samples, 0.85%)</title><rect x="8.0824%" y="389" width="0.8452%" height="15" fill="rgb(238,90,54)" fg:x="153" fg:w="16"/><text x="8.3324%" y="399.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_value_seed (16 samples, 0.85%)</title><rect x="8.0824%" y="373" width="0.8452%" height="15" fill="rgb(213,208,19)" fg:x="153" fg:w="16"/><text x="8.3324%" y="383.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (16 samples, 0.85%)</title><rect x="8.0824%" y="357" width="0.8452%" height="15" fill="rgb(233,156,4)" fg:x="153" fg:w="16"/><text x="8.3324%" y="367.50"></text></g><g><title>maelstrom-txn`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (16 samples, 0.85%)</title><rect x="8.0824%" y="341" width="0.8452%" height="15" fill="rgb(207,194,5)" fg:x="153" fg:w="16"/><text x="8.3324%" y="351.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 0.85%)</title><rect x="8.0824%" y="325" width="0.8452%" height="15" fill="rgb(206,111,30)" fg:x="153" fg:w="16"/><text x="8.3324%" y="335.50"></text></g><g><title>maelstrom-txn`serde::__private::de::content::visit_content_map (16 samples, 0.85%)</title><rect x="8.0824%" y="309" width="0.8452%" height="15" fill="rgb(243,70,54)" fg:x="153" fg:w="16"/><text x="8.3324%" y="319.50"></text></g><g><title>maelstrom-txn`serde::de::value::MapDeserializer&lt;I,E&gt;::end (2 samples, 0.11%)</title><rect x="8.8220%" y="293" width="0.1057%" height="15" fill="rgb(242,28,8)" fg:x="167" fg:w="2"/><text x="9.0720%" y="303.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::count (2 samples, 0.11%)</title><rect x="8.8220%" y="277" width="0.1057%" height="15" fill="rgb(219,106,18)" fg:x="167" fg:w="2"/><text x="9.0720%" y="287.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::count (2 samples, 0.11%)</title><rect x="8.8220%" y="261" width="0.1057%" height="15" fill="rgb(244,222,10)" fg:x="167" fg:w="2"/><text x="9.0720%" y="271.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt;&gt; (2 samples, 0.11%)</title><rect x="8.8220%" y="245" width="0.1057%" height="15" fill="rgb(236,179,52)" fg:x="167" fg:w="2"/><text x="9.0720%" y="255.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="8.8220%" y="229" width="0.1057%" height="15" fill="rgb(213,23,39)" fg:x="167" fg:w="2"/><text x="9.0720%" y="239.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content),alloc::alloc::Global&gt;&gt; (2 samples, 0.11%)</title><rect x="8.8220%" y="213" width="0.1057%" height="15" fill="rgb(238,48,10)" fg:x="167" fg:w="2"/><text x="9.0720%" y="223.50"></text></g><g><title>maelstrom-txn`&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="8.8220%" y="197" width="0.1057%" height="15" fill="rgb(251,196,23)" fg:x="167" fg:w="2"/><text x="9.0720%" y="207.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt;&gt; (2 samples, 0.11%)</title><rect x="8.8220%" y="181" width="0.1057%" height="15" fill="rgb(250,152,24)" fg:x="167" fg:w="2"/><text x="9.0720%" y="191.50"></text></g><g><title>maelstrom-txn`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="8.8220%" y="165" width="0.1057%" height="15" fill="rgb(209,150,17)" fg:x="167" fg:w="2"/><text x="9.0720%" y="175.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2 samples, 0.11%)</title><rect x="8.8220%" y="149" width="0.1057%" height="15" fill="rgb(234,202,34)" fg:x="167" fg:w="2"/><text x="9.0720%" y="159.50"></text></g><g><title>maelstrom-txn`DYLD-STUB$$free (1 samples, 0.05%)</title><rect x="8.8748%" y="133" width="0.0528%" height="15" fill="rgb(253,148,53)" fg:x="168" fg:w="1"/><text x="9.1248%" y="143.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (1 samples, 0.05%)</title><rect x="8.9276%" y="437" width="0.0528%" height="15" fill="rgb(218,129,16)" fg:x="169" fg:w="1"/><text x="9.1776%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.05%)</title><rect x="9.0861%" y="245" width="0.0528%" height="15" fill="rgb(216,85,19)" fg:x="172" fg:w="1"/><text x="9.3361%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.05%)</title><rect x="9.1389%" y="245" width="0.0528%" height="15" fill="rgb(235,228,7)" fg:x="173" fg:w="1"/><text x="9.3889%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="9.1389%" y="229" width="0.0528%" height="15" fill="rgb(245,175,0)" fg:x="173" fg:w="1"/><text x="9.3889%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="9.1389%" y="213" width="0.0528%" height="15" fill="rgb(208,168,36)" fg:x="173" fg:w="1"/><text x="9.3889%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.05%)</title><rect x="9.1389%" y="197" width="0.0528%" height="15" fill="rgb(246,171,24)" fg:x="173" fg:w="1"/><text x="9.3889%" y="207.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.21%)</title><rect x="9.0333%" y="373" width="0.2113%" height="15" fill="rgb(215,142,24)" fg:x="171" fg:w="4"/><text x="9.2833%" y="383.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.21%)</title><rect x="9.0333%" y="357" width="0.2113%" height="15" fill="rgb(250,187,7)" fg:x="171" fg:w="4"/><text x="9.2833%" y="367.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3 samples, 0.16%)</title><rect x="9.0861%" y="341" width="0.1585%" height="15" fill="rgb(228,66,33)" fg:x="172" fg:w="3"/><text x="9.3361%" y="351.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::finish_grow (3 samples, 0.16%)</title><rect x="9.0861%" y="325" width="0.1585%" height="15" fill="rgb(234,215,21)" fg:x="172" fg:w="3"/><text x="9.3361%" y="335.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.16%)</title><rect x="9.0861%" y="309" width="0.1585%" height="15" fill="rgb(222,191,20)" fg:x="172" fg:w="3"/><text x="9.3361%" y="319.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::grow_impl (3 samples, 0.16%)</title><rect x="9.0861%" y="293" width="0.1585%" height="15" fill="rgb(245,79,54)" fg:x="172" fg:w="3"/><text x="9.3361%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (3 samples, 0.16%)</title><rect x="9.0861%" y="277" width="0.1585%" height="15" fill="rgb(240,10,37)" fg:x="172" fg:w="3"/><text x="9.3361%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (3 samples, 0.16%)</title><rect x="9.0861%" y="261" width="0.1585%" height="15" fill="rgb(214,192,32)" fg:x="172" fg:w="3"/><text x="9.3361%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.05%)</title><rect x="9.1918%" y="245" width="0.0528%" height="15" fill="rgb(209,36,54)" fg:x="174" fg:w="1"/><text x="9.4418%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="9.1918%" y="229" width="0.0528%" height="15" fill="rgb(220,10,11)" fg:x="174" fg:w="1"/><text x="9.4418%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.05%)</title><rect x="9.1918%" y="213" width="0.0528%" height="15" fill="rgb(221,106,17)" fg:x="174" fg:w="1"/><text x="9.4418%" y="223.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.05%)</title><rect x="9.2446%" y="357" width="0.0528%" height="15" fill="rgb(251,142,44)" fg:x="175" fg:w="1"/><text x="9.4946%" y="367.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str::_{{closure}} (1 samples, 0.05%)</title><rect x="9.3502%" y="229" width="0.0528%" height="15" fill="rgb(238,13,15)" fg:x="177" fg:w="1"/><text x="9.6002%" y="239.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.26%)</title><rect x="9.2974%" y="341" width="0.2641%" height="15" fill="rgb(208,107,27)" fg:x="176" fg:w="5"/><text x="9.5474%" y="351.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 0.26%)</title><rect x="9.2974%" y="325" width="0.2641%" height="15" fill="rgb(205,136,37)" fg:x="176" fg:w="5"/><text x="9.5474%" y="335.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (5 samples, 0.26%)</title><rect x="9.2974%" y="309" width="0.2641%" height="15" fill="rgb(250,205,27)" fg:x="176" fg:w="5"/><text x="9.5474%" y="319.50"></text></g><g><title>maelstrom-txn`serde::de::Deserializer::__deserialize_content (5 samples, 0.26%)</title><rect x="9.2974%" y="293" width="0.2641%" height="15" fill="rgb(210,80,43)" fg:x="176" fg:w="5"/><text x="9.5474%" y="303.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.26%)</title><rect x="9.2974%" y="277" width="0.2641%" height="15" fill="rgb(247,160,36)" fg:x="176" fg:w="5"/><text x="9.5474%" y="287.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (5 samples, 0.26%)</title><rect x="9.2974%" y="261" width="0.2641%" height="15" fill="rgb(234,13,49)" fg:x="176" fg:w="5"/><text x="9.5474%" y="271.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::parse_str_bytes (5 samples, 0.26%)</title><rect x="9.2974%" y="245" width="0.2641%" height="15" fill="rgb(234,122,0)" fg:x="176" fg:w="5"/><text x="9.5474%" y="255.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::skip_to_escape (3 samples, 0.16%)</title><rect x="9.4031%" y="229" width="0.1585%" height="15" fill="rgb(207,146,38)" fg:x="178" fg:w="3"/><text x="9.6531%" y="239.50"></text></g><g><title>maelstrom-txn`core::slice::_&lt;impl [T]&gt;::chunks_exact (3 samples, 0.16%)</title><rect x="9.4031%" y="213" width="0.1585%" height="15" fill="rgb(207,177,25)" fg:x="178" fg:w="3"/><text x="9.6531%" y="223.50"></text></g><g><title>maelstrom-txn`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (2 samples, 0.11%)</title><rect x="9.4559%" y="197" width="0.1057%" height="15" fill="rgb(211,178,42)" fg:x="179" fg:w="2"/><text x="9.7059%" y="207.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (2 samples, 0.11%)</title><rect x="9.4559%" y="181" width="0.1057%" height="15" fill="rgb(230,69,54)" fg:x="179" fg:w="2"/><text x="9.7059%" y="191.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.11%)</title><rect x="9.5615%" y="325" width="0.1057%" height="15" fill="rgb(214,135,41)" fg:x="181" fg:w="2"/><text x="9.8115%" y="335.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (2 samples, 0.11%)</title><rect x="9.5615%" y="309" width="0.1057%" height="15" fill="rgb(237,67,25)" fg:x="181" fg:w="2"/><text x="9.8115%" y="319.50"></text></g><g><title>maelstrom-txn`serde::de::Deserializer::__deserialize_content (2 samples, 0.11%)</title><rect x="9.5615%" y="293" width="0.1057%" height="15" fill="rgb(222,189,50)" fg:x="181" fg:w="2"/><text x="9.8115%" y="303.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.11%)</title><rect x="9.5615%" y="277" width="0.1057%" height="15" fill="rgb(245,148,34)" fg:x="181" fg:w="2"/><text x="9.8115%" y="287.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.11%)</title><rect x="9.5615%" y="261" width="0.1057%" height="15" fill="rgb(222,29,6)" fg:x="181" fg:w="2"/><text x="9.8115%" y="271.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::parse_str_bytes (2 samples, 0.11%)</title><rect x="9.5615%" y="245" width="0.1057%" height="15" fill="rgb(221,189,43)" fg:x="181" fg:w="2"/><text x="9.8115%" y="255.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::skip_to_escape (2 samples, 0.11%)</title><rect x="9.5615%" y="229" width="0.1057%" height="15" fill="rgb(207,36,27)" fg:x="181" fg:w="2"/><text x="9.8115%" y="239.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (38 samples, 2.01%)</title><rect x="7.7126%" y="501" width="2.0074%" height="15" fill="rgb(217,90,24)" fg:x="146" fg:w="38"/><text x="7.9626%" y="511.50">m..</text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (15 samples, 0.79%)</title><rect x="8.9276%" y="485" width="0.7924%" height="15" fill="rgb(224,66,35)" fg:x="169" fg:w="15"/><text x="9.1776%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (15 samples, 0.79%)</title><rect x="8.9276%" y="469" width="0.7924%" height="15" fill="rgb(221,13,50)" fg:x="169" fg:w="15"/><text x="9.1776%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15 samples, 0.79%)</title><rect x="8.9276%" y="453" width="0.7924%" height="15" fill="rgb(236,68,49)" fg:x="169" fg:w="15"/><text x="9.1776%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (14 samples, 0.74%)</title><rect x="8.9805%" y="437" width="0.7396%" height="15" fill="rgb(229,146,28)" fg:x="170" fg:w="14"/><text x="9.2305%" y="447.50"></text></g><g><title>maelstrom-txn`serde::de::Deserializer::__deserialize_content (14 samples, 0.74%)</title><rect x="8.9805%" y="421" width="0.7396%" height="15" fill="rgb(225,31,38)" fg:x="170" fg:w="14"/><text x="9.2305%" y="431.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 0.74%)</title><rect x="8.9805%" y="405" width="0.7396%" height="15" fill="rgb(250,208,3)" fg:x="170" fg:w="14"/><text x="9.2305%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 0.74%)</title><rect x="8.9805%" y="389" width="0.7396%" height="15" fill="rgb(246,54,23)" fg:x="170" fg:w="14"/><text x="9.2305%" y="399.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_entry (9 samples, 0.48%)</title><rect x="9.2446%" y="373" width="0.4754%" height="15" fill="rgb(243,76,11)" fg:x="175" fg:w="9"/><text x="9.4946%" y="383.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_entry_seed (8 samples, 0.42%)</title><rect x="9.2974%" y="357" width="0.4226%" height="15" fill="rgb(245,21,50)" fg:x="176" fg:w="8"/><text x="9.5474%" y="367.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.16%)</title><rect x="9.5615%" y="341" width="0.1585%" height="15" fill="rgb(228,9,43)" fg:x="181" fg:w="3"/><text x="9.8115%" y="351.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (1 samples, 0.05%)</title><rect x="9.6672%" y="325" width="0.0528%" height="15" fill="rgb(208,100,47)" fg:x="183" fg:w="1"/><text x="9.9172%" y="335.50"></text></g><g><title>maelstrom-txn`serde_json::de::from_str (46 samples, 2.43%)</title><rect x="7.3428%" y="661" width="2.4300%" height="15" fill="rgb(232,26,8)" fg:x="139" fg:w="46"/><text x="7.5928%" y="671.50">ma..</text></g><g><title>maelstrom-txn`serde_json::de::from_trait (46 samples, 2.43%)</title><rect x="7.3428%" y="645" width="2.4300%" height="15" fill="rgb(216,166,38)" fg:x="139" fg:w="46"/><text x="7.5928%" y="655.50">ma..</text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize (45 samples, 2.38%)</title><rect x="7.3957%" y="629" width="2.3772%" height="15" fill="rgb(251,202,51)" fg:x="140" fg:w="45"/><text x="7.6457%" y="639.50">ma..</text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (45 samples, 2.38%)</title><rect x="7.3957%" y="613" width="2.3772%" height="15" fill="rgb(254,216,34)" fg:x="140" fg:w="45"/><text x="7.6457%" y="623.50">ma..</text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (45 samples, 2.38%)</title><rect x="7.3957%" y="597" width="2.3772%" height="15" fill="rgb(251,32,27)" fg:x="140" fg:w="45"/><text x="7.6457%" y="607.50">ma..</text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (42 samples, 2.22%)</title><rect x="7.5541%" y="581" width="2.2187%" height="15" fill="rgb(208,127,28)" fg:x="143" fg:w="42"/><text x="7.8041%" y="591.50">m..</text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (42 samples, 2.22%)</title><rect x="7.5541%" y="565" width="2.2187%" height="15" fill="rgb(224,137,22)" fg:x="143" fg:w="42"/><text x="7.8041%" y="575.50">m..</text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (42 samples, 2.22%)</title><rect x="7.5541%" y="549" width="2.2187%" height="15" fill="rgb(254,70,32)" fg:x="143" fg:w="42"/><text x="7.8041%" y="559.50">m..</text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize (39 samples, 2.06%)</title><rect x="7.7126%" y="533" width="2.0602%" height="15" fill="rgb(229,75,37)" fg:x="146" fg:w="39"/><text x="7.9626%" y="543.50">m..</text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (39 samples, 2.06%)</title><rect x="7.7126%" y="517" width="2.0602%" height="15" fill="rgb(252,64,23)" fg:x="146" fg:w="39"/><text x="7.9626%" y="527.50">m..</text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::end_map (1 samples, 0.05%)</title><rect x="9.7200%" y="501" width="0.0528%" height="15" fill="rgb(232,162,48)" fg:x="184" fg:w="1"/><text x="9.9700%" y="511.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1 samples, 0.05%)</title><rect x="9.7200%" y="485" width="0.0528%" height="15" fill="rgb(246,160,12)" fg:x="184" fg:w="1"/><text x="9.9700%" y="495.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::peek (1 samples, 0.05%)</title><rect x="9.7200%" y="469" width="0.0528%" height="15" fill="rgb(247,166,0)" fg:x="184" fg:w="1"/><text x="9.9700%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1 samples, 0.05%)</title><rect x="9.7200%" y="453" width="0.0528%" height="15" fill="rgb(249,219,21)" fg:x="184" fg:w="1"/><text x="9.9700%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.05%)</title><rect x="9.7200%" y="437" width="0.0528%" height="15" fill="rgb(205,209,3)" fg:x="184" fg:w="1"/><text x="9.9700%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="9.7728%" y="485" width="0.0528%" height="15" fill="rgb(243,44,1)" fg:x="185" fg:w="1"/><text x="10.0228%" y="495.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_string (1 samples, 0.05%)</title><rect x="9.8257%" y="485" width="0.0528%" height="15" fill="rgb(206,159,16)" fg:x="186" fg:w="1"/><text x="10.0757%" y="495.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="9.8257%" y="469" width="0.0528%" height="15" fill="rgb(244,77,30)" fg:x="186" fg:w="1"/><text x="10.0757%" y="479.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="9.8257%" y="453" width="0.0528%" height="15" fill="rgb(218,69,12)" fg:x="186" fg:w="1"/><text x="10.0757%" y="463.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="9.8257%" y="437" width="0.0528%" height="15" fill="rgb(212,87,7)" fg:x="186" fg:w="1"/><text x="10.0757%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="9.8257%" y="421" width="0.0528%" height="15" fill="rgb(245,114,25)" fg:x="186" fg:w="1"/><text x="10.0757%" y="431.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.05%)</title><rect x="9.8257%" y="405" width="0.0528%" height="15" fill="rgb(210,61,42)" fg:x="186" fg:w="1"/><text x="10.0757%" y="415.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::end_string (1 samples, 0.05%)</title><rect x="9.8785%" y="485" width="0.0528%" height="15" fill="rgb(211,52,33)" fg:x="187" fg:w="1"/><text x="10.1285%" y="495.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="9.8785%" y="469" width="0.0528%" height="15" fill="rgb(234,58,33)" fg:x="187" fg:w="1"/><text x="10.1285%" y="479.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="9.8785%" y="453" width="0.0528%" height="15" fill="rgb(220,115,36)" fg:x="187" fg:w="1"/><text x="10.1285%" y="463.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="9.8785%" y="437" width="0.0528%" height="15" fill="rgb(243,153,54)" fg:x="187" fg:w="1"/><text x="10.1285%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="9.8785%" y="421" width="0.0528%" height="15" fill="rgb(251,47,18)" fg:x="187" fg:w="1"/><text x="10.1285%" y="431.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="9.8785%" y="405" width="0.0528%" height="15" fill="rgb(242,102,42)" fg:x="187" fg:w="1"/><text x="10.1285%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="9.8785%" y="389" width="0.0528%" height="15" fill="rgb(234,31,38)" fg:x="187" fg:w="1"/><text x="10.1285%" y="399.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (4 samples, 0.21%)</title><rect x="9.7728%" y="565" width="0.2113%" height="15" fill="rgb(221,117,51)" fg:x="185" fg:w="4"/><text x="10.0228%" y="575.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (4 samples, 0.21%)</title><rect x="9.7728%" y="549" width="0.2113%" height="15" fill="rgb(212,20,18)" fg:x="185" fg:w="4"/><text x="10.0228%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (4 samples, 0.21%)</title><rect x="9.7728%" y="533" width="0.2113%" height="15" fill="rgb(245,133,36)" fg:x="185" fg:w="4"/><text x="10.0228%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (4 samples, 0.21%)</title><rect x="9.7728%" y="517" width="0.2113%" height="15" fill="rgb(212,6,19)" fg:x="185" fg:w="4"/><text x="10.0228%" y="527.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (4 samples, 0.21%)</title><rect x="9.7728%" y="501" width="0.2113%" height="15" fill="rgb(218,1,36)" fg:x="185" fg:w="4"/><text x="10.0228%" y="511.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (1 samples, 0.05%)</title><rect x="9.9313%" y="485" width="0.0528%" height="15" fill="rgb(246,84,54)" fg:x="188" fg:w="1"/><text x="10.1813%" y="495.50"></text></g><g><title>maelstrom-txn`core::str::traits::_&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.05%)</title><rect x="9.9313%" y="469" width="0.0528%" height="15" fill="rgb(242,110,6)" fg:x="188" fg:w="1"/><text x="10.1813%" y="479.50"></text></g><g><title>maelstrom-txn`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (1 samples, 0.05%)</title><rect x="9.9313%" y="453" width="0.0528%" height="15" fill="rgb(214,47,5)" fg:x="188" fg:w="1"/><text x="10.1813%" y="463.50"></text></g><g><title>maelstrom-txn`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (1 samples, 0.05%)</title><rect x="9.9313%" y="437" width="0.0528%" height="15" fill="rgb(218,159,25)" fg:x="188" fg:w="1"/><text x="10.1813%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::end (1 samples, 0.05%)</title><rect x="9.9842%" y="533" width="0.0528%" height="15" fill="rgb(215,211,28)" fg:x="189" fg:w="1"/><text x="10.2342%" y="543.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::end_object (1 samples, 0.05%)</title><rect x="9.9842%" y="517" width="0.0528%" height="15" fill="rgb(238,59,32)" fg:x="189" fg:w="1"/><text x="10.2342%" y="527.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="9.9842%" y="501" width="0.0528%" height="15" fill="rgb(226,82,3)" fg:x="189" fg:w="1"/><text x="10.2342%" y="511.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="9.9842%" y="485" width="0.0528%" height="15" fill="rgb(240,164,32)" fg:x="189" fg:w="1"/><text x="10.2342%" y="495.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="9.9842%" y="469" width="0.0528%" height="15" fill="rgb(232,46,7)" fg:x="189" fg:w="1"/><text x="10.2342%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="9.9842%" y="453" width="0.0528%" height="15" fill="rgb(229,129,53)" fg:x="189" fg:w="1"/><text x="10.2342%" y="463.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="9.9842%" y="437" width="0.0528%" height="15" fill="rgb(234,188,29)" fg:x="189" fg:w="1"/><text x="10.2342%" y="447.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.05%)</title><rect x="9.9842%" y="421" width="0.0528%" height="15" fill="rgb(246,141,4)" fg:x="189" fg:w="1"/><text x="10.2342%" y="431.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::MessageExtra&gt;::serialize (1 samples, 0.05%)</title><rect x="10.0370%" y="533" width="0.0528%" height="15" fill="rgb(229,23,39)" fg:x="190" fg:w="1"/><text x="10.2870%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.05%)</title><rect x="10.0898%" y="517" width="0.0528%" height="15" fill="rgb(206,12,3)" fg:x="191" fg:w="1"/><text x="10.3398%" y="527.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.05%)</title><rect x="10.0898%" y="501" width="0.0528%" height="15" fill="rgb(252,226,20)" fg:x="191" fg:w="1"/><text x="10.3398%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.05%)</title><rect x="10.0898%" y="485" width="0.0528%" height="15" fill="rgb(216,123,35)" fg:x="191" fg:w="1"/><text x="10.3398%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.05%)</title><rect x="10.0898%" y="469" width="0.0528%" height="15" fill="rgb(212,68,40)" fg:x="191" fg:w="1"/><text x="10.3398%" y="479.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (1 samples, 0.05%)</title><rect x="10.0898%" y="453" width="0.0528%" height="15" fill="rgb(254,125,32)" fg:x="191" fg:w="1"/><text x="10.3398%" y="463.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (1 samples, 0.05%)</title><rect x="10.0898%" y="437" width="0.0528%" height="15" fill="rgb(253,97,22)" fg:x="191" fg:w="1"/><text x="10.3398%" y="447.50"></text></g><g><title>maelstrom-txn`core::str::traits::_&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.05%)</title><rect x="10.0898%" y="421" width="0.0528%" height="15" fill="rgb(241,101,14)" fg:x="191" fg:w="1"/><text x="10.3398%" y="431.50"></text></g><g><title>maelstrom-txn`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (1 samples, 0.05%)</title><rect x="10.0898%" y="405" width="0.0528%" height="15" fill="rgb(238,103,29)" fg:x="191" fg:w="1"/><text x="10.3398%" y="415.50"></text></g><g><title>maelstrom-txn`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (1 samples, 0.05%)</title><rect x="10.0898%" y="389" width="0.0528%" height="15" fill="rgb(233,195,47)" fg:x="191" fg:w="1"/><text x="10.3398%" y="399.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (3 samples, 0.16%)</title><rect x="10.0898%" y="533" width="0.1585%" height="15" fill="rgb(246,218,30)" fg:x="191" fg:w="3"/><text x="10.3398%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.11%)</title><rect x="10.1426%" y="517" width="0.1057%" height="15" fill="rgb(219,145,47)" fg:x="192" fg:w="2"/><text x="10.3926%" y="527.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for core::option::Option&lt;T&gt;&gt;::serialize (2 samples, 0.11%)</title><rect x="10.1426%" y="501" width="0.1057%" height="15" fill="rgb(243,12,26)" fg:x="192" fg:w="2"/><text x="10.3926%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_some (2 samples, 0.11%)</title><rect x="10.1426%" y="485" width="0.1057%" height="15" fill="rgb(214,87,16)" fg:x="192" fg:w="2"/><text x="10.3926%" y="495.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for u64&gt;::serialize (2 samples, 0.11%)</title><rect x="10.1426%" y="469" width="0.1057%" height="15" fill="rgb(208,99,42)" fg:x="192" fg:w="2"/><text x="10.3926%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (1 samples, 0.05%)</title><rect x="10.1955%" y="453" width="0.0528%" height="15" fill="rgb(253,99,2)" fg:x="193" fg:w="1"/><text x="10.4455%" y="463.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_u64 (1 samples, 0.05%)</title><rect x="10.1955%" y="437" width="0.0528%" height="15" fill="rgb(220,168,23)" fg:x="193" fg:w="1"/><text x="10.4455%" y="447.50"></text></g><g><title>maelstrom-txn`itoa::Buffer::new (1 samples, 0.05%)</title><rect x="10.1955%" y="421" width="0.0528%" height="15" fill="rgb(242,38,24)" fg:x="193" fg:w="1"/><text x="10.4455%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="10.1955%" y="405" width="0.0528%" height="15" fill="rgb(225,182,9)" fg:x="193" fg:w="1"/><text x="10.4455%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.05%)</title><rect x="10.2483%" y="469" width="0.0528%" height="15" fill="rgb(243,178,37)" fg:x="194" fg:w="1"/><text x="10.4983%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::ser::FlatMapSerializeStruct&lt;M&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.05%)</title><rect x="10.3011%" y="469" width="0.0528%" height="15" fill="rgb(232,139,19)" fg:x="195" fg:w="1"/><text x="10.5511%" y="479.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (1 samples, 0.05%)</title><rect x="10.3011%" y="453" width="0.0528%" height="15" fill="rgb(225,201,24)" fg:x="195" fg:w="1"/><text x="10.5511%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.05%)</title><rect x="10.3011%" y="437" width="0.0528%" height="15" fill="rgb(221,47,46)" fg:x="195" fg:w="1"/><text x="10.5511%" y="447.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.05%)</title><rect x="10.3011%" y="421" width="0.0528%" height="15" fill="rgb(249,23,13)" fg:x="195" fg:w="1"/><text x="10.5511%" y="431.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.05%)</title><rect x="10.3011%" y="405" width="0.0528%" height="15" fill="rgb(219,9,5)" fg:x="195" fg:w="1"/><text x="10.5511%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.05%)</title><rect x="10.3011%" y="389" width="0.0528%" height="15" fill="rgb(254,171,16)" fg:x="195" fg:w="1"/><text x="10.5511%" y="399.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (1 samples, 0.05%)</title><rect x="10.3011%" y="373" width="0.0528%" height="15" fill="rgb(230,171,20)" fg:x="195" fg:w="1"/><text x="10.5511%" y="383.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_string (1 samples, 0.05%)</title><rect x="10.3011%" y="357" width="0.0528%" height="15" fill="rgb(210,71,41)" fg:x="195" fg:w="1"/><text x="10.5511%" y="367.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="10.3011%" y="341" width="0.0528%" height="15" fill="rgb(206,173,20)" fg:x="195" fg:w="1"/><text x="10.5511%" y="351.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="10.3011%" y="325" width="0.0528%" height="15" fill="rgb(233,88,34)" fg:x="195" fg:w="1"/><text x="10.5511%" y="335.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="10.3011%" y="309" width="0.0528%" height="15" fill="rgb(223,209,46)" fg:x="195" fg:w="1"/><text x="10.5511%" y="319.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="10.3011%" y="293" width="0.0528%" height="15" fill="rgb(250,43,18)" fg:x="195" fg:w="1"/><text x="10.5511%" y="303.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="10.3011%" y="277" width="0.0528%" height="15" fill="rgb(208,13,10)" fg:x="195" fg:w="1"/><text x="10.5511%" y="287.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.05%)</title><rect x="10.3011%" y="261" width="0.0528%" height="15" fill="rgb(212,200,36)" fg:x="195" fg:w="1"/><text x="10.5511%" y="271.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::end_string (1 samples, 0.05%)</title><rect x="10.3539%" y="357" width="0.0528%" height="15" fill="rgb(225,90,30)" fg:x="196" fg:w="1"/><text x="10.6039%" y="367.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="10.3539%" y="341" width="0.0528%" height="15" fill="rgb(236,182,39)" fg:x="196" fg:w="1"/><text x="10.6039%" y="351.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="10.3539%" y="325" width="0.0528%" height="15" fill="rgb(212,144,35)" fg:x="196" fg:w="1"/><text x="10.6039%" y="335.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="10.3539%" y="309" width="0.0528%" height="15" fill="rgb(228,63,44)" fg:x="196" fg:w="1"/><text x="10.6039%" y="319.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="10.3539%" y="293" width="0.0528%" height="15" fill="rgb(228,109,6)" fg:x="196" fg:w="1"/><text x="10.6039%" y="303.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.05%)</title><rect x="10.3539%" y="277" width="0.0528%" height="15" fill="rgb(238,117,24)" fg:x="196" fg:w="1"/><text x="10.6039%" y="287.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::MessageBody&gt;::serialize (9 samples, 0.48%)</title><rect x="9.9842%" y="549" width="0.4754%" height="15" fill="rgb(242,26,26)" fg:x="189" fg:w="9"/><text x="10.2342%" y="559.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.21%)</title><rect x="10.2483%" y="533" width="0.2113%" height="15" fill="rgb(221,92,48)" fg:x="194" fg:w="4"/><text x="10.4983%" y="543.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::MessageExtra&gt;::serialize (4 samples, 0.21%)</title><rect x="10.2483%" y="517" width="0.2113%" height="15" fill="rgb(209,209,32)" fg:x="194" fg:w="4"/><text x="10.4983%" y="527.50"></text></g><g><title>maelstrom-txn`serde::__private::ser::serialize_tagged_newtype (4 samples, 0.21%)</title><rect x="10.2483%" y="501" width="0.2113%" height="15" fill="rgb(221,70,22)" fg:x="194" fg:w="4"/><text x="10.4983%" y="511.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::KvReadExtra&gt;::serialize (4 samples, 0.21%)</title><rect x="10.2483%" y="485" width="0.2113%" height="15" fill="rgb(248,145,5)" fg:x="194" fg:w="4"/><text x="10.4983%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::ser::TaggedSerializer&lt;S&gt; as serde::ser::Serializer&gt;::serialize_struct (2 samples, 0.11%)</title><rect x="10.3539%" y="469" width="0.1057%" height="15" fill="rgb(226,116,26)" fg:x="196" fg:w="2"/><text x="10.6039%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::ser::FlatMapSerializeStruct&lt;M&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.11%)</title><rect x="10.3539%" y="453" width="0.1057%" height="15" fill="rgb(244,5,17)" fg:x="196" fg:w="2"/><text x="10.6039%" y="463.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (2 samples, 0.11%)</title><rect x="10.3539%" y="437" width="0.1057%" height="15" fill="rgb(252,159,33)" fg:x="196" fg:w="2"/><text x="10.6039%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.11%)</title><rect x="10.3539%" y="421" width="0.1057%" height="15" fill="rgb(206,71,0)" fg:x="196" fg:w="2"/><text x="10.6039%" y="431.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (2 samples, 0.11%)</title><rect x="10.3539%" y="405" width="0.1057%" height="15" fill="rgb(233,118,54)" fg:x="196" fg:w="2"/><text x="10.6039%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.11%)</title><rect x="10.3539%" y="389" width="0.1057%" height="15" fill="rgb(234,83,48)" fg:x="196" fg:w="2"/><text x="10.6039%" y="399.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (2 samples, 0.11%)</title><rect x="10.3539%" y="373" width="0.1057%" height="15" fill="rgb(228,3,54)" fg:x="196" fg:w="2"/><text x="10.6039%" y="383.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (1 samples, 0.05%)</title><rect x="10.4068%" y="357" width="0.0528%" height="15" fill="rgb(226,155,13)" fg:x="197" fg:w="1"/><text x="10.6568%" y="367.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_string (1 samples, 0.05%)</title><rect x="10.4596%" y="501" width="0.0528%" height="15" fill="rgb(241,28,37)" fg:x="198" fg:w="1"/><text x="10.7096%" y="511.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="10.4596%" y="485" width="0.0528%" height="15" fill="rgb(233,93,10)" fg:x="198" fg:w="1"/><text x="10.7096%" y="495.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="10.4596%" y="469" width="0.0528%" height="15" fill="rgb(225,113,19)" fg:x="198" fg:w="1"/><text x="10.7096%" y="479.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="10.4596%" y="453" width="0.0528%" height="15" fill="rgb(241,2,18)" fg:x="198" fg:w="1"/><text x="10.7096%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="10.4596%" y="437" width="0.0528%" height="15" fill="rgb(228,207,21)" fg:x="198" fg:w="1"/><text x="10.7096%" y="447.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="10.4596%" y="421" width="0.0528%" height="15" fill="rgb(213,211,35)" fg:x="198" fg:w="1"/><text x="10.7096%" y="431.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.05%)</title><rect x="10.4596%" y="405" width="0.0528%" height="15" fill="rgb(209,83,10)" fg:x="198" fg:w="1"/><text x="10.7096%" y="415.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="10.5124%" y="405" width="0.0528%" height="15" fill="rgb(209,164,1)" fg:x="199" fg:w="1"/><text x="10.7624%" y="415.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.05%)</title><rect x="10.5124%" y="389" width="0.0528%" height="15" fill="rgb(213,184,43)" fg:x="199" fg:w="1"/><text x="10.7624%" y="399.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_string (17 samples, 0.90%)</title><rect x="9.7728%" y="661" width="0.8980%" height="15" fill="rgb(231,61,34)" fg:x="185" fg:w="17"/><text x="10.0228%" y="671.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_vec (17 samples, 0.90%)</title><rect x="9.7728%" y="645" width="0.8980%" height="15" fill="rgb(235,75,3)" fg:x="185" fg:w="17"/><text x="10.0228%" y="655.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_writer (17 samples, 0.90%)</title><rect x="9.7728%" y="629" width="0.8980%" height="15" fill="rgb(220,106,47)" fg:x="185" fg:w="17"/><text x="10.0228%" y="639.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::Message&gt;::serialize (17 samples, 0.90%)</title><rect x="9.7728%" y="613" width="0.8980%" height="15" fill="rgb(210,196,33)" fg:x="185" fg:w="17"/><text x="10.0228%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 0.90%)</title><rect x="9.7728%" y="597" width="0.8980%" height="15" fill="rgb(229,154,42)" fg:x="185" fg:w="17"/><text x="10.0228%" y="607.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (17 samples, 0.90%)</title><rect x="9.7728%" y="581" width="0.8980%" height="15" fill="rgb(228,114,26)" fg:x="185" fg:w="17"/><text x="10.0228%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 0.69%)</title><rect x="9.9842%" y="565" width="0.6867%" height="15" fill="rgb(208,144,1)" fg:x="189" fg:w="13"/><text x="10.2342%" y="575.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (4 samples, 0.21%)</title><rect x="10.4596%" y="549" width="0.2113%" height="15" fill="rgb(239,112,37)" fg:x="198" fg:w="4"/><text x="10.7096%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (4 samples, 0.21%)</title><rect x="10.4596%" y="533" width="0.2113%" height="15" fill="rgb(210,96,50)" fg:x="198" fg:w="4"/><text x="10.7096%" y="543.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (4 samples, 0.21%)</title><rect x="10.4596%" y="517" width="0.2113%" height="15" fill="rgb(222,178,2)" fg:x="198" fg:w="4"/><text x="10.7096%" y="527.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (3 samples, 0.16%)</title><rect x="10.5124%" y="501" width="0.1585%" height="15" fill="rgb(226,74,18)" fg:x="199" fg:w="3"/><text x="10.7624%" y="511.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_string_fragment (3 samples, 0.16%)</title><rect x="10.5124%" y="485" width="0.1585%" height="15" fill="rgb(225,67,54)" fg:x="199" fg:w="3"/><text x="10.7624%" y="495.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (3 samples, 0.16%)</title><rect x="10.5124%" y="469" width="0.1585%" height="15" fill="rgb(251,92,32)" fg:x="199" fg:w="3"/><text x="10.7624%" y="479.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (3 samples, 0.16%)</title><rect x="10.5124%" y="453" width="0.1585%" height="15" fill="rgb(228,149,22)" fg:x="199" fg:w="3"/><text x="10.7624%" y="463.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.16%)</title><rect x="10.5124%" y="437" width="0.1585%" height="15" fill="rgb(243,54,13)" fg:x="199" fg:w="3"/><text x="10.7624%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.16%)</title><rect x="10.5124%" y="421" width="0.1585%" height="15" fill="rgb(243,180,28)" fg:x="199" fg:w="3"/><text x="10.7624%" y="431.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (2 samples, 0.11%)</title><rect x="10.5652%" y="405" width="0.1057%" height="15" fill="rgb(208,167,24)" fg:x="200" fg:w="2"/><text x="10.8152%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::fmt::Display&gt;::fmt (2 samples, 0.11%)</title><rect x="10.6709%" y="613" width="0.1057%" height="15" fill="rgb(245,73,45)" fg:x="202" fg:w="2"/><text x="10.9209%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.11%)</title><rect x="10.6709%" y="597" width="0.1057%" height="15" fill="rgb(237,203,48)" fg:x="202" fg:w="2"/><text x="10.9209%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`write (2 samples, 0.11%)</title><rect x="10.6709%" y="581" width="0.1057%" height="15" fill="rgb(211,197,16)" fg:x="202" fg:w="2"/><text x="10.9209%" y="591.50"></text></g><g><title>maelstrom-txn`std::io::stdio::_eprint (7 samples, 0.37%)</title><rect x="10.6709%" y="661" width="0.3698%" height="15" fill="rgb(243,99,51)" fg:x="202" fg:w="7"/><text x="10.9209%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (7 samples, 0.37%)</title><rect x="10.6709%" y="645" width="0.3698%" height="15" fill="rgb(215,123,29)" fg:x="202" fg:w="7"/><text x="10.9209%" y="655.50"></text></g><g><title>maelstrom-txn`core::fmt::write (7 samples, 0.37%)</title><rect x="10.6709%" y="629" width="0.3698%" height="15" fill="rgb(239,186,37)" fg:x="202" fg:w="7"/><text x="10.9209%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (5 samples, 0.26%)</title><rect x="10.7765%" y="613" width="0.2641%" height="15" fill="rgb(252,136,39)" fg:x="204" fg:w="5"/><text x="11.0265%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`write (5 samples, 0.26%)</title><rect x="10.7765%" y="597" width="0.2641%" height="15" fill="rgb(223,213,32)" fg:x="204" fg:w="5"/><text x="11.0265%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.05%)</title><rect x="11.0407%" y="613" width="0.0528%" height="15" fill="rgb(233,115,5)" fg:x="209" fg:w="1"/><text x="11.2907%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="11.0407%" y="597" width="0.0528%" height="15" fill="rgb(207,226,44)" fg:x="209" fg:w="1"/><text x="11.2907%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.05%)</title><rect x="11.0407%" y="581" width="0.0528%" height="15" fill="rgb(208,126,0)" fg:x="209" fg:w="1"/><text x="11.2907%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="11.0407%" y="565" width="0.0528%" height="15" fill="rgb(244,66,21)" fg:x="209" fg:w="1"/><text x="11.2907%" y="575.50"></text></g><g><title>maelstrom-txn`maelstrom_node::node::Node::sync_rpc (83 samples, 4.38%)</title><rect x="6.8674%" y="677" width="4.3846%" height="15" fill="rgb(222,97,12)" fg:x="130" fg:w="83"/><text x="7.1174%" y="687.50">maels..</text></g><g><title>maelstrom-txn`std::io::stdio::_print (4 samples, 0.21%)</title><rect x="11.0407%" y="661" width="0.2113%" height="15" fill="rgb(219,213,19)" fg:x="209" fg:w="4"/><text x="11.2907%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (4 samples, 0.21%)</title><rect x="11.0407%" y="645" width="0.2113%" height="15" fill="rgb(252,169,30)" fg:x="209" fg:w="4"/><text x="11.2907%" y="655.50"></text></g><g><title>maelstrom-txn`core::fmt::write (4 samples, 0.21%)</title><rect x="11.0407%" y="629" width="0.2113%" height="15" fill="rgb(206,32,51)" fg:x="209" fg:w="4"/><text x="11.2907%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3 samples, 0.16%)</title><rect x="11.0935%" y="613" width="0.1585%" height="15" fill="rgb(250,172,42)" fg:x="210" fg:w="3"/><text x="11.3435%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (3 samples, 0.16%)</title><rect x="11.0935%" y="597" width="0.1585%" height="15" fill="rgb(209,34,43)" fg:x="210" fg:w="3"/><text x="11.3435%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`write (3 samples, 0.16%)</title><rect x="11.0935%" y="581" width="0.1585%" height="15" fill="rgb(223,11,35)" fg:x="210" fg:w="3"/><text x="11.3435%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;alloc::borrow::Cow&lt;B&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.05%)</title><rect x="11.2520%" y="485" width="0.0528%" height="15" fill="rgb(251,219,26)" fg:x="213" fg:w="1"/><text x="11.5020%" y="495.50"></text></g><g><title>maelstrom-txn`alloc::str::_&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (1 samples, 0.05%)</title><rect x="11.2520%" y="469" width="0.0528%" height="15" fill="rgb(231,119,3)" fg:x="213" fg:w="1"/><text x="11.5020%" y="479.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;&gt; (2 samples, 0.11%)</title><rect x="11.3048%" y="485" width="0.1057%" height="15" fill="rgb(216,97,11)" fg:x="214" fg:w="2"/><text x="11.5548%" y="495.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.11%)</title><rect x="11.3048%" y="469" width="0.1057%" height="15" fill="rgb(223,59,9)" fg:x="214" fg:w="2"/><text x="11.5548%" y="479.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.11%)</title><rect x="11.3048%" y="453" width="0.1057%" height="15" fill="rgb(233,93,31)" fg:x="214" fg:w="2"/><text x="11.5548%" y="463.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;serde_json::value::de::MapKeyDeserializer&gt; (1 samples, 0.05%)</title><rect x="11.4105%" y="485" width="0.0528%" height="15" fill="rgb(239,81,33)" fg:x="216" fg:w="1"/><text x="11.6605%" y="495.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::borrow::Cow&lt;str&gt;&gt; (1 samples, 0.05%)</title><rect x="11.4105%" y="469" width="0.0528%" height="15" fill="rgb(213,120,34)" fg:x="216" fg:w="1"/><text x="11.6605%" y="479.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.05%)</title><rect x="11.4105%" y="453" width="0.0528%" height="15" fill="rgb(243,49,53)" fg:x="216" fg:w="1"/><text x="11.6605%" y="463.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="11.4105%" y="437" width="0.0528%" height="15" fill="rgb(247,216,33)" fg:x="216" fg:w="1"/><text x="11.6605%" y="447.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="11.4105%" y="421" width="0.0528%" height="15" fill="rgb(226,26,14)" fg:x="216" fg:w="1"/><text x="11.6605%" y="431.50"></text></g><g><title>maelstrom-txn`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="11.4105%" y="405" width="0.0528%" height="15" fill="rgb(215,49,53)" fg:x="216" fg:w="1"/><text x="11.6605%" y="415.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1 samples, 0.05%)</title><rect x="11.4105%" y="389" width="0.0528%" height="15" fill="rgb(245,162,40)" fg:x="216" fg:w="1"/><text x="11.6605%" y="399.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="11.4105%" y="373" width="0.0528%" height="15" fill="rgb(229,68,17)" fg:x="216" fg:w="1"/><text x="11.6605%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.05%)</title><rect x="11.4105%" y="357" width="0.0528%" height="15" fill="rgb(213,182,10)" fg:x="216" fg:w="1"/><text x="11.6605%" y="367.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::parse_number (1 samples, 0.05%)</title><rect x="11.5161%" y="453" width="0.0528%" height="15" fill="rgb(245,125,30)" fg:x="218" fg:w="1"/><text x="11.7661%" y="463.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::peek_or_null (1 samples, 0.05%)</title><rect x="11.5161%" y="437" width="0.0528%" height="15" fill="rgb(232,202,2)" fg:x="218" fg:w="1"/><text x="11.7661%" y="447.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::deserialize_number (3 samples, 0.16%)</title><rect x="11.4633%" y="485" width="0.1585%" height="15" fill="rgb(237,140,51)" fg:x="217" fg:w="3"/><text x="11.7133%" y="495.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::parse_integer (3 samples, 0.16%)</title><rect x="11.4633%" y="469" width="0.1585%" height="15" fill="rgb(236,157,25)" fg:x="217" fg:w="3"/><text x="11.7133%" y="479.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::peek_or_null (1 samples, 0.05%)</title><rect x="11.5689%" y="453" width="0.0528%" height="15" fill="rgb(219,209,0)" fg:x="219" fg:w="1"/><text x="11.8189%" y="463.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::peek (1 samples, 0.05%)</title><rect x="11.5689%" y="437" width="0.0528%" height="15" fill="rgb(240,116,54)" fg:x="219" fg:w="1"/><text x="11.8189%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1 samples, 0.05%)</title><rect x="11.5689%" y="421" width="0.0528%" height="15" fill="rgb(216,10,36)" fg:x="219" fg:w="1"/><text x="11.8189%" y="431.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.05%)</title><rect x="11.5689%" y="405" width="0.0528%" height="15" fill="rgb(222,72,44)" fg:x="219" fg:w="1"/><text x="11.8189%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::de::MapKeyDeserializer as serde::de::Deserializer&gt;::deserialize_u64 (8 samples, 0.42%)</title><rect x="11.2520%" y="501" width="0.4226%" height="15" fill="rgb(232,159,9)" fg:x="213" fg:w="8"/><text x="11.5020%" y="511.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::peek (1 samples, 0.05%)</title><rect x="11.6218%" y="485" width="0.0528%" height="15" fill="rgb(210,39,32)" fg:x="220" fg:w="1"/><text x="11.8718%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1 samples, 0.05%)</title><rect x="11.6218%" y="469" width="0.0528%" height="15" fill="rgb(216,194,45)" fg:x="220" fg:w="1"/><text x="11.8718%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.05%)</title><rect x="11.6218%" y="453" width="0.0528%" height="15" fill="rgb(218,18,35)" fg:x="220" fg:w="1"/><text x="11.8718%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9 samples, 0.48%)</title><rect x="11.2520%" y="533" width="0.4754%" height="15" fill="rgb(207,83,51)" fg:x="213" fg:w="9"/><text x="11.5020%" y="543.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for usize&gt;::deserialize (9 samples, 0.48%)</title><rect x="11.2520%" y="517" width="0.4754%" height="15" fill="rgb(225,63,43)" fg:x="213" fg:w="9"/><text x="11.5020%" y="527.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::peek (1 samples, 0.05%)</title><rect x="11.6746%" y="501" width="0.0528%" height="15" fill="rgb(207,57,36)" fg:x="221" fg:w="1"/><text x="11.9246%" y="511.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (1 samples, 0.05%)</title><rect x="11.7274%" y="453" width="0.0528%" height="15" fill="rgb(216,99,33)" fg:x="222" fg:w="1"/><text x="11.9774%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::MapAccess&gt;::next_entry (11 samples, 0.58%)</title><rect x="11.2520%" y="597" width="0.5811%" height="15" fill="rgb(225,42,16)" fg:x="213" fg:w="11"/><text x="11.5020%" y="607.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_entry (11 samples, 0.58%)</title><rect x="11.2520%" y="581" width="0.5811%" height="15" fill="rgb(220,201,45)" fg:x="213" fg:w="11"/><text x="11.5020%" y="591.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_entry_seed (11 samples, 0.58%)</title><rect x="11.2520%" y="565" width="0.5811%" height="15" fill="rgb(225,33,4)" fg:x="213" fg:w="11"/><text x="11.5020%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (11 samples, 0.58%)</title><rect x="11.2520%" y="549" width="0.5811%" height="15" fill="rgb(224,33,50)" fg:x="213" fg:w="11"/><text x="11.5020%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::map::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.11%)</title><rect x="11.7274%" y="533" width="0.1057%" height="15" fill="rgb(246,198,51)" fg:x="222" fg:w="2"/><text x="11.9774%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.11%)</title><rect x="11.7274%" y="517" width="0.1057%" height="15" fill="rgb(205,22,4)" fg:x="222" fg:w="2"/><text x="11.9774%" y="527.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.11%)</title><rect x="11.7274%" y="501" width="0.1057%" height="15" fill="rgb(206,3,8)" fg:x="222" fg:w="2"/><text x="11.9774%" y="511.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (2 samples, 0.11%)</title><rect x="11.7274%" y="485" width="0.1057%" height="15" fill="rgb(251,23,15)" fg:x="222" fg:w="2"/><text x="11.9774%" y="495.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::mem::replace (2 samples, 0.11%)</title><rect x="11.7274%" y="469" width="0.1057%" height="15" fill="rgb(252,88,28)" fg:x="222" fg:w="2"/><text x="11.9774%" y="479.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1 samples, 0.05%)</title><rect x="11.7802%" y="453" width="0.0528%" height="15" fill="rgb(212,127,14)" fg:x="223" fg:w="1"/><text x="12.0302%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="11.7802%" y="437" width="0.0528%" height="15" fill="rgb(247,145,37)" fg:x="223" fg:w="1"/><text x="12.0302%" y="447.50"></text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Root::load_partition (95 samples, 5.02%)</title><rect x="6.8674%" y="693" width="5.0185%" height="15" fill="rgb(209,117,53)" fg:x="130" fg:w="95"/><text x="7.1174%" y="703.50">maelst..</text></g><g><title>maelstrom-txn`serde_json::value::from_value (12 samples, 0.63%)</title><rect x="11.2520%" y="677" width="0.6339%" height="15" fill="rgb(212,90,42)" fg:x="213" fg:w="12"/><text x="11.5020%" y="687.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (12 samples, 0.63%)</title><rect x="11.2520%" y="661" width="0.6339%" height="15" fill="rgb(218,164,37)" fg:x="213" fg:w="12"/><text x="11.5020%" y="671.50"></text></g><g><title>maelstrom-txn`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (12 samples, 0.63%)</title><rect x="11.2520%" y="645" width="0.6339%" height="15" fill="rgb(246,65,34)" fg:x="213" fg:w="12"/><text x="11.5020%" y="655.50"></text></g><g><title>maelstrom-txn`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (12 samples, 0.63%)</title><rect x="11.2520%" y="629" width="0.6339%" height="15" fill="rgb(231,100,33)" fg:x="213" fg:w="12"/><text x="11.5020%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize::MapVisitor&lt;K,V,S&gt; as serde::de::Visitor&gt;::visit_map (12 samples, 0.63%)</title><rect x="11.2520%" y="613" width="0.6339%" height="15" fill="rgb(228,126,14)" fg:x="213" fg:w="12"/><text x="11.5020%" y="623.50"></text></g><g><title>maelstrom-txn`std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (1 samples, 0.05%)</title><rect x="11.8331%" y="597" width="0.0528%" height="15" fill="rgb(215,173,21)" fg:x="224" fg:w="1"/><text x="12.0831%" y="607.50"></text></g><g><title>maelstrom-txn`hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (1 samples, 0.05%)</title><rect x="11.8331%" y="581" width="0.0528%" height="15" fill="rgb(210,6,40)" fg:x="224" fg:w="1"/><text x="12.0831%" y="591.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="11.8331%" y="565" width="0.0528%" height="15" fill="rgb(212,48,18)" fg:x="224" fg:w="1"/><text x="12.0831%" y="575.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::fallible_with_capacity (1 samples, 0.05%)</title><rect x="11.8331%" y="549" width="0.0528%" height="15" fill="rgb(230,214,11)" fg:x="224" fg:w="1"/><text x="12.0831%" y="559.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.05%)</title><rect x="11.8331%" y="533" width="0.0528%" height="15" fill="rgb(254,105,39)" fg:x="224" fg:w="1"/><text x="12.0831%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="11.8331%" y="517" width="0.0528%" height="15" fill="rgb(245,158,5)" fg:x="224" fg:w="1"/><text x="12.0831%" y="527.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="11.8331%" y="501" width="0.0528%" height="15" fill="rgb(249,208,11)" fg:x="224" fg:w="1"/><text x="12.0831%" y="511.50"></text></g><g><title>maelstrom-txn`alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="11.8331%" y="485" width="0.0528%" height="15" fill="rgb(210,39,28)" fg:x="224" fg:w="1"/><text x="12.0831%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="11.8331%" y="469" width="0.0528%" height="15" fill="rgb(211,56,53)" fg:x="224" fg:w="1"/><text x="12.0831%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="11.8331%" y="453" width="0.0528%" height="15" fill="rgb(226,201,30)" fg:x="224" fg:w="1"/><text x="12.0831%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.05%)</title><rect x="11.8331%" y="437" width="0.0528%" height="15" fill="rgb(239,101,34)" fg:x="224" fg:w="1"/><text x="12.0831%" y="447.50"></text></g><g><title>maelstrom-txn`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.05%)</title><rect x="11.8859%" y="693" width="0.0528%" height="15" fill="rgb(226,209,5)" fg:x="225" fg:w="1"/><text x="12.1359%" y="703.50"></text></g><g><title>maelstrom-txn`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.05%)</title><rect x="11.8859%" y="677" width="0.0528%" height="15" fill="rgb(250,105,47)" fg:x="225" fg:w="1"/><text x="12.1359%" y="687.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.05%)</title><rect x="11.8859%" y="661" width="0.0528%" height="15" fill="rgb(230,72,3)" fg:x="225" fg:w="1"/><text x="12.1359%" y="671.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.05%)</title><rect x="11.8859%" y="645" width="0.0528%" height="15" fill="rgb(232,218,39)" fg:x="225" fg:w="1"/><text x="12.1359%" y="655.50"></text></g><g><title>maelstrom-txn`hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.05%)</title><rect x="11.8859%" y="629" width="0.0528%" height="15" fill="rgb(248,166,6)" fg:x="225" fg:w="1"/><text x="12.1359%" y="639.50"></text></g><g><title>maelstrom-txn`core::cmp::impls::_&lt;impl core::cmp::PartialEq for usize&gt;::eq (1 samples, 0.05%)</title><rect x="11.8859%" y="613" width="0.0528%" height="15" fill="rgb(247,89,20)" fg:x="225" fg:w="1"/><text x="12.1359%" y="623.50"></text></g><g><title>maelstrom-txn`std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.05%)</title><rect x="11.9387%" y="693" width="0.0528%" height="15" fill="rgb(248,130,54)" fg:x="226" fg:w="1"/><text x="12.1887%" y="703.50"></text></g><g><title>maelstrom-txn`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.05%)</title><rect x="11.9387%" y="677" width="0.0528%" height="15" fill="rgb(234,196,4)" fg:x="226" fg:w="1"/><text x="12.1887%" y="687.50"></text></g><g><title>maelstrom-txn`core::hash::BuildHasher::hash_one (1 samples, 0.05%)</title><rect x="11.9387%" y="661" width="0.0528%" height="15" fill="rgb(250,143,31)" fg:x="226" fg:w="1"/><text x="12.1887%" y="671.50"></text></g><g><title>maelstrom-txn`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.05%)</title><rect x="11.9387%" y="645" width="0.0528%" height="15" fill="rgb(211,110,34)" fg:x="226" fg:w="1"/><text x="12.1887%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.05%)</title><rect x="11.9387%" y="629" width="0.0528%" height="15" fill="rgb(215,124,48)" fg:x="226" fg:w="1"/><text x="12.1887%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.05%)</title><rect x="11.9387%" y="613" width="0.0528%" height="15" fill="rgb(216,46,13)" fg:x="226" fg:w="1"/><text x="12.1887%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.05%)</title><rect x="11.9387%" y="597" width="0.0528%" height="15" fill="rgb(205,184,25)" fg:x="226" fg:w="1"/><text x="12.1887%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="11.9387%" y="581" width="0.0528%" height="15" fill="rgb(228,1,10)" fg:x="226" fg:w="1"/><text x="12.1887%" y="591.50"></text></g><g><title>maelstrom-txn`core::fmt::Formatter::debug_map (1 samples, 0.05%)</title><rect x="12.0444%" y="629" width="0.0528%" height="15" fill="rgb(213,116,27)" fg:x="228" fg:w="1"/><text x="12.2944%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="12.0444%" y="613" width="0.0528%" height="15" fill="rgb(241,95,50)" fg:x="228" fg:w="1"/><text x="12.2944%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.05%)</title><rect x="12.0444%" y="597" width="0.0528%" height="15" fill="rgb(238,48,32)" fg:x="228" fg:w="1"/><text x="12.2944%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (2 samples, 0.11%)</title><rect x="12.0972%" y="613" width="0.1057%" height="15" fill="rgb(235,113,49)" fg:x="229" fg:w="2"/><text x="12.3472%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`write (17 samples, 0.90%)</title><rect x="12.4142%" y="501" width="0.8980%" height="15" fill="rgb(205,127,43)" fg:x="235" fg:w="17"/><text x="12.6642%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;&amp;T as core::fmt::Debug&gt;::fmt (22 samples, 1.16%)</title><rect x="12.2029%" y="581" width="1.1622%" height="15" fill="rgb(250,162,2)" fg:x="231" fg:w="22"/><text x="12.4529%" y="591.50"></text></g><g><title>maelstrom-txn`core::fmt::num::_&lt;impl core::fmt::Debug for usize&gt;::fmt (21 samples, 1.11%)</title><rect x="12.2557%" y="565" width="1.1094%" height="15" fill="rgb(220,13,41)" fg:x="232" fg:w="21"/><text x="12.5057%" y="575.50"></text></g><g><title>maelstrom-txn`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (21 samples, 1.11%)</title><rect x="12.2557%" y="549" width="1.1094%" height="15" fill="rgb(249,221,25)" fg:x="232" fg:w="21"/><text x="12.5057%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (21 samples, 1.11%)</title><rect x="12.2557%" y="533" width="1.1094%" height="15" fill="rgb(215,208,19)" fg:x="232" fg:w="21"/><text x="12.5057%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (18 samples, 0.95%)</title><rect x="12.4142%" y="517" width="0.9509%" height="15" fill="rgb(236,175,2)" fg:x="235" fg:w="18"/><text x="12.6642%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (1 samples, 0.05%)</title><rect x="13.3122%" y="501" width="0.0528%" height="15" fill="rgb(241,52,2)" fg:x="252" fg:w="1"/><text x="13.5622%" y="511.50"></text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::entry (33 samples, 1.74%)</title><rect x="12.2029%" y="613" width="1.7433%" height="15" fill="rgb(248,140,14)" fg:x="231" fg:w="33"/><text x="12.4529%" y="623.50"></text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::key (33 samples, 1.74%)</title><rect x="12.2029%" y="597" width="1.7433%" height="15" fill="rgb(253,22,42)" fg:x="231" fg:w="33"/><text x="12.4529%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (11 samples, 0.58%)</title><rect x="13.3650%" y="581" width="0.5811%" height="15" fill="rgb(234,61,47)" fg:x="253" fg:w="11"/><text x="13.6150%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (11 samples, 0.58%)</title><rect x="13.3650%" y="565" width="0.5811%" height="15" fill="rgb(208,226,15)" fg:x="253" fg:w="11"/><text x="13.6150%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`write (10 samples, 0.53%)</title><rect x="13.4179%" y="549" width="0.5283%" height="15" fill="rgb(217,221,4)" fg:x="254" fg:w="10"/><text x="13.6679%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (16 samples, 0.85%)</title><rect x="13.9461%" y="549" width="0.8452%" height="15" fill="rgb(212,174,34)" fg:x="264" fg:w="16"/><text x="14.1961%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (15 samples, 0.79%)</title><rect x="13.9989%" y="533" width="0.7924%" height="15" fill="rgb(253,83,4)" fg:x="265" fg:w="15"/><text x="14.2489%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`write (15 samples, 0.79%)</title><rect x="13.9989%" y="517" width="0.7924%" height="15" fill="rgb(250,195,49)" fg:x="265" fg:w="15"/><text x="14.2489%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;&amp;T as core::fmt::Debug&gt;::fmt (34 samples, 1.80%)</title><rect x="13.9461%" y="597" width="1.7961%" height="15" fill="rgb(241,192,25)" fg:x="264" fg:w="34"/><text x="14.1961%" y="607.50">m..</text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::fmt::Debug&gt;::fmt (34 samples, 1.80%)</title><rect x="13.9461%" y="581" width="1.7961%" height="15" fill="rgb(208,124,10)" fg:x="264" fg:w="34"/><text x="14.1961%" y="591.50">m..</text></g><g><title>maelstrom-txn`&lt;str as core::fmt::Debug&gt;::fmt (34 samples, 1.80%)</title><rect x="13.9461%" y="565" width="1.7961%" height="15" fill="rgb(222,33,0)" fg:x="264" fg:w="34"/><text x="14.1961%" y="575.50">m..</text></g><g><title>maelstrom-txn`core::fmt::Write::write_char (18 samples, 0.95%)</title><rect x="14.7913%" y="549" width="0.9509%" height="15" fill="rgb(234,209,28)" fg:x="280" fg:w="18"/><text x="15.0413%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`write (18 samples, 0.95%)</title><rect x="14.7913%" y="533" width="0.9509%" height="15" fill="rgb(224,11,23)" fg:x="280" fg:w="18"/><text x="15.0413%" y="543.50"></text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::entries (81 samples, 4.28%)</title><rect x="12.0972%" y="629" width="4.2789%" height="15" fill="rgb(232,99,1)" fg:x="229" fg:w="81"/><text x="12.3472%" y="639.50">maels..</text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::value (46 samples, 2.43%)</title><rect x="13.9461%" y="613" width="2.4300%" height="15" fill="rgb(237,95,45)" fg:x="264" fg:w="46"/><text x="14.1961%" y="623.50">ma..</text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (12 samples, 0.63%)</title><rect x="15.7422%" y="597" width="0.6339%" height="15" fill="rgb(208,109,11)" fg:x="298" fg:w="12"/><text x="15.9922%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (10 samples, 0.53%)</title><rect x="15.8479%" y="581" width="0.5283%" height="15" fill="rgb(216,190,48)" fg:x="300" fg:w="10"/><text x="16.0979%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`write (10 samples, 0.53%)</title><rect x="15.8479%" y="565" width="0.5283%" height="15" fill="rgb(251,171,36)" fg:x="300" fg:w="10"/><text x="16.0979%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::fmt::Debug&gt;::fmt (83 samples, 4.38%)</title><rect x="12.0444%" y="645" width="4.3846%" height="15" fill="rgb(230,62,22)" fg:x="228" fg:w="83"/><text x="12.2944%" y="655.50">maels..</text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::finish (1 samples, 0.05%)</title><rect x="16.3761%" y="629" width="0.0528%" height="15" fill="rgb(225,114,35)" fg:x="310" fg:w="1"/><text x="16.6261%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="16.3761%" y="613" width="0.0528%" height="15" fill="rgb(215,118,42)" fg:x="310" fg:w="1"/><text x="16.6261%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.05%)</title><rect x="16.3761%" y="597" width="0.0528%" height="15" fill="rgb(243,119,21)" fg:x="310" fg:w="1"/><text x="16.6261%" y="607.50"></text></g><g><title>maelstrom-txn`core::option::Option&lt;T&gt;::and_then (183 samples, 9.67%)</title><rect x="6.8146%" y="725" width="9.6672%" height="15" fill="rgb(252,177,53)" fg:x="129" fg:w="183"/><text x="7.0646%" y="735.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Root::get::_{{closure}} (183 samples, 9.67%)</title><rect x="6.8146%" y="709" width="9.6672%" height="15" fill="rgb(237,209,29)" fg:x="129" fg:w="183"/><text x="7.0646%" y="719.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`std::io::stdio::_eprint (85 samples, 4.49%)</title><rect x="11.9915%" y="693" width="4.4902%" height="15" fill="rgb(212,65,23)" fg:x="227" fg:w="85"/><text x="12.2415%" y="703.50">maels..</text></g><g><title>maelstrom-txn`&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (85 samples, 4.49%)</title><rect x="11.9915%" y="677" width="4.4902%" height="15" fill="rgb(230,222,46)" fg:x="227" fg:w="85"/><text x="12.2415%" y="687.50">maels..</text></g><g><title>maelstrom-txn`core::fmt::write (85 samples, 4.49%)</title><rect x="11.9915%" y="661" width="4.4902%" height="15" fill="rgb(215,135,32)" fg:x="227" fg:w="85"/><text x="12.2415%" y="671.50">maels..</text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="16.4289%" y="645" width="0.0528%" height="15" fill="rgb(246,101,22)" fg:x="311" fg:w="1"/><text x="16.6789%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.05%)</title><rect x="16.4289%" y="629" width="0.0528%" height="15" fill="rgb(206,107,13)" fg:x="311" fg:w="1"/><text x="16.6789%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (298 samples, 15.74%)</title><rect x="0.7924%" y="901" width="15.7422%" height="15" fill="rgb(250,100,44)" fg:x="15" fg:w="298"/><text x="1.0424%" y="911.50">maelstrom-txn`&lt;core::ite..</text></g><g><title>maelstrom-txn`&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (298 samples, 15.74%)</title><rect x="0.7924%" y="885" width="15.7422%" height="15" fill="rgb(231,147,38)" fg:x="15" fg:w="298"/><text x="1.0424%" y="895.50">maelstrom-txn`&lt;std::coll..</text></g><g><title>maelstrom-txn`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (298 samples, 15.74%)</title><rect x="0.7924%" y="869" width="15.7422%" height="15" fill="rgb(229,8,40)" fg:x="15" fg:w="298"/><text x="1.0424%" y="879.50">maelstrom-txn`&lt;hashbrown..</text></g><g><title>maelstrom-txn`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (298 samples, 15.74%)</title><rect x="0.7924%" y="853" width="15.7422%" height="15" fill="rgb(221,135,30)" fg:x="15" fg:w="298"/><text x="1.0424%" y="863.50">maelstrom-txn`&lt;hashbrown..</text></g><g><title>maelstrom-txn`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (298 samples, 15.74%)</title><rect x="0.7924%" y="837" width="15.7422%" height="15" fill="rgb(249,193,18)" fg:x="15" fg:w="298"/><text x="1.0424%" y="847.50">maelstrom-txn`hashbrown:..</text></g><g><title>maelstrom-txn`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (297 samples, 15.69%)</title><rect x="0.8452%" y="821" width="15.6894%" height="15" fill="rgb(209,133,39)" fg:x="16" fg:w="297"/><text x="1.0952%" y="831.50">maelstrom-txn`&lt;hashbrown..</text></g><g><title>maelstrom-txn`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (297 samples, 15.69%)</title><rect x="0.8452%" y="805" width="15.6894%" height="15" fill="rgb(232,100,14)" fg:x="16" fg:w="297"/><text x="1.0952%" y="815.50">maelstrom-txn`&lt;hashbrown..</text></g><g><title>maelstrom-txn`core::iter::adapters::filter::filter_fold::_{{closure}} (297 samples, 15.69%)</title><rect x="0.8452%" y="789" width="15.6894%" height="15" fill="rgb(224,185,1)" fg:x="16" fg:w="297"/><text x="1.0952%" y="799.50">maelstrom-txn`core::iter..</text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Transactor::transact::_{{closure}} (184 samples, 9.72%)</title><rect x="6.8146%" y="773" width="9.7200%" height="15" fill="rgb(223,139,8)" fg:x="129" fg:w="184"/><text x="7.0646%" y="783.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Root::contains_key (184 samples, 9.72%)</title><rect x="6.8146%" y="757" width="9.7200%" height="15" fill="rgb(232,213,38)" fg:x="129" fg:w="184"/><text x="7.0646%" y="767.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Root::get (184 samples, 9.72%)</title><rect x="6.8146%" y="741" width="9.7200%" height="15" fill="rgb(207,94,22)" fg:x="129" fg:w="184"/><text x="7.0646%" y="751.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.05%)</title><rect x="16.4818%" y="725" width="0.0528%" height="15" fill="rgb(219,183,54)" fg:x="312" fg:w="1"/><text x="16.7318%" y="735.50"></text></g><g><title>maelstrom-txn`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.05%)</title><rect x="16.4818%" y="709" width="0.0528%" height="15" fill="rgb(216,185,54)" fg:x="312" fg:w="1"/><text x="16.7318%" y="719.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.05%)</title><rect x="16.4818%" y="693" width="0.0528%" height="15" fill="rgb(254,217,39)" fg:x="312" fg:w="1"/><text x="16.7318%" y="703.50"></text></g><g><title>maelstrom-txn`core::hash::BuildHasher::hash_one (1 samples, 0.05%)</title><rect x="16.5346%" y="741" width="0.0528%" height="15" fill="rgb(240,178,23)" fg:x="313" fg:w="1"/><text x="16.7846%" y="751.50"></text></g><g><title>maelstrom-txn`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.05%)</title><rect x="16.5346%" y="725" width="0.0528%" height="15" fill="rgb(218,11,47)" fg:x="313" fg:w="1"/><text x="16.7846%" y="735.50"></text></g><g><title>maelstrom-txn`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.05%)</title><rect x="16.5346%" y="709" width="0.0528%" height="15" fill="rgb(218,51,51)" fg:x="313" fg:w="1"/><text x="16.7846%" y="719.50"></text></g><g><title>maelstrom-txn`core::hash::Hasher::write_usize (1 samples, 0.05%)</title><rect x="16.5346%" y="693" width="0.0528%" height="15" fill="rgb(238,126,27)" fg:x="313" fg:w="1"/><text x="16.7846%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="16.5346%" y="677" width="0.0528%" height="15" fill="rgb(249,202,22)" fg:x="313" fg:w="1"/><text x="16.7846%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="16.5346%" y="661" width="0.0528%" height="15" fill="rgb(254,195,49)" fg:x="313" fg:w="1"/><text x="16.7846%" y="671.50"></text></g><g><title>maelstrom-txn`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.05%)</title><rect x="16.5874%" y="741" width="0.0528%" height="15" fill="rgb(208,123,14)" fg:x="314" fg:w="1"/><text x="16.8374%" y="751.50"></text></g><g><title>maelstrom-txn`core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.05%)</title><rect x="16.6403%" y="709" width="0.0528%" height="15" fill="rgb(224,200,8)" fg:x="315" fg:w="1"/><text x="16.8903%" y="719.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (4 samples, 0.21%)</title><rect x="16.5346%" y="789" width="0.2113%" height="15" fill="rgb(217,61,36)" fg:x="313" fg:w="4"/><text x="16.7846%" y="799.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (4 samples, 0.21%)</title><rect x="16.5346%" y="773" width="0.2113%" height="15" fill="rgb(206,35,45)" fg:x="313" fg:w="4"/><text x="16.7846%" y="783.50"></text></g><g><title>maelstrom-txn`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.21%)</title><rect x="16.5346%" y="757" width="0.2113%" height="15" fill="rgb(217,65,33)" fg:x="313" fg:w="4"/><text x="16.7846%" y="767.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (2 samples, 0.11%)</title><rect x="16.6403%" y="741" width="0.1057%" height="15" fill="rgb(222,158,48)" fg:x="315" fg:w="2"/><text x="16.8903%" y="751.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (2 samples, 0.11%)</title><rect x="16.6403%" y="725" width="0.1057%" height="15" fill="rgb(254,2,54)" fg:x="315" fg:w="2"/><text x="16.8903%" y="735.50"></text></g><g><title>maelstrom-txn`core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.05%)</title><rect x="16.6931%" y="709" width="0.0528%" height="15" fill="rgb(250,143,38)" fg:x="316" fg:w="1"/><text x="16.9431%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`read (4 samples, 0.21%)</title><rect x="16.7459%" y="725" width="0.2113%" height="15" fill="rgb(248,25,0)" fg:x="317" fg:w="4"/><text x="16.9959%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StdinLock as std::io::BufRead&gt;::read_line (6 samples, 0.32%)</title><rect x="16.7459%" y="741" width="0.3170%" height="15" fill="rgb(206,152,27)" fg:x="317" fg:w="6"/><text x="16.9959%" y="751.50"></text></g><g><title>maelstrom-txn`std::io::read_until (2 samples, 0.11%)</title><rect x="16.9572%" y="725" width="0.1057%" height="15" fill="rgb(240,77,30)" fg:x="321" fg:w="2"/><text x="17.2072%" y="735.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.05%)</title><rect x="17.0100%" y="709" width="0.0528%" height="15" fill="rgb(231,5,3)" fg:x="322" fg:w="1"/><text x="17.2600%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.05%)</title><rect x="17.0100%" y="693" width="0.0528%" height="15" fill="rgb(207,226,32)" fg:x="322" fg:w="1"/><text x="17.2600%" y="703.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.11%)</title><rect x="17.0629%" y="741" width="0.1057%" height="15" fill="rgb(222,207,47)" fg:x="323" fg:w="2"/><text x="17.3129%" y="751.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.11%)</title><rect x="17.0629%" y="725" width="0.1057%" height="15" fill="rgb(229,115,45)" fg:x="323" fg:w="2"/><text x="17.3129%" y="735.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.11%)</title><rect x="17.0629%" y="709" width="0.1057%" height="15" fill="rgb(224,191,6)" fg:x="323" fg:w="2"/><text x="17.3129%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="17.0629%" y="693" width="0.1057%" height="15" fill="rgb(230,227,24)" fg:x="323" fg:w="2"/><text x="17.3129%" y="703.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2 samples, 0.11%)</title><rect x="17.0629%" y="677" width="0.1057%" height="15" fill="rgb(228,80,19)" fg:x="323" fg:w="2"/><text x="17.3129%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.11%)</title><rect x="17.0629%" y="661" width="0.1057%" height="15" fill="rgb(247,229,0)" fg:x="323" fg:w="2"/><text x="17.3129%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.11%)</title><rect x="17.0629%" y="645" width="0.1057%" height="15" fill="rgb(237,194,15)" fg:x="323" fg:w="2"/><text x="17.3129%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="17.1157%" y="629" width="0.0528%" height="15" fill="rgb(219,203,20)" fg:x="324" fg:w="1"/><text x="17.3657%" y="639.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="17.1685%" y="725" width="0.0528%" height="15" fill="rgb(234,128,8)" fg:x="325" fg:w="1"/><text x="17.4185%" y="735.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_key (2 samples, 0.11%)</title><rect x="17.2742%" y="661" width="0.1057%" height="15" fill="rgb(248,202,8)" fg:x="327" fg:w="2"/><text x="17.5242%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.11%)</title><rect x="17.2742%" y="645" width="0.1057%" height="15" fill="rgb(206,104,37)" fg:x="327" fg:w="2"/><text x="17.5242%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.05%)</title><rect x="17.3270%" y="629" width="0.0528%" height="15" fill="rgb(223,8,27)" fg:x="328" fg:w="1"/><text x="17.5770%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.05%)</title><rect x="17.3270%" y="613" width="0.0528%" height="15" fill="rgb(216,217,28)" fg:x="328" fg:w="1"/><text x="17.5770%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.05%)</title><rect x="17.3270%" y="597" width="0.0528%" height="15" fill="rgb(249,199,1)" fg:x="328" fg:w="1"/><text x="17.5770%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.05%)</title><rect x="17.3270%" y="581" width="0.0528%" height="15" fill="rgb(240,85,17)" fg:x="328" fg:w="1"/><text x="17.5770%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.05%)</title><rect x="17.3270%" y="565" width="0.0528%" height="15" fill="rgb(206,108,45)" fg:x="328" fg:w="1"/><text x="17.5770%" y="575.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::parse_str_bytes (1 samples, 0.05%)</title><rect x="17.3270%" y="549" width="0.0528%" height="15" fill="rgb(245,210,41)" fg:x="328" fg:w="1"/><text x="17.5770%" y="559.50"></text></g><g><title>maelstrom-txn`core::num::_&lt;impl u64&gt;::from_le_bytes (1 samples, 0.05%)</title><rect x="17.3270%" y="533" width="0.0528%" height="15" fill="rgb(206,13,37)" fg:x="328" fg:w="1"/><text x="17.5770%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.05%)</title><rect x="17.4855%" y="581" width="0.0528%" height="15" fill="rgb(250,61,18)" fg:x="331" fg:w="1"/><text x="17.7355%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapAccess&lt;E&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.05%)</title><rect x="17.5383%" y="501" width="0.0528%" height="15" fill="rgb(235,172,48)" fg:x="332" fg:w="1"/><text x="17.7883%" y="511.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.05%)</title><rect x="17.5911%" y="501" width="0.0528%" height="15" fill="rgb(249,201,17)" fg:x="333" fg:w="1"/><text x="17.8411%" y="511.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="17.5911%" y="485" width="0.0528%" height="15" fill="rgb(219,208,6)" fg:x="333" fg:w="1"/><text x="17.8411%" y="495.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1 samples, 0.05%)</title><rect x="17.5911%" y="469" width="0.0528%" height="15" fill="rgb(248,31,23)" fg:x="333" fg:w="1"/><text x="17.8411%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.16%)</title><rect x="17.5383%" y="549" width="0.1585%" height="15" fill="rgb(245,15,42)" fg:x="332" fg:w="3"/><text x="17.7883%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_map (3 samples, 0.16%)</title><rect x="17.5383%" y="533" width="0.1585%" height="15" fill="rgb(222,217,39)" fg:x="332" fg:w="3"/><text x="17.7883%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::TaggedContentVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_map (3 samples, 0.16%)</title><rect x="17.5383%" y="517" width="0.1585%" height="15" fill="rgb(210,219,27)" fg:x="332" fg:w="3"/><text x="17.7883%" y="527.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (1 samples, 0.05%)</title><rect x="17.6440%" y="501" width="0.0528%" height="15" fill="rgb(252,166,36)" fg:x="334" fg:w="1"/><text x="17.8940%" y="511.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;core::option::Option&lt;serde::__private::de::content::Content&gt;&gt; (1 samples, 0.05%)</title><rect x="17.6968%" y="517" width="0.0528%" height="15" fill="rgb(245,132,34)" fg:x="335" fg:w="1"/><text x="17.9468%" y="527.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageExtra&gt;::deserialize (5 samples, 0.26%)</title><rect x="17.5383%" y="565" width="0.2641%" height="15" fill="rgb(236,54,3)" fg:x="332" fg:w="5"/><text x="17.7883%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.11%)</title><rect x="17.6968%" y="549" width="0.1057%" height="15" fill="rgb(241,173,43)" fg:x="335" fg:w="2"/><text x="17.9468%" y="559.50"></text></g><g><title>maelstrom-txn`serde::__private::de::content::visit_content_map (2 samples, 0.11%)</title><rect x="17.6968%" y="533" width="0.1057%" height="15" fill="rgb(215,190,9)" fg:x="335" fg:w="2"/><text x="17.9468%" y="543.50"></text></g><g><title>maelstrom-txn`serde::de::value::MapDeserializer&lt;I,E&gt;::end (1 samples, 0.05%)</title><rect x="17.7496%" y="517" width="0.0528%" height="15" fill="rgb(242,101,16)" fg:x="336" fg:w="1"/><text x="17.9996%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.05%)</title><rect x="17.7496%" y="501" width="0.0528%" height="15" fill="rgb(223,190,21)" fg:x="336" fg:w="1"/><text x="17.9996%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.05%)</title><rect x="17.7496%" y="485" width="0.0528%" height="15" fill="rgb(215,228,25)" fg:x="336" fg:w="1"/><text x="17.9996%" y="495.50"></text></g><g><title>maelstrom-txn`core::iter::traits::exact_size::ExactSizeIterator::len (1 samples, 0.05%)</title><rect x="17.7496%" y="469" width="0.0528%" height="15" fill="rgb(225,36,22)" fg:x="336" fg:w="1"/><text x="17.9996%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.05%)</title><rect x="17.7496%" y="453" width="0.0528%" height="15" fill="rgb(251,106,46)" fg:x="336" fg:w="1"/><text x="17.9996%" y="463.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_key (1 samples, 0.05%)</title><rect x="17.8024%" y="565" width="0.0528%" height="15" fill="rgb(208,90,1)" fg:x="337" fg:w="1"/><text x="18.0524%" y="575.50"></text></g><g><title>maelstrom-txn`serde_json::de::from_str (14 samples, 0.74%)</title><rect x="17.1685%" y="741" width="0.7396%" height="15" fill="rgb(243,10,4)" fg:x="325" fg:w="14"/><text x="17.4185%" y="751.50"></text></g><g><title>maelstrom-txn`serde_json::de::from_trait (13 samples, 0.69%)</title><rect x="17.2213%" y="725" width="0.6867%" height="15" fill="rgb(212,137,27)" fg:x="326" fg:w="13"/><text x="17.4713%" y="735.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize (13 samples, 0.69%)</title><rect x="17.2213%" y="709" width="0.6867%" height="15" fill="rgb(231,220,49)" fg:x="326" fg:w="13"/><text x="17.4713%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (13 samples, 0.69%)</title><rect x="17.2213%" y="693" width="0.6867%" height="15" fill="rgb(237,96,20)" fg:x="326" fg:w="13"/><text x="17.4713%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.63%)</title><rect x="17.2742%" y="677" width="0.6339%" height="15" fill="rgb(239,229,30)" fg:x="327" fg:w="12"/><text x="17.5242%" y="687.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (10 samples, 0.53%)</title><rect x="17.3798%" y="661" width="0.5283%" height="15" fill="rgb(219,65,33)" fg:x="329" fg:w="10"/><text x="17.6298%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (10 samples, 0.53%)</title><rect x="17.3798%" y="645" width="0.5283%" height="15" fill="rgb(243,134,7)" fg:x="329" fg:w="10"/><text x="17.6298%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9 samples, 0.48%)</title><rect x="17.4326%" y="629" width="0.4754%" height="15" fill="rgb(216,177,54)" fg:x="330" fg:w="9"/><text x="17.6826%" y="639.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize (8 samples, 0.42%)</title><rect x="17.4855%" y="613" width="0.4226%" height="15" fill="rgb(211,160,20)" fg:x="331" fg:w="8"/><text x="17.7355%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (8 samples, 0.42%)</title><rect x="17.4855%" y="597" width="0.4226%" height="15" fill="rgb(239,85,39)" fg:x="331" fg:w="8"/><text x="17.7355%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.37%)</title><rect x="17.5383%" y="581" width="0.3698%" height="15" fill="rgb(232,125,22)" fg:x="332" fg:w="7"/><text x="17.7883%" y="591.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (1 samples, 0.05%)</title><rect x="17.8553%" y="565" width="0.0528%" height="15" fill="rgb(244,57,34)" fg:x="338" fg:w="1"/><text x="18.1053%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.05%)</title><rect x="17.8553%" y="549" width="0.0528%" height="15" fill="rgb(214,203,32)" fg:x="338" fg:w="1"/><text x="18.1053%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.05%)</title><rect x="17.8553%" y="533" width="0.0528%" height="15" fill="rgb(207,58,43)" fg:x="338" fg:w="1"/><text x="18.1053%" y="543.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1 samples, 0.05%)</title><rect x="17.8553%" y="517" width="0.0528%" height="15" fill="rgb(215,193,15)" fg:x="338" fg:w="1"/><text x="18.1053%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (1 samples, 0.05%)</title><rect x="17.8553%" y="501" width="0.0528%" height="15" fill="rgb(232,15,44)" fg:x="338" fg:w="1"/><text x="18.1053%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (1 samples, 0.05%)</title><rect x="17.8553%" y="485" width="0.0528%" height="15" fill="rgb(212,3,48)" fg:x="338" fg:w="1"/><text x="18.1053%" y="495.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for u64&gt;::deserialize (1 samples, 0.05%)</title><rect x="17.8553%" y="469" width="0.0528%" height="15" fill="rgb(218,128,7)" fg:x="338" fg:w="1"/><text x="18.1053%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u64 (1 samples, 0.05%)</title><rect x="17.8553%" y="453" width="0.0528%" height="15" fill="rgb(226,216,39)" fg:x="338" fg:w="1"/><text x="18.1053%" y="463.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::deserialize_number (1 samples, 0.05%)</title><rect x="17.8553%" y="437" width="0.0528%" height="15" fill="rgb(243,47,51)" fg:x="338" fg:w="1"/><text x="18.1053%" y="447.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.05%)</title><rect x="17.8553%" y="421" width="0.0528%" height="15" fill="rgb(241,183,40)" fg:x="338" fg:w="1"/><text x="18.1053%" y="431.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::parse_number (1 samples, 0.05%)</title><rect x="17.8553%" y="405" width="0.0528%" height="15" fill="rgb(231,217,32)" fg:x="338" fg:w="1"/><text x="18.1053%" y="415.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_string (2 samples, 0.11%)</title><rect x="17.9609%" y="565" width="0.1057%" height="15" fill="rgb(229,61,38)" fg:x="340" fg:w="2"/><text x="18.2109%" y="575.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.11%)</title><rect x="17.9609%" y="549" width="0.1057%" height="15" fill="rgb(225,210,5)" fg:x="340" fg:w="2"/><text x="18.2109%" y="559.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.11%)</title><rect x="17.9609%" y="533" width="0.1057%" height="15" fill="rgb(231,79,45)" fg:x="340" fg:w="2"/><text x="18.2109%" y="543.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.11%)</title><rect x="17.9609%" y="517" width="0.1057%" height="15" fill="rgb(224,100,7)" fg:x="340" fg:w="2"/><text x="18.2109%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.11%)</title><rect x="17.9609%" y="501" width="0.1057%" height="15" fill="rgb(241,198,18)" fg:x="340" fg:w="2"/><text x="18.2109%" y="511.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.05%)</title><rect x="18.0137%" y="485" width="0.0528%" height="15" fill="rgb(252,97,53)" fg:x="341" fg:w="1"/><text x="18.2637%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (4 samples, 0.21%)</title><rect x="17.9609%" y="645" width="0.2113%" height="15" fill="rgb(220,88,7)" fg:x="340" fg:w="4"/><text x="18.2109%" y="655.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (4 samples, 0.21%)</title><rect x="17.9609%" y="629" width="0.2113%" height="15" fill="rgb(213,176,14)" fg:x="340" fg:w="4"/><text x="18.2109%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (4 samples, 0.21%)</title><rect x="17.9609%" y="613" width="0.2113%" height="15" fill="rgb(246,73,7)" fg:x="340" fg:w="4"/><text x="18.2109%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (4 samples, 0.21%)</title><rect x="17.9609%" y="597" width="0.2113%" height="15" fill="rgb(245,64,36)" fg:x="340" fg:w="4"/><text x="18.2109%" y="607.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (4 samples, 0.21%)</title><rect x="17.9609%" y="581" width="0.2113%" height="15" fill="rgb(245,80,10)" fg:x="340" fg:w="4"/><text x="18.2109%" y="591.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (2 samples, 0.11%)</title><rect x="18.0666%" y="565" width="0.1057%" height="15" fill="rgb(232,107,50)" fg:x="342" fg:w="2"/><text x="18.3166%" y="575.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_string_fragment (1 samples, 0.05%)</title><rect x="18.1194%" y="549" width="0.0528%" height="15" fill="rgb(253,3,0)" fg:x="343" fg:w="1"/><text x="18.3694%" y="559.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="18.1194%" y="533" width="0.0528%" height="15" fill="rgb(212,99,53)" fg:x="343" fg:w="1"/><text x="18.3694%" y="543.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="18.1194%" y="517" width="0.0528%" height="15" fill="rgb(249,111,54)" fg:x="343" fg:w="1"/><text x="18.3694%" y="527.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="18.1194%" y="501" width="0.0528%" height="15" fill="rgb(249,55,30)" fg:x="343" fg:w="1"/><text x="18.3694%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="18.1194%" y="485" width="0.0528%" height="15" fill="rgb(237,47,42)" fg:x="343" fg:w="1"/><text x="18.3694%" y="495.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.05%)</title><rect x="18.1194%" y="469" width="0.0528%" height="15" fill="rgb(211,20,18)" fg:x="343" fg:w="1"/><text x="18.3694%" y="479.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::end_string (1 samples, 0.05%)</title><rect x="18.1722%" y="517" width="0.0528%" height="15" fill="rgb(231,203,46)" fg:x="344" fg:w="1"/><text x="18.4222%" y="527.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="18.1722%" y="501" width="0.0528%" height="15" fill="rgb(237,142,3)" fg:x="344" fg:w="1"/><text x="18.4222%" y="511.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="18.1722%" y="485" width="0.0528%" height="15" fill="rgb(241,107,1)" fg:x="344" fg:w="1"/><text x="18.4222%" y="495.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="18.1722%" y="469" width="0.0528%" height="15" fill="rgb(229,83,13)" fg:x="344" fg:w="1"/><text x="18.4222%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="18.1722%" y="453" width="0.0528%" height="15" fill="rgb(241,91,40)" fg:x="344" fg:w="1"/><text x="18.4222%" y="463.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.05%)</title><rect x="18.1722%" y="437" width="0.0528%" height="15" fill="rgb(225,3,45)" fg:x="344" fg:w="1"/><text x="18.4222%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.11%)</title><rect x="18.1722%" y="597" width="0.1057%" height="15" fill="rgb(244,223,14)" fg:x="344" fg:w="2"/><text x="18.4222%" y="607.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (2 samples, 0.11%)</title><rect x="18.1722%" y="581" width="0.1057%" height="15" fill="rgb(224,124,37)" fg:x="344" fg:w="2"/><text x="18.4222%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.11%)</title><rect x="18.1722%" y="565" width="0.1057%" height="15" fill="rgb(251,171,30)" fg:x="344" fg:w="2"/><text x="18.4222%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.11%)</title><rect x="18.1722%" y="549" width="0.1057%" height="15" fill="rgb(236,46,54)" fg:x="344" fg:w="2"/><text x="18.4222%" y="559.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (2 samples, 0.11%)</title><rect x="18.1722%" y="533" width="0.1057%" height="15" fill="rgb(245,213,5)" fg:x="344" fg:w="2"/><text x="18.4222%" y="543.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (1 samples, 0.05%)</title><rect x="18.2250%" y="517" width="0.0528%" height="15" fill="rgb(230,144,27)" fg:x="345" fg:w="1"/><text x="18.4750%" y="527.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_string_fragment (1 samples, 0.05%)</title><rect x="18.2250%" y="501" width="0.0528%" height="15" fill="rgb(220,86,6)" fg:x="345" fg:w="1"/><text x="18.4750%" y="511.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="18.2250%" y="485" width="0.0528%" height="15" fill="rgb(240,20,13)" fg:x="345" fg:w="1"/><text x="18.4750%" y="495.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="18.2250%" y="469" width="0.0528%" height="15" fill="rgb(217,89,34)" fg:x="345" fg:w="1"/><text x="18.4750%" y="479.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="18.2250%" y="453" width="0.0528%" height="15" fill="rgb(229,13,5)" fg:x="345" fg:w="1"/><text x="18.4750%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="18.2250%" y="437" width="0.0528%" height="15" fill="rgb(244,67,35)" fg:x="345" fg:w="1"/><text x="18.4750%" y="447.50"></text></g><g><title>maelstrom-txn`core::ptr::const_ptr::_&lt;impl *const T&gt;::sub_ptr::precondition_check (1 samples, 0.05%)</title><rect x="18.2250%" y="421" width="0.0528%" height="15" fill="rgb(221,40,2)" fg:x="345" fg:w="1"/><text x="18.4750%" y="431.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (3 samples, 0.16%)</title><rect x="18.1722%" y="613" width="0.1585%" height="15" fill="rgb(237,157,21)" fg:x="344" fg:w="3"/><text x="18.4222%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.05%)</title><rect x="18.2779%" y="597" width="0.0528%" height="15" fill="rgb(222,94,11)" fg:x="346" fg:w="1"/><text x="18.5279%" y="607.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for core::option::Option&lt;T&gt;&gt;::serialize (1 samples, 0.05%)</title><rect x="18.2779%" y="581" width="0.0528%" height="15" fill="rgb(249,113,6)" fg:x="346" fg:w="1"/><text x="18.5279%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_some (1 samples, 0.05%)</title><rect x="18.2779%" y="565" width="0.0528%" height="15" fill="rgb(238,137,36)" fg:x="346" fg:w="1"/><text x="18.5279%" y="575.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for u64&gt;::serialize (1 samples, 0.05%)</title><rect x="18.2779%" y="549" width="0.0528%" height="15" fill="rgb(210,102,26)" fg:x="346" fg:w="1"/><text x="18.5279%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (1 samples, 0.05%)</title><rect x="18.2779%" y="533" width="0.0528%" height="15" fill="rgb(218,30,30)" fg:x="346" fg:w="1"/><text x="18.5279%" y="543.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_u64 (1 samples, 0.05%)</title><rect x="18.2779%" y="517" width="0.0528%" height="15" fill="rgb(214,67,26)" fg:x="346" fg:w="1"/><text x="18.5279%" y="527.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="18.2779%" y="501" width="0.0528%" height="15" fill="rgb(251,9,53)" fg:x="346" fg:w="1"/><text x="18.5279%" y="511.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="18.2779%" y="485" width="0.0528%" height="15" fill="rgb(228,204,25)" fg:x="346" fg:w="1"/><text x="18.5279%" y="495.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="18.2779%" y="469" width="0.0528%" height="15" fill="rgb(207,153,8)" fg:x="346" fg:w="1"/><text x="18.5279%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="18.2779%" y="453" width="0.0528%" height="15" fill="rgb(242,9,16)" fg:x="346" fg:w="1"/><text x="18.5279%" y="463.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="18.2779%" y="437" width="0.0528%" height="15" fill="rgb(217,211,10)" fg:x="346" fg:w="1"/><text x="18.5279%" y="447.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.05%)</title><rect x="18.2779%" y="421" width="0.0528%" height="15" fill="rgb(219,228,52)" fg:x="346" fg:w="1"/><text x="18.5279%" y="431.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.05%)</title><rect x="18.3307%" y="517" width="0.0528%" height="15" fill="rgb(231,92,29)" fg:x="347" fg:w="1"/><text x="18.5807%" y="527.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_object_key (1 samples, 0.05%)</title><rect x="18.3307%" y="501" width="0.0528%" height="15" fill="rgb(232,8,23)" fg:x="347" fg:w="1"/><text x="18.5807%" y="511.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="18.3307%" y="485" width="0.0528%" height="15" fill="rgb(216,211,34)" fg:x="347" fg:w="1"/><text x="18.5807%" y="495.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="18.3307%" y="469" width="0.0528%" height="15" fill="rgb(236,151,0)" fg:x="347" fg:w="1"/><text x="18.5807%" y="479.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="18.3307%" y="453" width="0.0528%" height="15" fill="rgb(209,168,3)" fg:x="347" fg:w="1"/><text x="18.5807%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="18.3307%" y="437" width="0.0528%" height="15" fill="rgb(208,129,28)" fg:x="347" fg:w="1"/><text x="18.5807%" y="447.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.05%)</title><rect x="18.3307%" y="421" width="0.0528%" height="15" fill="rgb(229,78,22)" fg:x="347" fg:w="1"/><text x="18.5807%" y="431.50"></text></g><g><title>maelstrom-txn`serde::ser::Serializer::collect_seq (1 samples, 0.05%)</title><rect x="18.3835%" y="485" width="0.0528%" height="15" fill="rgb(228,187,13)" fg:x="348" fg:w="1"/><text x="18.6335%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.05%)</title><rect x="18.4363%" y="453" width="0.0528%" height="15" fill="rgb(240,119,24)" fg:x="349" fg:w="1"/><text x="18.6863%" y="463.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.05%)</title><rect x="18.4363%" y="437" width="0.0528%" height="15" fill="rgb(209,194,42)" fg:x="349" fg:w="1"/><text x="18.6863%" y="447.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.05%)</title><rect x="18.4892%" y="373" width="0.0528%" height="15" fill="rgb(247,200,46)" fg:x="350" fg:w="1"/><text x="18.7392%" y="383.50"></text></g><g><title>maelstrom-txn`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.05%)</title><rect x="18.4892%" y="357" width="0.0528%" height="15" fill="rgb(218,76,16)" fg:x="350" fg:w="1"/><text x="18.7392%" y="367.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::ser::FlatMapSerializeStruct&lt;M&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.26%)</title><rect x="18.3307%" y="549" width="0.2641%" height="15" fill="rgb(225,21,48)" fg:x="347" fg:w="5"/><text x="18.5807%" y="559.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (5 samples, 0.26%)</title><rect x="18.3307%" y="533" width="0.2641%" height="15" fill="rgb(239,223,50)" fg:x="347" fg:w="5"/><text x="18.5807%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.21%)</title><rect x="18.3835%" y="517" width="0.2113%" height="15" fill="rgb(244,45,21)" fg:x="348" fg:w="4"/><text x="18.6335%" y="527.50"></text></g><g><title>maelstrom-txn`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.21%)</title><rect x="18.3835%" y="501" width="0.2113%" height="15" fill="rgb(232,33,43)" fg:x="348" fg:w="4"/><text x="18.6335%" y="511.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (3 samples, 0.16%)</title><rect x="18.4363%" y="485" width="0.1585%" height="15" fill="rgb(209,8,3)" fg:x="349" fg:w="3"/><text x="18.6863%" y="495.50"></text></g><g><title>maelstrom-txn`serde::ser::Serializer::collect_seq (3 samples, 0.16%)</title><rect x="18.4363%" y="469" width="0.1585%" height="15" fill="rgb(214,25,53)" fg:x="349" fg:w="3"/><text x="18.6863%" y="479.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.11%)</title><rect x="18.4892%" y="453" width="0.1057%" height="15" fill="rgb(254,186,54)" fg:x="350" fg:w="2"/><text x="18.7392%" y="463.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.11%)</title><rect x="18.4892%" y="437" width="0.1057%" height="15" fill="rgb(208,174,49)" fg:x="350" fg:w="2"/><text x="18.7392%" y="447.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (2 samples, 0.11%)</title><rect x="18.4892%" y="421" width="0.1057%" height="15" fill="rgb(233,191,51)" fg:x="350" fg:w="2"/><text x="18.7392%" y="431.50"></text></g><g><title>maelstrom-txn`serde::ser::Serializer::collect_seq::_{{closure}} (2 samples, 0.11%)</title><rect x="18.4892%" y="405" width="0.1057%" height="15" fill="rgb(222,134,10)" fg:x="350" fg:w="2"/><text x="18.7392%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (2 samples, 0.11%)</title><rect x="18.4892%" y="389" width="0.1057%" height="15" fill="rgb(230,226,20)" fg:x="350" fg:w="2"/><text x="18.7392%" y="399.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_array_value (1 samples, 0.05%)</title><rect x="18.5420%" y="373" width="0.0528%" height="15" fill="rgb(251,111,25)" fg:x="351" fg:w="1"/><text x="18.7920%" y="383.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="18.5420%" y="357" width="0.0528%" height="15" fill="rgb(224,40,46)" fg:x="351" fg:w="1"/><text x="18.7920%" y="367.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="18.5420%" y="341" width="0.0528%" height="15" fill="rgb(236,108,47)" fg:x="351" fg:w="1"/><text x="18.7920%" y="351.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="18.5420%" y="325" width="0.0528%" height="15" fill="rgb(234,93,0)" fg:x="351" fg:w="1"/><text x="18.7920%" y="335.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="18.5420%" y="309" width="0.0528%" height="15" fill="rgb(224,213,32)" fg:x="351" fg:w="1"/><text x="18.7920%" y="319.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.05%)</title><rect x="18.5420%" y="293" width="0.0528%" height="15" fill="rgb(251,11,48)" fg:x="351" fg:w="1"/><text x="18.7920%" y="303.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::MessageBody&gt;::serialize (9 samples, 0.48%)</title><rect x="18.1722%" y="629" width="0.4754%" height="15" fill="rgb(236,173,5)" fg:x="344" fg:w="9"/><text x="18.4222%" y="639.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.32%)</title><rect x="18.3307%" y="613" width="0.3170%" height="15" fill="rgb(230,95,12)" fg:x="347" fg:w="6"/><text x="18.5807%" y="623.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::MessageExtra&gt;::serialize (6 samples, 0.32%)</title><rect x="18.3307%" y="597" width="0.3170%" height="15" fill="rgb(232,209,1)" fg:x="347" fg:w="6"/><text x="18.5807%" y="607.50"></text></g><g><title>maelstrom-txn`serde::__private::ser::serialize_tagged_newtype (6 samples, 0.32%)</title><rect x="18.3307%" y="581" width="0.3170%" height="15" fill="rgb(232,6,1)" fg:x="347" fg:w="6"/><text x="18.5807%" y="591.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::KvWriteExtra&gt;::serialize (6 samples, 0.32%)</title><rect x="18.3307%" y="565" width="0.3170%" height="15" fill="rgb(210,224,50)" fg:x="347" fg:w="6"/><text x="18.5807%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::ser::TaggedSerializer&lt;S&gt; as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.05%)</title><rect x="18.5948%" y="549" width="0.0528%" height="15" fill="rgb(228,127,35)" fg:x="352" fg:w="1"/><text x="18.8448%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::ser::FlatMapSerializeStruct&lt;M&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.05%)</title><rect x="18.5948%" y="533" width="0.0528%" height="15" fill="rgb(245,102,45)" fg:x="352" fg:w="1"/><text x="18.8448%" y="543.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (1 samples, 0.05%)</title><rect x="18.5948%" y="517" width="0.0528%" height="15" fill="rgb(214,1,49)" fg:x="352" fg:w="1"/><text x="18.8448%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.05%)</title><rect x="18.5948%" y="501" width="0.0528%" height="15" fill="rgb(226,163,40)" fg:x="352" fg:w="1"/><text x="18.8448%" y="511.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.05%)</title><rect x="18.5948%" y="485" width="0.0528%" height="15" fill="rgb(239,212,28)" fg:x="352" fg:w="1"/><text x="18.8448%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.05%)</title><rect x="18.5948%" y="469" width="0.0528%" height="15" fill="rgb(220,20,13)" fg:x="352" fg:w="1"/><text x="18.8448%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.05%)</title><rect x="18.5948%" y="453" width="0.0528%" height="15" fill="rgb(210,164,35)" fg:x="352" fg:w="1"/><text x="18.8448%" y="463.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (1 samples, 0.05%)</title><rect x="18.5948%" y="437" width="0.0528%" height="15" fill="rgb(248,109,41)" fg:x="352" fg:w="1"/><text x="18.8448%" y="447.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (1 samples, 0.05%)</title><rect x="18.5948%" y="421" width="0.0528%" height="15" fill="rgb(238,23,50)" fg:x="352" fg:w="1"/><text x="18.8448%" y="431.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.05%)</title><rect x="18.6476%" y="485" width="0.0528%" height="15" fill="rgb(211,48,49)" fg:x="353" fg:w="1"/><text x="18.8976%" y="495.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.11%)</title><rect x="18.6476%" y="501" width="0.1057%" height="15" fill="rgb(223,36,21)" fg:x="353" fg:w="2"/><text x="18.8976%" y="511.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.05%)</title><rect x="18.7005%" y="485" width="0.0528%" height="15" fill="rgb(207,123,46)" fg:x="354" fg:w="1"/><text x="18.9505%" y="495.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::end_string (3 samples, 0.16%)</title><rect x="18.6476%" y="581" width="0.1585%" height="15" fill="rgb(240,218,32)" fg:x="353" fg:w="3"/><text x="18.8976%" y="591.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (3 samples, 0.16%)</title><rect x="18.6476%" y="565" width="0.1585%" height="15" fill="rgb(252,5,43)" fg:x="353" fg:w="3"/><text x="18.8976%" y="575.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (3 samples, 0.16%)</title><rect x="18.6476%" y="549" width="0.1585%" height="15" fill="rgb(252,84,19)" fg:x="353" fg:w="3"/><text x="18.8976%" y="559.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.16%)</title><rect x="18.6476%" y="533" width="0.1585%" height="15" fill="rgb(243,152,39)" fg:x="353" fg:w="3"/><text x="18.8976%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.16%)</title><rect x="18.6476%" y="517" width="0.1585%" height="15" fill="rgb(234,160,15)" fg:x="353" fg:w="3"/><text x="18.8976%" y="527.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.05%)</title><rect x="18.7533%" y="501" width="0.0528%" height="15" fill="rgb(237,34,20)" fg:x="355" fg:w="1"/><text x="19.0033%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="18.8061%" y="565" width="0.0528%" height="15" fill="rgb(229,97,13)" fg:x="356" fg:w="1"/><text x="19.0561%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="18.8061%" y="549" width="0.0528%" height="15" fill="rgb(234,71,50)" fg:x="356" fg:w="1"/><text x="19.0561%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 0.74%)</title><rect x="18.1722%" y="645" width="0.7396%" height="15" fill="rgb(253,155,4)" fg:x="344" fg:w="14"/><text x="18.4222%" y="655.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (5 samples, 0.26%)</title><rect x="18.6476%" y="629" width="0.2641%" height="15" fill="rgb(222,185,37)" fg:x="353" fg:w="5"/><text x="18.8976%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (5 samples, 0.26%)</title><rect x="18.6476%" y="613" width="0.2641%" height="15" fill="rgb(251,177,13)" fg:x="353" fg:w="5"/><text x="18.8976%" y="623.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (5 samples, 0.26%)</title><rect x="18.6476%" y="597" width="0.2641%" height="15" fill="rgb(250,179,40)" fg:x="353" fg:w="5"/><text x="18.8976%" y="607.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (2 samples, 0.11%)</title><rect x="18.8061%" y="581" width="0.1057%" height="15" fill="rgb(242,44,2)" fg:x="356" fg:w="2"/><text x="19.0561%" y="591.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_string_fragment (1 samples, 0.05%)</title><rect x="18.8590%" y="565" width="0.0528%" height="15" fill="rgb(216,177,13)" fg:x="357" fg:w="1"/><text x="19.1090%" y="575.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::MessageBody&gt;::serialize (1 samples, 0.05%)</title><rect x="18.9118%" y="645" width="0.0528%" height="15" fill="rgb(216,106,43)" fg:x="358" fg:w="1"/><text x="19.1618%" y="655.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_string (21 samples, 1.11%)</title><rect x="17.9081%" y="741" width="1.1094%" height="15" fill="rgb(216,183,2)" fg:x="339" fg:w="21"/><text x="18.1581%" y="751.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_vec (21 samples, 1.11%)</title><rect x="17.9081%" y="725" width="1.1094%" height="15" fill="rgb(249,75,3)" fg:x="339" fg:w="21"/><text x="18.1581%" y="735.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_writer (21 samples, 1.11%)</title><rect x="17.9081%" y="709" width="1.1094%" height="15" fill="rgb(219,67,39)" fg:x="339" fg:w="21"/><text x="18.1581%" y="719.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::Message&gt;::serialize (20 samples, 1.06%)</title><rect x="17.9609%" y="693" width="1.0565%" height="15" fill="rgb(253,228,2)" fg:x="340" fg:w="20"/><text x="18.2109%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 1.06%)</title><rect x="17.9609%" y="677" width="1.0565%" height="15" fill="rgb(235,138,27)" fg:x="340" fg:w="20"/><text x="18.2109%" y="687.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (20 samples, 1.06%)</title><rect x="17.9609%" y="661" width="1.0565%" height="15" fill="rgb(236,97,51)" fg:x="340" fg:w="20"/><text x="18.2109%" y="671.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_object_key (1 samples, 0.05%)</title><rect x="18.9646%" y="645" width="0.0528%" height="15" fill="rgb(240,80,30)" fg:x="359" fg:w="1"/><text x="19.2146%" y="655.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.05%)</title><rect x="19.0174%" y="709" width="0.0528%" height="15" fill="rgb(230,178,19)" fg:x="360" fg:w="1"/><text x="19.2674%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.05%)</title><rect x="19.0703%" y="693" width="0.0528%" height="15" fill="rgb(210,190,27)" fg:x="361" fg:w="1"/><text x="19.3203%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="19.0703%" y="677" width="0.0528%" height="15" fill="rgb(222,107,31)" fg:x="361" fg:w="1"/><text x="19.3203%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.05%)</title><rect x="19.0703%" y="661" width="0.0528%" height="15" fill="rgb(216,127,34)" fg:x="361" fg:w="1"/><text x="19.3203%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`write (6 samples, 0.32%)</title><rect x="19.1231%" y="677" width="0.3170%" height="15" fill="rgb(234,116,52)" fg:x="362" fg:w="6"/><text x="19.3731%" y="687.50"></text></g><g><title>maelstrom-txn`std::io::stdio::_eprint (9 samples, 0.48%)</title><rect x="19.0174%" y="741" width="0.4754%" height="15" fill="rgb(222,124,15)" fg:x="360" fg:w="9"/><text x="19.2674%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (9 samples, 0.48%)</title><rect x="19.0174%" y="725" width="0.4754%" height="15" fill="rgb(231,179,28)" fg:x="360" fg:w="9"/><text x="19.2674%" y="735.50"></text></g><g><title>maelstrom-txn`core::fmt::write (8 samples, 0.42%)</title><rect x="19.0703%" y="709" width="0.4226%" height="15" fill="rgb(226,93,45)" fg:x="361" fg:w="8"/><text x="19.3203%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (7 samples, 0.37%)</title><rect x="19.1231%" y="693" width="0.3698%" height="15" fill="rgb(215,8,51)" fg:x="362" fg:w="7"/><text x="19.3731%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (1 samples, 0.05%)</title><rect x="19.4400%" y="677" width="0.0528%" height="15" fill="rgb(223,106,5)" fg:x="368" fg:w="1"/><text x="19.6900%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.05%)</title><rect x="19.4929%" y="693" width="0.0528%" height="15" fill="rgb(250,191,5)" fg:x="369" fg:w="1"/><text x="19.7429%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="19.4929%" y="677" width="0.0528%" height="15" fill="rgb(242,132,44)" fg:x="369" fg:w="1"/><text x="19.7429%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.05%)</title><rect x="19.4929%" y="661" width="0.0528%" height="15" fill="rgb(251,152,29)" fg:x="369" fg:w="1"/><text x="19.7429%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="19.4929%" y="645" width="0.0528%" height="15" fill="rgb(218,179,5)" fg:x="369" fg:w="1"/><text x="19.7429%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.05%)</title><rect x="19.5457%" y="677" width="0.0528%" height="15" fill="rgb(227,67,19)" fg:x="370" fg:w="1"/><text x="19.7957%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.05%)</title><rect x="19.5457%" y="661" width="0.0528%" height="15" fill="rgb(233,119,31)" fg:x="370" fg:w="1"/><text x="19.7957%" y="671.50"></text></g><g><title>maelstrom-txn`maelstrom_node::node::Node::sync_rpc (55 samples, 2.91%)</title><rect x="16.7459%" y="757" width="2.9054%" height="15" fill="rgb(241,120,22)" fg:x="317" fg:w="55"/><text x="16.9959%" y="767.50">ma..</text></g><g><title>maelstrom-txn`std::io::stdio::_print (3 samples, 0.16%)</title><rect x="19.4929%" y="741" width="0.1585%" height="15" fill="rgb(224,102,30)" fg:x="369" fg:w="3"/><text x="19.7429%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (3 samples, 0.16%)</title><rect x="19.4929%" y="725" width="0.1585%" height="15" fill="rgb(210,164,37)" fg:x="369" fg:w="3"/><text x="19.7429%" y="735.50"></text></g><g><title>maelstrom-txn`core::fmt::write (3 samples, 0.16%)</title><rect x="19.4929%" y="709" width="0.1585%" height="15" fill="rgb(226,191,16)" fg:x="369" fg:w="3"/><text x="19.7429%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.11%)</title><rect x="19.5457%" y="693" width="0.1057%" height="15" fill="rgb(214,40,45)" fg:x="370" fg:w="2"/><text x="19.7957%" y="703.50"></text></g><g><title>maelstrom-txn`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.05%)</title><rect x="19.5985%" y="677" width="0.0528%" height="15" fill="rgb(244,29,26)" fg:x="371" fg:w="1"/><text x="19.8485%" y="687.50"></text></g><g><title>maelstrom-txn`serde::ser::Serializer::collect_seq (1 samples, 0.05%)</title><rect x="19.6513%" y="725" width="0.0528%" height="15" fill="rgb(216,16,5)" fg:x="372" fg:w="1"/><text x="19.9013%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (359 samples, 18.96%)</title><rect x="0.7924%" y="965" width="18.9646%" height="15" fill="rgb(249,76,35)" fg:x="15" fg:w="359"/><text x="1.0424%" y="975.50">maelstrom-txn`&lt;std::collection..</text></g><g><title>maelstrom-txn`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (359 samples, 18.96%)</title><rect x="0.7924%" y="949" width="18.9646%" height="15" fill="rgb(207,11,44)" fg:x="15" fg:w="359"/><text x="1.0424%" y="959.50">maelstrom-txn`&lt;hashbrown::map:..</text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::for_each (359 samples, 18.96%)</title><rect x="0.7924%" y="933" width="18.9646%" height="15" fill="rgb(228,190,49)" fg:x="15" fg:w="359"/><text x="1.0424%" y="943.50">maelstrom-txn`core::iter::trai..</text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (359 samples, 18.96%)</title><rect x="0.7924%" y="917" width="18.9646%" height="15" fill="rgb(214,173,12)" fg:x="15" fg:w="359"/><text x="1.0424%" y="927.50">maelstrom-txn`&lt;core::iter::ada..</text></g><g><title>maelstrom-txn`&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (61 samples, 3.22%)</title><rect x="16.5346%" y="901" width="3.2224%" height="15" fill="rgb(218,26,35)" fg:x="313" fg:w="61"/><text x="16.7846%" y="911.50">mae..</text></g><g><title>maelstrom-txn`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (61 samples, 3.22%)</title><rect x="16.5346%" y="885" width="3.2224%" height="15" fill="rgb(220,200,19)" fg:x="313" fg:w="61"/><text x="16.7846%" y="895.50">mae..</text></g><g><title>maelstrom-txn`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (61 samples, 3.22%)</title><rect x="16.5346%" y="869" width="3.2224%" height="15" fill="rgb(239,95,49)" fg:x="313" fg:w="61"/><text x="16.7846%" y="879.50">mae..</text></g><g><title>maelstrom-txn`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (61 samples, 3.22%)</title><rect x="16.5346%" y="853" width="3.2224%" height="15" fill="rgb(235,85,53)" fg:x="313" fg:w="61"/><text x="16.7846%" y="863.50">mae..</text></g><g><title>maelstrom-txn`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (61 samples, 3.22%)</title><rect x="16.5346%" y="837" width="3.2224%" height="15" fill="rgb(233,133,31)" fg:x="313" fg:w="61"/><text x="16.7846%" y="847.50">mae..</text></g><g><title>maelstrom-txn`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (61 samples, 3.22%)</title><rect x="16.5346%" y="821" width="3.2224%" height="15" fill="rgb(218,25,20)" fg:x="313" fg:w="61"/><text x="16.7846%" y="831.50">mae..</text></g><g><title>maelstrom-txn`core::iter::adapters::map::map_fold::_{{closure}} (61 samples, 3.22%)</title><rect x="16.5346%" y="805" width="3.2224%" height="15" fill="rgb(252,210,38)" fg:x="313" fg:w="61"/><text x="16.7846%" y="815.50">mae..</text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Transactor::transact::_{{closure}} (57 samples, 3.01%)</title><rect x="16.7459%" y="789" width="3.0111%" height="15" fill="rgb(242,134,21)" fg:x="317" fg:w="57"/><text x="16.9959%" y="799.50">mae..</text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Transactor::save_chunk (57 samples, 3.01%)</title><rect x="16.7459%" y="773" width="3.0111%" height="15" fill="rgb(213,28,48)" fg:x="317" fg:w="57"/><text x="16.9959%" y="783.50">mae..</text></g><g><title>maelstrom-txn`serde_json::value::to_value (2 samples, 0.11%)</title><rect x="19.6513%" y="757" width="0.1057%" height="15" fill="rgb(250,196,2)" fg:x="372" fg:w="2"/><text x="19.9013%" y="767.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.11%)</title><rect x="19.6513%" y="741" width="0.1057%" height="15" fill="rgb(227,5,17)" fg:x="372" fg:w="2"/><text x="19.9013%" y="751.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for [T]&gt;::serialize (1 samples, 0.05%)</title><rect x="19.7042%" y="725" width="0.0528%" height="15" fill="rgb(221,226,24)" fg:x="373" fg:w="1"/><text x="19.9542%" y="735.50"></text></g><g><title>maelstrom-txn`serde::ser::Serializer::collect_seq (1 samples, 0.05%)</title><rect x="19.7042%" y="709" width="0.0528%" height="15" fill="rgb(211,5,48)" fg:x="373" fg:w="1"/><text x="19.9542%" y="719.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.05%)</title><rect x="19.7042%" y="693" width="0.0528%" height="15" fill="rgb(219,150,6)" fg:x="373" fg:w="1"/><text x="19.9542%" y="703.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.05%)</title><rect x="19.7042%" y="677" width="0.0528%" height="15" fill="rgb(251,46,16)" fg:x="373" fg:w="1"/><text x="19.9542%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.05%)</title><rect x="19.8098%" y="917" width="0.0528%" height="15" fill="rgb(220,204,40)" fg:x="375" fg:w="1"/><text x="20.0598%" y="927.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.05%)</title><rect x="19.8098%" y="901" width="0.0528%" height="15" fill="rgb(211,85,2)" fg:x="375" fg:w="1"/><text x="20.0598%" y="911.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.05%)</title><rect x="19.8098%" y="885" width="0.0528%" height="15" fill="rgb(229,17,7)" fg:x="375" fg:w="1"/><text x="20.0598%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.05%)</title><rect x="19.8098%" y="869" width="0.0528%" height="15" fill="rgb(239,72,28)" fg:x="375" fg:w="1"/><text x="20.0598%" y="879.50"></text></g><g><title>maelstrom-txn`core::hash::BuildHasher::hash_one (1 samples, 0.05%)</title><rect x="19.8627%" y="741" width="0.0528%" height="15" fill="rgb(230,47,54)" fg:x="376" fg:w="1"/><text x="20.1127%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.05%)</title><rect x="19.8627%" y="725" width="0.0528%" height="15" fill="rgb(214,50,8)" fg:x="376" fg:w="1"/><text x="20.1127%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="19.8627%" y="709" width="0.0528%" height="15" fill="rgb(216,198,43)" fg:x="376" fg:w="1"/><text x="20.1127%" y="719.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.05%)</title><rect x="19.9155%" y="725" width="0.0528%" height="15" fill="rgb(234,20,35)" fg:x="377" fg:w="1"/><text x="20.1655%" y="735.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.05%)</title><rect x="19.9155%" y="709" width="0.0528%" height="15" fill="rgb(254,45,19)" fg:x="377" fg:w="1"/><text x="20.1655%" y="719.50"></text></g><g><title>maelstrom-txn`core::cmp::max_by (1 samples, 0.05%)</title><rect x="19.9155%" y="693" width="0.0528%" height="15" fill="rgb(219,14,44)" fg:x="377" fg:w="1"/><text x="20.1655%" y="703.50"></text></g><g><title>maelstrom-txn`core::iter::adapters::map::map_fold::_{{closure}} (3 samples, 0.16%)</title><rect x="19.8627%" y="821" width="0.1585%" height="15" fill="rgb(217,220,26)" fg:x="376" fg:w="3"/><text x="20.1127%" y="831.50"></text></g><g><title>maelstrom-txn`core::iter::adapters::map::map_fold::_{{closure}} (3 samples, 0.16%)</title><rect x="19.8627%" y="805" width="0.1585%" height="15" fill="rgb(213,158,28)" fg:x="376" fg:w="3"/><text x="20.1127%" y="815.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (3 samples, 0.16%)</title><rect x="19.8627%" y="789" width="0.1585%" height="15" fill="rgb(252,51,52)" fg:x="376" fg:w="3"/><text x="20.1127%" y="799.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (3 samples, 0.16%)</title><rect x="19.8627%" y="773" width="0.1585%" height="15" fill="rgb(246,89,16)" fg:x="376" fg:w="3"/><text x="20.1127%" y="783.50"></text></g><g><title>maelstrom-txn`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.16%)</title><rect x="19.8627%" y="757" width="0.1585%" height="15" fill="rgb(216,158,49)" fg:x="376" fg:w="3"/><text x="20.1127%" y="767.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (2 samples, 0.11%)</title><rect x="19.9155%" y="741" width="0.1057%" height="15" fill="rgb(236,107,19)" fg:x="377" fg:w="2"/><text x="20.1655%" y="751.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::find_insert_slot_in_group (1 samples, 0.05%)</title><rect x="19.9683%" y="725" width="0.0528%" height="15" fill="rgb(228,185,30)" fg:x="378" fg:w="1"/><text x="20.2183%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.21%)</title><rect x="19.8627%" y="869" width="0.2113%" height="15" fill="rgb(246,134,8)" fg:x="376" fg:w="4"/><text x="20.1127%" y="879.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.21%)</title><rect x="19.8627%" y="853" width="0.2113%" height="15" fill="rgb(214,143,50)" fg:x="376" fg:w="4"/><text x="20.1127%" y="863.50"></text></g><g><title>maelstrom-txn`core::iter::adapters::filter::filter_fold::_{{closure}} (4 samples, 0.21%)</title><rect x="19.8627%" y="837" width="0.2113%" height="15" fill="rgb(228,75,8)" fg:x="376" fg:w="4"/><text x="20.1127%" y="847.50"></text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Transactor::transact::_{{closure}} (1 samples, 0.05%)</title><rect x="20.0211%" y="821" width="0.0528%" height="15" fill="rgb(207,175,4)" fg:x="379" fg:w="1"/><text x="20.2711%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::cmp::PartialEq&lt;&amp;str&gt;&gt;::eq (1 samples, 0.05%)</title><rect x="20.0211%" y="805" width="0.0528%" height="15" fill="rgb(205,108,24)" fg:x="379" fg:w="1"/><text x="20.2711%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (1 samples, 0.05%)</title><rect x="20.0211%" y="789" width="0.0528%" height="15" fill="rgb(244,120,49)" fg:x="379" fg:w="1"/><text x="20.2711%" y="799.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::for_each (5 samples, 0.26%)</title><rect x="19.8627%" y="917" width="0.2641%" height="15" fill="rgb(223,47,38)" fg:x="376" fg:w="5"/><text x="20.1127%" y="927.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.26%)</title><rect x="19.8627%" y="901" width="0.2641%" height="15" fill="rgb(229,179,11)" fg:x="376" fg:w="5"/><text x="20.1127%" y="911.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.26%)</title><rect x="19.8627%" y="885" width="0.2641%" height="15" fill="rgb(231,122,1)" fg:x="376" fg:w="5"/><text x="20.1127%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.05%)</title><rect x="20.0740%" y="869" width="0.0528%" height="15" fill="rgb(245,119,9)" fg:x="380" fg:w="1"/><text x="20.3240%" y="879.50"></text></g><g><title>maelstrom-txn`core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.05%)</title><rect x="20.0740%" y="853" width="0.0528%" height="15" fill="rgb(241,163,25)" fg:x="380" fg:w="1"/><text x="20.3240%" y="863.50"></text></g><g><title>maelstrom-txn`core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.05%)</title><rect x="20.0740%" y="837" width="0.0528%" height="15" fill="rgb(217,214,3)" fg:x="380" fg:w="1"/><text x="20.3240%" y="847.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.05%)</title><rect x="20.0740%" y="821" width="0.0528%" height="15" fill="rgb(240,86,28)" fg:x="380" fg:w="1"/><text x="20.3240%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (1 samples, 0.05%)</title><rect x="20.0740%" y="805" width="0.0528%" height="15" fill="rgb(215,47,9)" fg:x="380" fg:w="1"/><text x="20.3240%" y="815.50"></text></g><g><title>maelstrom-txn`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.05%)</title><rect x="20.0740%" y="789" width="0.0528%" height="15" fill="rgb(252,25,45)" fg:x="380" fg:w="1"/><text x="20.3240%" y="799.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.05%)</title><rect x="20.0740%" y="773" width="0.0528%" height="15" fill="rgb(251,164,9)" fg:x="380" fg:w="1"/><text x="20.3240%" y="783.50"></text></g><g><title>maelstrom-txn`core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.05%)</title><rect x="20.0740%" y="757" width="0.0528%" height="15" fill="rgb(233,194,0)" fg:x="380" fg:w="1"/><text x="20.3240%" y="767.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::collect (371 samples, 19.60%)</title><rect x="0.5811%" y="981" width="19.5985%" height="15" fill="rgb(249,111,24)" fg:x="11" fg:w="371"/><text x="0.8311%" y="991.50">maelstrom-txn`core::iter::trait..</text></g><g><title>maelstrom-txn`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.42%)</title><rect x="19.7570%" y="965" width="0.4226%" height="15" fill="rgb(250,223,3)" fg:x="374" fg:w="8"/><text x="20.0070%" y="975.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (7 samples, 0.37%)</title><rect x="19.8098%" y="949" width="0.3698%" height="15" fill="rgb(236,178,37)" fg:x="375" fg:w="7"/><text x="20.0598%" y="959.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (7 samples, 0.37%)</title><rect x="19.8098%" y="933" width="0.3698%" height="15" fill="rgb(241,158,50)" fg:x="375" fg:w="7"/><text x="20.0598%" y="943.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.05%)</title><rect x="20.1268%" y="917" width="0.0528%" height="15" fill="rgb(213,121,41)" fg:x="381" fg:w="1"/><text x="20.3768%" y="927.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.05%)</title><rect x="20.1268%" y="901" width="0.0528%" height="15" fill="rgb(240,92,3)" fg:x="381" fg:w="1"/><text x="20.3768%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="20.1268%" y="885" width="0.0528%" height="15" fill="rgb(205,123,3)" fg:x="381" fg:w="1"/><text x="20.3768%" y="895.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;core::cell::RefCell&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,std::collections::hash::map::HashMap&lt;usize,alloc::string::String&gt;&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="20.1796%" y="965" width="0.0528%" height="15" fill="rgb(205,97,47)" fg:x="382" fg:w="1"/><text x="20.4296%" y="975.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,std::collections::hash::map::HashMap&lt;usize,alloc::string::String&gt;&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="20.1796%" y="949" width="0.0528%" height="15" fill="rgb(247,152,14)" fg:x="382" fg:w="1"/><text x="20.4296%" y="959.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,std::collections::hash::map::HashMap&lt;usize,alloc::string::String&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="20.1796%" y="933" width="0.0528%" height="15" fill="rgb(248,195,53)" fg:x="382" fg:w="1"/><text x="20.4296%" y="943.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,std::collections::hash::map::HashMap&lt;usize,alloc::string::String&gt;,std::hash::random::RandomState&gt;&gt; (1 samples, 0.05%)</title><rect x="20.1796%" y="917" width="0.0528%" height="15" fill="rgb(226,201,16)" fg:x="382" fg:w="1"/><text x="20.4296%" y="927.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,std::collections::hash::map::HashMap&lt;usize,alloc::string::String&gt;)&gt;&gt; (1 samples, 0.05%)</title><rect x="20.1796%" y="901" width="0.0528%" height="15" fill="rgb(205,98,0)" fg:x="382" fg:w="1"/><text x="20.4296%" y="911.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="20.1796%" y="885" width="0.0528%" height="15" fill="rgb(214,191,48)" fg:x="382" fg:w="1"/><text x="20.4296%" y="895.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.05%)</title><rect x="20.1796%" y="869" width="0.0528%" height="15" fill="rgb(237,112,39)" fg:x="382" fg:w="1"/><text x="20.4296%" y="879.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::drop_elements (1 samples, 0.05%)</title><rect x="20.1796%" y="853" width="0.0528%" height="15" fill="rgb(247,203,27)" fg:x="382" fg:w="1"/><text x="20.4296%" y="863.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;(alloc::string::String,std::collections::hash::map::HashMap&lt;usize,alloc::string::String&gt;)&gt; (1 samples, 0.05%)</title><rect x="20.1796%" y="837" width="0.0528%" height="15" fill="rgb(235,124,28)" fg:x="382" fg:w="1"/><text x="20.4296%" y="847.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,alloc::string::String&gt;&gt; (1 samples, 0.05%)</title><rect x="20.1796%" y="821" width="0.0528%" height="15" fill="rgb(208,207,46)" fg:x="382" fg:w="1"/><text x="20.4296%" y="831.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;usize,alloc::string::String,std::hash::random::RandomState&gt;&gt; (1 samples, 0.05%)</title><rect x="20.1796%" y="805" width="0.0528%" height="15" fill="rgb(234,176,4)" fg:x="382" fg:w="1"/><text x="20.4296%" y="815.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(usize,alloc::string::String)&gt;&gt; (1 samples, 0.05%)</title><rect x="20.1796%" y="789" width="0.0528%" height="15" fill="rgb(230,133,28)" fg:x="382" fg:w="1"/><text x="20.4296%" y="799.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="20.1796%" y="773" width="0.0528%" height="15" fill="rgb(211,137,40)" fg:x="382" fg:w="1"/><text x="20.4296%" y="783.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.05%)</title><rect x="20.1796%" y="757" width="0.0528%" height="15" fill="rgb(254,35,13)" fg:x="382" fg:w="1"/><text x="20.4296%" y="767.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::drop_elements (1 samples, 0.05%)</title><rect x="20.1796%" y="741" width="0.0528%" height="15" fill="rgb(225,49,51)" fg:x="382" fg:w="1"/><text x="20.4296%" y="751.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.05%)</title><rect x="20.1796%" y="725" width="0.0528%" height="15" fill="rgb(251,10,15)" fg:x="382" fg:w="1"/><text x="20.4296%" y="735.50"></text></g><g><title>maelstrom-txn`core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.05%)</title><rect x="20.1796%" y="709" width="0.0528%" height="15" fill="rgb(228,207,15)" fg:x="382" fg:w="1"/><text x="20.4296%" y="719.50"></text></g><g><title>maelstrom-txn`core::core_arch::x86::m128iExt::as_i8x16 (1 samples, 0.05%)</title><rect x="20.1796%" y="693" width="0.0528%" height="15" fill="rgb(241,99,19)" fg:x="382" fg:w="1"/><text x="20.4296%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.16%)</title><rect x="20.2324%" y="773" width="0.1585%" height="15" fill="rgb(207,104,49)" fg:x="383" fg:w="3"/><text x="20.4824%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.11%)</title><rect x="20.2853%" y="757" width="0.1057%" height="15" fill="rgb(234,99,18)" fg:x="384" fg:w="2"/><text x="20.5353%" y="767.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;(usize,alloc::string::String)&gt; (4 samples, 0.21%)</title><rect x="20.2324%" y="869" width="0.2113%" height="15" fill="rgb(213,191,49)" fg:x="383" fg:w="4"/><text x="20.4824%" y="879.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.21%)</title><rect x="20.2324%" y="853" width="0.2113%" height="15" fill="rgb(210,226,19)" fg:x="383" fg:w="4"/><text x="20.4824%" y="863.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.21%)</title><rect x="20.2324%" y="837" width="0.2113%" height="15" fill="rgb(229,97,18)" fg:x="383" fg:w="4"/><text x="20.4824%" y="847.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.21%)</title><rect x="20.2324%" y="821" width="0.2113%" height="15" fill="rgb(211,167,15)" fg:x="383" fg:w="4"/><text x="20.4824%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.21%)</title><rect x="20.2324%" y="805" width="0.2113%" height="15" fill="rgb(210,169,34)" fg:x="383" fg:w="4"/><text x="20.4824%" y="815.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4 samples, 0.21%)</title><rect x="20.2324%" y="789" width="0.2113%" height="15" fill="rgb(241,121,31)" fg:x="383" fg:w="4"/><text x="20.4824%" y="799.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1 samples, 0.05%)</title><rect x="20.3909%" y="773" width="0.0528%" height="15" fill="rgb(232,40,11)" fg:x="386" fg:w="1"/><text x="20.6409%" y="783.50"></text></g><g><title>maelstrom-txn`core::alloc::layout::Layout::from_size_align_unchecked::precondition_check (1 samples, 0.05%)</title><rect x="20.3909%" y="757" width="0.0528%" height="15" fill="rgb(205,86,26)" fg:x="386" fg:w="1"/><text x="20.6409%" y="767.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;maelstrom_node::transactor2::Root&gt; (6 samples, 0.32%)</title><rect x="20.1796%" y="981" width="0.3170%" height="15" fill="rgb(231,126,28)" fg:x="382" fg:w="6"/><text x="20.4296%" y="991.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,alloc::string::String&gt;&gt; (5 samples, 0.26%)</title><rect x="20.2324%" y="965" width="0.2641%" height="15" fill="rgb(219,221,18)" fg:x="383" fg:w="5"/><text x="20.4824%" y="975.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;usize,alloc::string::String,std::hash::random::RandomState&gt;&gt; (5 samples, 0.26%)</title><rect x="20.2324%" y="949" width="0.2641%" height="15" fill="rgb(211,40,0)" fg:x="383" fg:w="5"/><text x="20.4824%" y="959.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(usize,alloc::string::String)&gt;&gt; (5 samples, 0.26%)</title><rect x="20.2324%" y="933" width="0.2641%" height="15" fill="rgb(239,85,43)" fg:x="383" fg:w="5"/><text x="20.4824%" y="943.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.26%)</title><rect x="20.2324%" y="917" width="0.2641%" height="15" fill="rgb(231,55,21)" fg:x="383" fg:w="5"/><text x="20.4824%" y="927.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::drop_inner_table (5 samples, 0.26%)</title><rect x="20.2324%" y="901" width="0.2641%" height="15" fill="rgb(225,184,43)" fg:x="383" fg:w="5"/><text x="20.4824%" y="911.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::drop_elements (5 samples, 0.26%)</title><rect x="20.2324%" y="885" width="0.2641%" height="15" fill="rgb(251,158,41)" fg:x="383" fg:w="5"/><text x="20.4824%" y="895.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.05%)</title><rect x="20.4437%" y="869" width="0.0528%" height="15" fill="rgb(234,159,37)" fg:x="387" fg:w="1"/><text x="20.6937%" y="879.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,alloc::string::String&gt;&gt; (1 samples, 0.05%)</title><rect x="20.4966%" y="981" width="0.0528%" height="15" fill="rgb(216,204,22)" fg:x="388" fg:w="1"/><text x="20.7466%" y="991.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;usize,alloc::string::String,std::hash::random::RandomState&gt;&gt; (1 samples, 0.05%)</title><rect x="20.4966%" y="965" width="0.0528%" height="15" fill="rgb(214,17,3)" fg:x="388" fg:w="1"/><text x="20.7466%" y="975.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(usize,alloc::string::String)&gt;&gt; (1 samples, 0.05%)</title><rect x="20.4966%" y="949" width="0.0528%" height="15" fill="rgb(212,111,17)" fg:x="388" fg:w="1"/><text x="20.7466%" y="959.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="20.4966%" y="933" width="0.0528%" height="15" fill="rgb(221,157,24)" fg:x="388" fg:w="1"/><text x="20.7466%" y="943.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.05%)</title><rect x="20.4966%" y="917" width="0.0528%" height="15" fill="rgb(252,16,13)" fg:x="388" fg:w="1"/><text x="20.7466%" y="927.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::TableLayout::calculate_layout_for (1 samples, 0.05%)</title><rect x="20.4966%" y="901" width="0.0528%" height="15" fill="rgb(221,62,2)" fg:x="388" fg:w="1"/><text x="20.7466%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.05%)</title><rect x="20.5494%" y="885" width="0.0528%" height="15" fill="rgb(247,87,22)" fg:x="389" fg:w="1"/><text x="20.7994%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.11%)</title><rect x="20.5494%" y="901" width="0.1057%" height="15" fill="rgb(215,73,9)" fg:x="389" fg:w="2"/><text x="20.7994%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="20.6022%" y="885" width="0.0528%" height="15" fill="rgb(207,175,33)" fg:x="390" fg:w="1"/><text x="20.8522%" y="895.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (3 samples, 0.16%)</title><rect x="20.5494%" y="981" width="0.1585%" height="15" fill="rgb(243,129,54)" fg:x="389" fg:w="3"/><text x="20.7994%" y="991.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;usize,alloc::vec::Vec&lt;usize&gt;,std::hash::random::RandomState&gt;&gt; (3 samples, 0.16%)</title><rect x="20.5494%" y="965" width="0.1585%" height="15" fill="rgb(227,119,45)" fg:x="389" fg:w="3"/><text x="20.7994%" y="975.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(usize,alloc::vec::Vec&lt;usize&gt;)&gt;&gt; (3 samples, 0.16%)</title><rect x="20.5494%" y="949" width="0.1585%" height="15" fill="rgb(205,109,36)" fg:x="389" fg:w="3"/><text x="20.7994%" y="959.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.16%)</title><rect x="20.5494%" y="933" width="0.1585%" height="15" fill="rgb(205,6,39)" fg:x="389" fg:w="3"/><text x="20.7994%" y="943.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::drop_inner_table (3 samples, 0.16%)</title><rect x="20.5494%" y="917" width="0.1585%" height="15" fill="rgb(221,32,16)" fg:x="389" fg:w="3"/><text x="20.7994%" y="927.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::drop_elements (1 samples, 0.05%)</title><rect x="20.6550%" y="901" width="0.0528%" height="15" fill="rgb(228,144,50)" fg:x="391" fg:w="1"/><text x="20.9050%" y="911.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;(usize,alloc::vec::Vec&lt;usize&gt;)&gt; (1 samples, 0.05%)</title><rect x="20.6550%" y="885" width="0.0528%" height="15" fill="rgb(229,201,53)" fg:x="391" fg:w="1"/><text x="20.9050%" y="895.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (1 samples, 0.05%)</title><rect x="20.6550%" y="869" width="0.0528%" height="15" fill="rgb(249,153,27)" fg:x="391" fg:w="1"/><text x="20.9050%" y="879.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (1 samples, 0.05%)</title><rect x="20.6550%" y="853" width="0.0528%" height="15" fill="rgb(227,106,25)" fg:x="391" fg:w="1"/><text x="20.9050%" y="863.50"></text></g><g><title>maelstrom-txn`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="20.6550%" y="837" width="0.0528%" height="15" fill="rgb(230,65,29)" fg:x="391" fg:w="1"/><text x="20.9050%" y="847.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1 samples, 0.05%)</title><rect x="20.6550%" y="821" width="0.0528%" height="15" fill="rgb(221,57,46)" fg:x="391" fg:w="1"/><text x="20.9050%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="20.6550%" y="805" width="0.0528%" height="15" fill="rgb(229,161,17)" fg:x="391" fg:w="1"/><text x="20.9050%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.05%)</title><rect x="20.6550%" y="789" width="0.0528%" height="15" fill="rgb(222,213,11)" fg:x="391" fg:w="1"/><text x="20.9050%" y="799.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;usize&gt;&gt; (1 samples, 0.05%)</title><rect x="20.7079%" y="981" width="0.0528%" height="15" fill="rgb(235,35,13)" fg:x="392" fg:w="1"/><text x="20.9579%" y="991.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;usize,std::hash::random::RandomState&gt;&gt; (1 samples, 0.05%)</title><rect x="20.7079%" y="965" width="0.0528%" height="15" fill="rgb(233,158,34)" fg:x="392" fg:w="1"/><text x="20.9579%" y="975.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;usize,(),std::hash::random::RandomState&gt;&gt; (1 samples, 0.05%)</title><rect x="20.7079%" y="949" width="0.0528%" height="15" fill="rgb(215,151,48)" fg:x="392" fg:w="1"/><text x="20.9579%" y="959.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(usize,())&gt;&gt; (1 samples, 0.05%)</title><rect x="20.7079%" y="933" width="0.0528%" height="15" fill="rgb(229,84,14)" fg:x="392" fg:w="1"/><text x="20.9579%" y="943.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="20.7079%" y="917" width="0.0528%" height="15" fill="rgb(229,68,14)" fg:x="392" fg:w="1"/><text x="20.9579%" y="927.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.05%)</title><rect x="20.7079%" y="901" width="0.0528%" height="15" fill="rgb(243,106,26)" fg:x="392" fg:w="1"/><text x="20.9579%" y="911.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="20.7079%" y="885" width="0.0528%" height="15" fill="rgb(206,45,38)" fg:x="392" fg:w="1"/><text x="20.9579%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.05%)</title><rect x="20.7079%" y="869" width="0.0528%" height="15" fill="rgb(226,6,15)" fg:x="392" fg:w="1"/><text x="20.9579%" y="879.50"></text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StdinLock as std::io::BufRead&gt;::read_line (1 samples, 0.05%)</title><rect x="20.7607%" y="949" width="0.0528%" height="15" fill="rgb(232,22,54)" fg:x="393" fg:w="1"/><text x="21.0107%" y="959.50"></text></g><g><title>maelstrom-txn`std::io::read_until (1 samples, 0.05%)</title><rect x="20.7607%" y="933" width="0.0528%" height="15" fill="rgb(229,222,32)" fg:x="393" fg:w="1"/><text x="21.0107%" y="943.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.05%)</title><rect x="20.7607%" y="917" width="0.0528%" height="15" fill="rgb(228,62,29)" fg:x="393" fg:w="1"/><text x="21.0107%" y="927.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::finish_grow (1 samples, 0.05%)</title><rect x="20.7607%" y="901" width="0.0528%" height="15" fill="rgb(251,103,34)" fg:x="393" fg:w="1"/><text x="21.0107%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="20.7607%" y="885" width="0.0528%" height="15" fill="rgb(233,12,30)" fg:x="393" fg:w="1"/><text x="21.0107%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="20.7607%" y="869" width="0.0528%" height="15" fill="rgb(238,52,0)" fg:x="393" fg:w="1"/><text x="21.0107%" y="879.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;maelstrom_node::messages::Message&gt; (1 samples, 0.05%)</title><rect x="20.8135%" y="949" width="0.0528%" height="15" fill="rgb(223,98,5)" fg:x="394" fg:w="1"/><text x="21.0635%" y="959.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;maelstrom_node::messages::MessageBody&gt; (1 samples, 0.05%)</title><rect x="20.8135%" y="933" width="0.0528%" height="15" fill="rgb(228,75,37)" fg:x="394" fg:w="1"/><text x="21.0635%" y="943.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;maelstrom_node::messages::MessageExtra&gt; (1 samples, 0.05%)</title><rect x="20.8135%" y="917" width="0.0528%" height="15" fill="rgb(205,115,49)" fg:x="394" fg:w="1"/><text x="21.0635%" y="927.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;maelstrom_node::messages::KvReadExtra&gt; (1 samples, 0.05%)</title><rect x="20.8135%" y="901" width="0.0528%" height="15" fill="rgb(250,154,43)" fg:x="394" fg:w="1"/><text x="21.0635%" y="911.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.05%)</title><rect x="20.8135%" y="885" width="0.0528%" height="15" fill="rgb(226,43,29)" fg:x="394" fg:w="1"/><text x="21.0635%" y="895.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.05%)</title><rect x="20.8135%" y="869" width="0.0528%" height="15" fill="rgb(249,228,39)" fg:x="394" fg:w="1"/><text x="21.0635%" y="879.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="20.8135%" y="853" width="0.0528%" height="15" fill="rgb(216,79,43)" fg:x="394" fg:w="1"/><text x="21.0635%" y="863.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="20.8135%" y="837" width="0.0528%" height="15" fill="rgb(228,95,12)" fg:x="394" fg:w="1"/><text x="21.0635%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="20.8135%" y="821" width="0.0528%" height="15" fill="rgb(249,221,15)" fg:x="394" fg:w="1"/><text x="21.0635%" y="831.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1 samples, 0.05%)</title><rect x="20.8135%" y="805" width="0.0528%" height="15" fill="rgb(233,34,13)" fg:x="394" fg:w="1"/><text x="21.0635%" y="815.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="20.8135%" y="789" width="0.0528%" height="15" fill="rgb(214,103,39)" fg:x="394" fg:w="1"/><text x="21.0635%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.05%)</title><rect x="20.8135%" y="773" width="0.0528%" height="15" fill="rgb(251,126,39)" fg:x="394" fg:w="1"/><text x="21.0635%" y="783.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_key (1 samples, 0.05%)</title><rect x="20.9720%" y="869" width="0.0528%" height="15" fill="rgb(214,216,36)" fg:x="397" fg:w="1"/><text x="21.2220%" y="879.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.05%)</title><rect x="20.9720%" y="853" width="0.0528%" height="15" fill="rgb(220,221,8)" fg:x="397" fg:w="1"/><text x="21.2220%" y="863.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.05%)</title><rect x="20.9720%" y="837" width="0.0528%" height="15" fill="rgb(240,216,3)" fg:x="397" fg:w="1"/><text x="21.2220%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.05%)</title><rect x="20.9720%" y="821" width="0.0528%" height="15" fill="rgb(232,218,17)" fg:x="397" fg:w="1"/><text x="21.2220%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.05%)</title><rect x="20.9720%" y="805" width="0.0528%" height="15" fill="rgb(229,163,45)" fg:x="397" fg:w="1"/><text x="21.2220%" y="815.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.05%)</title><rect x="20.9720%" y="789" width="0.0528%" height="15" fill="rgb(231,110,42)" fg:x="397" fg:w="1"/><text x="21.2220%" y="799.50"></text></g><g><title>maelstrom-txn`serde::de::Visitor::visit_borrowed_str (1 samples, 0.05%)</title><rect x="20.9720%" y="773" width="0.0528%" height="15" fill="rgb(208,170,48)" fg:x="397" fg:w="1"/><text x="21.2220%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.05%)</title><rect x="20.9720%" y="757" width="0.0528%" height="15" fill="rgb(239,116,25)" fg:x="397" fg:w="1"/><text x="21.2220%" y="767.50"></text></g><g><title>maelstrom-txn`core::str::traits::_&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.05%)</title><rect x="20.9720%" y="741" width="0.0528%" height="15" fill="rgb(219,200,50)" fg:x="397" fg:w="1"/><text x="21.2220%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (1 samples, 0.05%)</title><rect x="20.9720%" y="725" width="0.0528%" height="15" fill="rgb(245,200,0)" fg:x="397" fg:w="1"/><text x="21.2220%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.05%)</title><rect x="21.0248%" y="773" width="0.0528%" height="15" fill="rgb(245,119,33)" fg:x="398" fg:w="1"/><text x="21.2748%" y="783.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.05%)</title><rect x="21.0777%" y="773" width="0.0528%" height="15" fill="rgb(231,125,12)" fg:x="399" fg:w="1"/><text x="21.3277%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="21.0777%" y="757" width="0.0528%" height="15" fill="rgb(216,96,41)" fg:x="399" fg:w="1"/><text x="21.3277%" y="767.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.05%)</title><rect x="21.1305%" y="709" width="0.0528%" height="15" fill="rgb(248,43,45)" fg:x="400" fg:w="1"/><text x="21.3805%" y="719.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="21.1305%" y="693" width="0.0528%" height="15" fill="rgb(217,222,7)" fg:x="400" fg:w="1"/><text x="21.3805%" y="703.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1 samples, 0.05%)</title><rect x="21.1305%" y="677" width="0.0528%" height="15" fill="rgb(233,28,6)" fg:x="400" fg:w="1"/><text x="21.3805%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.11%)</title><rect x="21.1833%" y="597" width="0.1057%" height="15" fill="rgb(231,218,15)" fg:x="401" fg:w="2"/><text x="21.4333%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="21.2361%" y="581" width="0.0528%" height="15" fill="rgb(226,171,48)" fg:x="402" fg:w="1"/><text x="21.4861%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.21%)</title><rect x="21.1305%" y="757" width="0.2113%" height="15" fill="rgb(235,201,9)" fg:x="400" fg:w="4"/><text x="21.3805%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_map (4 samples, 0.21%)</title><rect x="21.1305%" y="741" width="0.2113%" height="15" fill="rgb(217,80,15)" fg:x="400" fg:w="4"/><text x="21.3805%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::TaggedContentVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_map (4 samples, 0.21%)</title><rect x="21.1305%" y="725" width="0.2113%" height="15" fill="rgb(219,152,8)" fg:x="400" fg:w="4"/><text x="21.3805%" y="735.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (3 samples, 0.16%)</title><rect x="21.1833%" y="709" width="0.1585%" height="15" fill="rgb(243,107,38)" fg:x="401" fg:w="3"/><text x="21.4333%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapAccess&lt;E&gt; as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.16%)</title><rect x="21.1833%" y="693" width="0.1585%" height="15" fill="rgb(231,17,5)" fg:x="401" fg:w="3"/><text x="21.4333%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.16%)</title><rect x="21.1833%" y="677" width="0.1585%" height="15" fill="rgb(209,25,54)" fg:x="401" fg:w="3"/><text x="21.4333%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (3 samples, 0.16%)</title><rect x="21.1833%" y="661" width="0.1585%" height="15" fill="rgb(219,0,2)" fg:x="401" fg:w="3"/><text x="21.4333%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::__deserialize_content (3 samples, 0.16%)</title><rect x="21.1833%" y="645" width="0.1585%" height="15" fill="rgb(246,9,5)" fg:x="401" fg:w="3"/><text x="21.4333%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as core::clone::Clone&gt;::clone (3 samples, 0.16%)</title><rect x="21.1833%" y="629" width="0.1585%" height="15" fill="rgb(226,159,4)" fg:x="401" fg:w="3"/><text x="21.4333%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.16%)</title><rect x="21.1833%" y="613" width="0.1585%" height="15" fill="rgb(219,175,34)" fg:x="401" fg:w="3"/><text x="21.4333%" y="623.50"></text></g><g><title>maelstrom-txn`DYLD-STUB$$memcpy (1 samples, 0.05%)</title><rect x="21.2890%" y="597" width="0.0528%" height="15" fill="rgb(236,10,46)" fg:x="403" fg:w="1"/><text x="21.5390%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="21.5003%" y="565" width="0.0528%" height="15" fill="rgb(240,211,16)" fg:x="407" fg:w="1"/><text x="21.7503%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="21.7644%" y="373" width="0.0528%" height="15" fill="rgb(205,3,43)" fg:x="412" fg:w="1"/><text x="22.0144%" y="383.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="21.7644%" y="357" width="0.0528%" height="15" fill="rgb(245,7,22)" fg:x="412" fg:w="1"/><text x="22.0144%" y="367.50"></text></g><g><title>maelstrom-txn`alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="21.7644%" y="341" width="0.0528%" height="15" fill="rgb(239,132,32)" fg:x="412" fg:w="1"/><text x="22.0144%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.05%)</title><rect x="21.7644%" y="325" width="0.0528%" height="15" fill="rgb(228,202,34)" fg:x="412" fg:w="1"/><text x="22.0144%" y="335.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (4 samples, 0.21%)</title><rect x="21.6587%" y="501" width="0.2113%" height="15" fill="rgb(254,200,22)" fg:x="410" fg:w="4"/><text x="21.9087%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (4 samples, 0.21%)</title><rect x="21.6587%" y="485" width="0.2113%" height="15" fill="rgb(219,10,39)" fg:x="410" fg:w="4"/><text x="21.9087%" y="495.50"></text></g><g><title>maelstrom-txn`serde::de::Visitor::visit_borrowed_str (4 samples, 0.21%)</title><rect x="21.6587%" y="469" width="0.2113%" height="15" fill="rgb(226,210,39)" fg:x="410" fg:w="4"/><text x="21.9087%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (4 samples, 0.21%)</title><rect x="21.6587%" y="453" width="0.2113%" height="15" fill="rgb(208,219,16)" fg:x="410" fg:w="4"/><text x="21.9087%" y="463.50"></text></g><g><title>maelstrom-txn`alloc::str::_&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3 samples, 0.16%)</title><rect x="21.7116%" y="437" width="0.1585%" height="15" fill="rgb(216,158,51)" fg:x="411" fg:w="3"/><text x="21.9616%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.11%)</title><rect x="21.7644%" y="421" width="0.1057%" height="15" fill="rgb(233,14,44)" fg:x="412" fg:w="2"/><text x="22.0144%" y="431.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2 samples, 0.11%)</title><rect x="21.7644%" y="405" width="0.1057%" height="15" fill="rgb(237,97,39)" fg:x="412" fg:w="2"/><text x="22.0144%" y="415.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2 samples, 0.11%)</title><rect x="21.7644%" y="389" width="0.1057%" height="15" fill="rgb(218,198,43)" fg:x="412" fg:w="2"/><text x="22.0144%" y="399.50"></text></g><g><title>maelstrom-txn`core::alloc::layout::Layout::repeat (1 samples, 0.05%)</title><rect x="21.8172%" y="373" width="0.0528%" height="15" fill="rgb(231,104,20)" fg:x="413" fg:w="1"/><text x="22.0672%" y="383.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="21.8700%" y="405" width="0.0528%" height="15" fill="rgb(254,36,13)" fg:x="414" fg:w="1"/><text x="22.1200%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::MapAccess&gt;::next_entry (8 samples, 0.42%)</title><rect x="21.5531%" y="565" width="0.4226%" height="15" fill="rgb(248,14,50)" fg:x="408" fg:w="8"/><text x="21.8031%" y="575.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_entry (8 samples, 0.42%)</title><rect x="21.5531%" y="549" width="0.4226%" height="15" fill="rgb(217,107,29)" fg:x="408" fg:w="8"/><text x="21.8031%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (7 samples, 0.37%)</title><rect x="21.6059%" y="533" width="0.3698%" height="15" fill="rgb(251,169,33)" fg:x="409" fg:w="7"/><text x="21.8559%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6 samples, 0.32%)</title><rect x="21.6587%" y="517" width="0.3170%" height="15" fill="rgb(217,108,32)" fg:x="410" fg:w="6"/><text x="21.9087%" y="527.50"></text></g><g><title>maelstrom-txn`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.11%)</title><rect x="21.8700%" y="501" width="0.1057%" height="15" fill="rgb(219,66,42)" fg:x="414" fg:w="2"/><text x="22.1200%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.11%)</title><rect x="21.8700%" y="485" width="0.1057%" height="15" fill="rgb(206,180,7)" fg:x="414" fg:w="2"/><text x="22.1200%" y="495.50"></text></g><g><title>maelstrom-txn`serde::de::Visitor::visit_borrowed_str (2 samples, 0.11%)</title><rect x="21.8700%" y="469" width="0.1057%" height="15" fill="rgb(208,226,31)" fg:x="414" fg:w="2"/><text x="22.1200%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (2 samples, 0.11%)</title><rect x="21.8700%" y="453" width="0.1057%" height="15" fill="rgb(218,26,49)" fg:x="414" fg:w="2"/><text x="22.1200%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (2 samples, 0.11%)</title><rect x="21.8700%" y="437" width="0.1057%" height="15" fill="rgb(233,197,48)" fg:x="414" fg:w="2"/><text x="22.1200%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.11%)</title><rect x="21.8700%" y="421" width="0.1057%" height="15" fill="rgb(252,181,51)" fg:x="414" fg:w="2"/><text x="22.1200%" y="431.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.05%)</title><rect x="21.9229%" y="405" width="0.0528%" height="15" fill="rgb(253,90,19)" fg:x="415" fg:w="1"/><text x="22.1729%" y="415.50"></text></g><g><title>maelstrom-txn`core::ub_checks::is_nonoverlapping::runtime (1 samples, 0.05%)</title><rect x="21.9229%" y="389" width="0.0528%" height="15" fill="rgb(215,171,30)" fg:x="415" fg:w="1"/><text x="22.1729%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="22.0285%" y="517" width="0.0528%" height="15" fill="rgb(214,222,9)" fg:x="417" fg:w="1"/><text x="22.2785%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (1 samples, 0.05%)</title><rect x="22.2927%" y="453" width="0.0528%" height="15" fill="rgb(223,3,22)" fg:x="422" fg:w="1"/><text x="22.5427%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (8 samples, 0.42%)</title><rect x="22.1342%" y="485" width="0.4226%" height="15" fill="rgb(225,196,46)" fg:x="419" fg:w="8"/><text x="22.3842%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (8 samples, 0.42%)</title><rect x="22.1342%" y="469" width="0.4226%" height="15" fill="rgb(209,110,37)" fg:x="419" fg:w="8"/><text x="22.3842%" y="479.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (4 samples, 0.21%)</title><rect x="22.3455%" y="453" width="0.2113%" height="15" fill="rgb(249,89,12)" fg:x="423" fg:w="4"/><text x="22.5955%" y="463.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (12 samples, 0.63%)</title><rect x="21.9757%" y="533" width="0.6339%" height="15" fill="rgb(226,27,33)" fg:x="416" fg:w="12"/><text x="22.2257%" y="543.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (10 samples, 0.53%)</title><rect x="22.0814%" y="517" width="0.5283%" height="15" fill="rgb(213,82,22)" fg:x="418" fg:w="10"/><text x="22.3314%" y="527.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (10 samples, 0.53%)</title><rect x="22.0814%" y="501" width="0.5283%" height="15" fill="rgb(248,140,0)" fg:x="418" fg:w="10"/><text x="22.3314%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="22.5568%" y="485" width="0.0528%" height="15" fill="rgb(228,106,3)" fg:x="427" fg:w="1"/><text x="22.8068%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="22.5568%" y="469" width="0.0528%" height="15" fill="rgb(209,23,37)" fg:x="427" fg:w="1"/><text x="22.8068%" y="479.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (1 samples, 0.05%)</title><rect x="22.6624%" y="517" width="0.0528%" height="15" fill="rgb(241,93,50)" fg:x="429" fg:w="1"/><text x="22.9124%" y="527.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (1 samples, 0.05%)</title><rect x="22.7681%" y="501" width="0.0528%" height="15" fill="rgb(253,46,43)" fg:x="431" fg:w="1"/><text x="23.0181%" y="511.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (1 samples, 0.05%)</title><rect x="22.7681%" y="485" width="0.0528%" height="15" fill="rgb(226,206,43)" fg:x="431" fg:w="1"/><text x="23.0181%" y="495.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.05%)</title><rect x="22.7681%" y="469" width="0.0528%" height="15" fill="rgb(217,54,7)" fg:x="431" fg:w="1"/><text x="23.0181%" y="479.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (1 samples, 0.05%)</title><rect x="22.8209%" y="501" width="0.0528%" height="15" fill="rgb(223,5,52)" fg:x="432" fg:w="1"/><text x="23.0709%" y="511.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (6 samples, 0.32%)</title><rect x="22.7153%" y="517" width="0.3170%" height="15" fill="rgb(206,52,46)" fg:x="430" fg:w="6"/><text x="22.9653%" y="527.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (3 samples, 0.16%)</title><rect x="22.8737%" y="501" width="0.1585%" height="15" fill="rgb(253,136,11)" fg:x="433" fg:w="3"/><text x="23.1237%" y="511.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (3 samples, 0.16%)</title><rect x="22.8737%" y="485" width="0.1585%" height="15" fill="rgb(208,106,33)" fg:x="433" fg:w="3"/><text x="23.1237%" y="495.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::slice_insert (3 samples, 0.16%)</title><rect x="22.8737%" y="469" width="0.1585%" height="15" fill="rgb(206,54,4)" fg:x="433" fg:w="3"/><text x="23.1237%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="22.9794%" y="453" width="0.0528%" height="15" fill="rgb(213,3,15)" fg:x="435" fg:w="1"/><text x="23.2294%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (31 samples, 1.64%)</title><rect x="21.4474%" y="581" width="1.6376%" height="15" fill="rgb(252,211,39)" fg:x="406" fg:w="31"/><text x="21.6974%" y="591.50"></text></g><g><title>maelstrom-txn`serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (21 samples, 1.11%)</title><rect x="21.9757%" y="565" width="1.1094%" height="15" fill="rgb(223,6,36)" fg:x="416" fg:w="21"/><text x="22.2257%" y="575.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (21 samples, 1.11%)</title><rect x="21.9757%" y="549" width="1.1094%" height="15" fill="rgb(252,169,45)" fg:x="416" fg:w="21"/><text x="22.2257%" y="559.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (9 samples, 0.48%)</title><rect x="22.6096%" y="533" width="0.4754%" height="15" fill="rgb(212,48,26)" fg:x="428" fg:w="9"/><text x="22.8596%" y="543.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1 samples, 0.05%)</title><rect x="23.0322%" y="517" width="0.0528%" height="15" fill="rgb(251,102,48)" fg:x="436" fg:w="1"/><text x="23.2822%" y="527.50"></text></g><g><title>maelstrom-txn`alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 0.05%)</title><rect x="23.0322%" y="501" width="0.0528%" height="15" fill="rgb(243,208,16)" fg:x="436" fg:w="1"/><text x="23.2822%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="23.0851%" y="421" width="0.0528%" height="15" fill="rgb(219,96,24)" fg:x="437" fg:w="1"/><text x="23.3351%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.05%)</title><rect x="23.0851%" y="405" width="0.0528%" height="15" fill="rgb(219,33,29)" fg:x="437" fg:w="1"/><text x="23.3351%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_find_by_ptr (1 samples, 0.05%)</title><rect x="23.0851%" y="389" width="0.0528%" height="15" fill="rgb(223,176,5)" fg:x="437" fg:w="1"/><text x="23.3351%" y="399.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageExtra&gt;::deserialize (39 samples, 2.06%)</title><rect x="21.1305%" y="773" width="2.0602%" height="15" fill="rgb(228,140,14)" fg:x="400" fg:w="39"/><text x="21.3805%" y="783.50">m..</text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::KvReadOkExtra&gt;::deserialize (35 samples, 1.85%)</title><rect x="21.3418%" y="757" width="1.8489%" height="15" fill="rgb(217,179,31)" fg:x="404" fg:w="35"/><text x="21.5918%" y="767.50">m..</text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (35 samples, 1.85%)</title><rect x="21.3418%" y="741" width="1.8489%" height="15" fill="rgb(230,9,30)" fg:x="404" fg:w="35"/><text x="21.5918%" y="751.50">m..</text></g><g><title>maelstrom-txn`serde::__private::de::content::visit_content_map (33 samples, 1.74%)</title><rect x="21.4474%" y="725" width="1.7433%" height="15" fill="rgb(230,136,20)" fg:x="406" fg:w="33"/><text x="21.6974%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::KvReadOkExtra&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (33 samples, 1.74%)</title><rect x="21.4474%" y="709" width="1.7433%" height="15" fill="rgb(215,210,22)" fg:x="406" fg:w="33"/><text x="21.6974%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::MapAccess&gt;::next_value (33 samples, 1.74%)</title><rect x="21.4474%" y="693" width="1.7433%" height="15" fill="rgb(218,43,5)" fg:x="406" fg:w="33"/><text x="21.6974%" y="703.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (33 samples, 1.74%)</title><rect x="21.4474%" y="677" width="1.7433%" height="15" fill="rgb(216,11,5)" fg:x="406" fg:w="33"/><text x="21.6974%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_value_seed (33 samples, 1.74%)</title><rect x="21.4474%" y="661" width="1.7433%" height="15" fill="rgb(209,82,29)" fg:x="406" fg:w="33"/><text x="21.6974%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (33 samples, 1.74%)</title><rect x="21.4474%" y="645" width="1.7433%" height="15" fill="rgb(244,115,12)" fg:x="406" fg:w="33"/><text x="21.6974%" y="655.50"></text></g><g><title>maelstrom-txn`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (33 samples, 1.74%)</title><rect x="21.4474%" y="629" width="1.7433%" height="15" fill="rgb(222,82,18)" fg:x="406" fg:w="33"/><text x="21.6974%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (33 samples, 1.74%)</title><rect x="21.4474%" y="613" width="1.7433%" height="15" fill="rgb(249,227,8)" fg:x="406" fg:w="33"/><text x="21.6974%" y="623.50"></text></g><g><title>maelstrom-txn`serde::__private::de::content::visit_content_map (33 samples, 1.74%)</title><rect x="21.4474%" y="597" width="1.7433%" height="15" fill="rgb(253,141,45)" fg:x="406" fg:w="33"/><text x="21.6974%" y="607.50"></text></g><g><title>maelstrom-txn`serde::de::value::MapDeserializer&lt;I,E&gt;::end (2 samples, 0.11%)</title><rect x="23.0851%" y="581" width="0.1057%" height="15" fill="rgb(234,184,4)" fg:x="437" fg:w="2"/><text x="23.3351%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::count (2 samples, 0.11%)</title><rect x="23.0851%" y="565" width="0.1057%" height="15" fill="rgb(218,194,23)" fg:x="437" fg:w="2"/><text x="23.3351%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::count (2 samples, 0.11%)</title><rect x="23.0851%" y="549" width="0.1057%" height="15" fill="rgb(235,66,41)" fg:x="437" fg:w="2"/><text x="23.3351%" y="559.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt;&gt; (2 samples, 0.11%)</title><rect x="23.0851%" y="533" width="0.1057%" height="15" fill="rgb(245,217,1)" fg:x="437" fg:w="2"/><text x="23.3351%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="23.0851%" y="517" width="0.1057%" height="15" fill="rgb(229,91,1)" fg:x="437" fg:w="2"/><text x="23.3351%" y="527.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content),alloc::alloc::Global&gt;&gt; (2 samples, 0.11%)</title><rect x="23.0851%" y="501" width="0.1057%" height="15" fill="rgb(207,101,30)" fg:x="437" fg:w="2"/><text x="23.3351%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="23.0851%" y="485" width="0.1057%" height="15" fill="rgb(223,82,49)" fg:x="437" fg:w="2"/><text x="23.3351%" y="495.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt;&gt; (2 samples, 0.11%)</title><rect x="23.0851%" y="469" width="0.1057%" height="15" fill="rgb(218,167,17)" fg:x="437" fg:w="2"/><text x="23.3351%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="23.0851%" y="453" width="0.1057%" height="15" fill="rgb(208,103,14)" fg:x="437" fg:w="2"/><text x="23.3351%" y="463.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2 samples, 0.11%)</title><rect x="23.0851%" y="437" width="0.1057%" height="15" fill="rgb(238,20,8)" fg:x="437" fg:w="2"/><text x="23.3351%" y="447.50"></text></g><g><title>maelstrom-txn`DYLD-STUB$$free (1 samples, 0.05%)</title><rect x="23.1379%" y="421" width="0.0528%" height="15" fill="rgb(218,80,54)" fg:x="438" fg:w="1"/><text x="23.3879%" y="431.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_key (1 samples, 0.05%)</title><rect x="23.1907%" y="773" width="0.0528%" height="15" fill="rgb(240,144,17)" fg:x="439" fg:w="1"/><text x="23.4407%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.05%)</title><rect x="23.1907%" y="757" width="0.0528%" height="15" fill="rgb(245,27,50)" fg:x="439" fg:w="1"/><text x="23.4407%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.05%)</title><rect x="23.1907%" y="741" width="0.0528%" height="15" fill="rgb(251,51,7)" fg:x="439" fg:w="1"/><text x="23.4407%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.05%)</title><rect x="23.1907%" y="725" width="0.0528%" height="15" fill="rgb(245,217,29)" fg:x="439" fg:w="1"/><text x="23.4407%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.05%)</title><rect x="23.1907%" y="709" width="0.0528%" height="15" fill="rgb(221,176,29)" fg:x="439" fg:w="1"/><text x="23.4407%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.05%)</title><rect x="23.1907%" y="693" width="0.0528%" height="15" fill="rgb(212,180,24)" fg:x="439" fg:w="1"/><text x="23.4407%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.05%)</title><rect x="23.1907%" y="677" width="0.0528%" height="15" fill="rgb(254,24,2)" fg:x="439" fg:w="1"/><text x="23.4407%" y="687.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::parse_str_bytes (1 samples, 0.05%)</title><rect x="23.1907%" y="661" width="0.0528%" height="15" fill="rgb(230,100,2)" fg:x="439" fg:w="1"/><text x="23.4407%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str::_{{closure}} (1 samples, 0.05%)</title><rect x="23.1907%" y="645" width="0.0528%" height="15" fill="rgb(219,142,25)" fg:x="439" fg:w="1"/><text x="23.4407%" y="655.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.11%)</title><rect x="23.2964%" y="661" width="0.1057%" height="15" fill="rgb(240,73,43)" fg:x="441" fg:w="2"/><text x="23.5464%" y="671.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.05%)</title><rect x="23.3492%" y="645" width="0.0528%" height="15" fill="rgb(214,114,15)" fg:x="442" fg:w="1"/><text x="23.5992%" y="655.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1 samples, 0.05%)</title><rect x="23.3492%" y="629" width="0.0528%" height="15" fill="rgb(207,130,4)" fg:x="442" fg:w="1"/><text x="23.5992%" y="639.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::finish_grow (1 samples, 0.05%)</title><rect x="23.3492%" y="613" width="0.0528%" height="15" fill="rgb(221,25,40)" fg:x="442" fg:w="1"/><text x="23.5992%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.05%)</title><rect x="23.3492%" y="597" width="0.0528%" height="15" fill="rgb(241,184,7)" fg:x="442" fg:w="1"/><text x="23.5992%" y="607.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::grow_impl (1 samples, 0.05%)</title><rect x="23.3492%" y="581" width="0.0528%" height="15" fill="rgb(235,159,4)" fg:x="442" fg:w="1"/><text x="23.5992%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.05%)</title><rect x="23.3492%" y="565" width="0.0528%" height="15" fill="rgb(214,87,48)" fg:x="442" fg:w="1"/><text x="23.5992%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`small_size (1 samples, 0.05%)</title><rect x="23.3492%" y="549" width="0.0528%" height="15" fill="rgb(246,198,24)" fg:x="442" fg:w="1"/><text x="23.5992%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.11%)</title><rect x="23.4020%" y="629" width="0.1057%" height="15" fill="rgb(209,66,40)" fg:x="443" fg:w="2"/><text x="23.6520%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.11%)</title><rect x="23.4020%" y="613" width="0.1057%" height="15" fill="rgb(233,147,39)" fg:x="443" fg:w="2"/><text x="23.6520%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (2 samples, 0.11%)</title><rect x="23.4020%" y="597" width="0.1057%" height="15" fill="rgb(231,145,52)" fg:x="443" fg:w="2"/><text x="23.6520%" y="607.50"></text></g><g><title>maelstrom-txn`serde::de::Deserializer::__deserialize_content (2 samples, 0.11%)</title><rect x="23.4020%" y="581" width="0.1057%" height="15" fill="rgb(206,20,26)" fg:x="443" fg:w="2"/><text x="23.6520%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.11%)</title><rect x="23.4020%" y="565" width="0.1057%" height="15" fill="rgb(238,220,4)" fg:x="443" fg:w="2"/><text x="23.6520%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.11%)</title><rect x="23.4020%" y="549" width="0.1057%" height="15" fill="rgb(252,195,42)" fg:x="443" fg:w="2"/><text x="23.6520%" y="559.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::parse_str_bytes (2 samples, 0.11%)</title><rect x="23.4020%" y="533" width="0.1057%" height="15" fill="rgb(209,10,6)" fg:x="443" fg:w="2"/><text x="23.6520%" y="543.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::skip_to_escape (2 samples, 0.11%)</title><rect x="23.4020%" y="517" width="0.1057%" height="15" fill="rgb(229,3,52)" fg:x="443" fg:w="2"/><text x="23.6520%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="23.4548%" y="501" width="0.0528%" height="15" fill="rgb(253,49,37)" fg:x="444" fg:w="1"/><text x="23.7048%" y="511.50"></text></g><g><title>maelstrom-txn`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.05%)</title><rect x="23.4548%" y="485" width="0.0528%" height="15" fill="rgb(240,103,49)" fg:x="444" fg:w="1"/><text x="23.7048%" y="495.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.05%)</title><rect x="23.4548%" y="469" width="0.0528%" height="15" fill="rgb(250,182,30)" fg:x="444" fg:w="1"/><text x="23.7048%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.05%)</title><rect x="23.6661%" y="501" width="0.0528%" height="15" fill="rgb(248,8,30)" fg:x="448" fg:w="1"/><text x="23.9161%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.37%)</title><rect x="23.5077%" y="613" width="0.3698%" height="15" fill="rgb(237,120,30)" fg:x="445" fg:w="7"/><text x="23.7577%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (7 samples, 0.37%)</title><rect x="23.5077%" y="597" width="0.3698%" height="15" fill="rgb(221,146,34)" fg:x="445" fg:w="7"/><text x="23.7577%" y="607.50"></text></g><g><title>maelstrom-txn`serde::de::Deserializer::__deserialize_content (7 samples, 0.37%)</title><rect x="23.5077%" y="581" width="0.3698%" height="15" fill="rgb(242,55,13)" fg:x="445" fg:w="7"/><text x="23.7577%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.37%)</title><rect x="23.5077%" y="565" width="0.3698%" height="15" fill="rgb(242,112,31)" fg:x="445" fg:w="7"/><text x="23.7577%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (7 samples, 0.37%)</title><rect x="23.5077%" y="549" width="0.3698%" height="15" fill="rgb(249,192,27)" fg:x="445" fg:w="7"/><text x="23.7577%" y="559.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::parse_str_bytes (6 samples, 0.32%)</title><rect x="23.5605%" y="533" width="0.3170%" height="15" fill="rgb(208,204,44)" fg:x="446" fg:w="6"/><text x="23.8105%" y="543.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::skip_to_escape (5 samples, 0.26%)</title><rect x="23.6133%" y="517" width="0.2641%" height="15" fill="rgb(208,93,54)" fg:x="447" fg:w="5"/><text x="23.8633%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.16%)</title><rect x="23.7190%" y="501" width="0.1585%" height="15" fill="rgb(242,1,31)" fg:x="449" fg:w="3"/><text x="23.9690%" y="511.50"></text></g><g><title>maelstrom-txn`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (3 samples, 0.16%)</title><rect x="23.7190%" y="485" width="0.1585%" height="15" fill="rgb(241,83,25)" fg:x="449" fg:w="3"/><text x="23.9690%" y="495.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (3 samples, 0.16%)</title><rect x="23.7190%" y="469" width="0.1585%" height="15" fill="rgb(205,169,50)" fg:x="449" fg:w="3"/><text x="23.9690%" y="479.50"></text></g><g><title>maelstrom-txn`serde_json::de::from_str (58 samples, 3.06%)</title><rect x="20.8663%" y="949" width="3.0639%" height="15" fill="rgb(239,186,37)" fg:x="395" fg:w="58"/><text x="21.1163%" y="959.50">mae..</text></g><g><title>maelstrom-txn`serde_json::de::from_trait (57 samples, 3.01%)</title><rect x="20.9192%" y="933" width="3.0111%" height="15" fill="rgb(205,221,10)" fg:x="396" fg:w="57"/><text x="21.1692%" y="943.50">mae..</text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize (57 samples, 3.01%)</title><rect x="20.9192%" y="917" width="3.0111%" height="15" fill="rgb(218,196,15)" fg:x="396" fg:w="57"/><text x="21.1692%" y="927.50">mae..</text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (57 samples, 3.01%)</title><rect x="20.9192%" y="901" width="3.0111%" height="15" fill="rgb(218,196,35)" fg:x="396" fg:w="57"/><text x="21.1692%" y="911.50">mae..</text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (57 samples, 3.01%)</title><rect x="20.9192%" y="885" width="3.0111%" height="15" fill="rgb(233,63,24)" fg:x="396" fg:w="57"/><text x="21.1692%" y="895.50">mae..</text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (55 samples, 2.91%)</title><rect x="21.0248%" y="869" width="2.9054%" height="15" fill="rgb(225,8,4)" fg:x="398" fg:w="55"/><text x="21.2748%" y="879.50">ma..</text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (55 samples, 2.91%)</title><rect x="21.0248%" y="853" width="2.9054%" height="15" fill="rgb(234,105,35)" fg:x="398" fg:w="55"/><text x="21.2748%" y="863.50">ma..</text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (55 samples, 2.91%)</title><rect x="21.0248%" y="837" width="2.9054%" height="15" fill="rgb(236,21,32)" fg:x="398" fg:w="55"/><text x="21.2748%" y="847.50">ma..</text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize (55 samples, 2.91%)</title><rect x="21.0248%" y="821" width="2.9054%" height="15" fill="rgb(228,109,6)" fg:x="398" fg:w="55"/><text x="21.2748%" y="831.50">ma..</text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (55 samples, 2.91%)</title><rect x="21.0248%" y="805" width="2.9054%" height="15" fill="rgb(229,215,31)" fg:x="398" fg:w="55"/><text x="21.2748%" y="815.50">ma..</text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (55 samples, 2.91%)</title><rect x="21.0248%" y="789" width="2.9054%" height="15" fill="rgb(221,52,54)" fg:x="398" fg:w="55"/><text x="21.2748%" y="799.50">ma..</text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (13 samples, 0.69%)</title><rect x="23.2435%" y="773" width="0.6867%" height="15" fill="rgb(252,129,43)" fg:x="440" fg:w="13"/><text x="23.4935%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (13 samples, 0.69%)</title><rect x="23.2435%" y="757" width="0.6867%" height="15" fill="rgb(248,183,27)" fg:x="440" fg:w="13"/><text x="23.4935%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (13 samples, 0.69%)</title><rect x="23.2435%" y="741" width="0.6867%" height="15" fill="rgb(250,0,22)" fg:x="440" fg:w="13"/><text x="23.4935%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (13 samples, 0.69%)</title><rect x="23.2435%" y="725" width="0.6867%" height="15" fill="rgb(213,166,10)" fg:x="440" fg:w="13"/><text x="23.4935%" y="735.50"></text></g><g><title>maelstrom-txn`serde::de::Deserializer::__deserialize_content (13 samples, 0.69%)</title><rect x="23.2435%" y="709" width="0.6867%" height="15" fill="rgb(207,163,36)" fg:x="440" fg:w="13"/><text x="23.4935%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 0.69%)</title><rect x="23.2435%" y="693" width="0.6867%" height="15" fill="rgb(208,122,22)" fg:x="440" fg:w="13"/><text x="23.4935%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 0.69%)</title><rect x="23.2435%" y="677" width="0.6867%" height="15" fill="rgb(207,104,49)" fg:x="440" fg:w="13"/><text x="23.4935%" y="687.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_entry (10 samples, 0.53%)</title><rect x="23.4020%" y="661" width="0.5283%" height="15" fill="rgb(248,211,50)" fg:x="443" fg:w="10"/><text x="23.6520%" y="671.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_entry_seed (10 samples, 0.53%)</title><rect x="23.4020%" y="645" width="0.5283%" height="15" fill="rgb(217,13,45)" fg:x="443" fg:w="10"/><text x="23.6520%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (8 samples, 0.42%)</title><rect x="23.5077%" y="629" width="0.4226%" height="15" fill="rgb(211,216,49)" fg:x="445" fg:w="8"/><text x="23.7577%" y="639.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::parse_object_colon (1 samples, 0.05%)</title><rect x="23.8774%" y="613" width="0.0528%" height="15" fill="rgb(221,58,53)" fg:x="452" fg:w="1"/><text x="24.1274%" y="623.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.05%)</title><rect x="23.9303%" y="917" width="0.0528%" height="15" fill="rgb(220,112,41)" fg:x="453" fg:w="1"/><text x="24.1803%" y="927.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="23.9303%" y="901" width="0.0528%" height="15" fill="rgb(236,38,28)" fg:x="453" fg:w="1"/><text x="24.1803%" y="911.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1 samples, 0.05%)</title><rect x="23.9303%" y="885" width="0.0528%" height="15" fill="rgb(227,195,22)" fg:x="453" fg:w="1"/><text x="24.1803%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="23.9303%" y="869" width="0.0528%" height="15" fill="rgb(214,55,33)" fg:x="453" fg:w="1"/><text x="24.1803%" y="879.50"></text></g><g><title>maelstrom-txn`alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="23.9303%" y="853" width="0.0528%" height="15" fill="rgb(248,80,13)" fg:x="453" fg:w="1"/><text x="24.1803%" y="863.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.05%)</title><rect x="23.9831%" y="885" width="0.0528%" height="15" fill="rgb(238,52,6)" fg:x="454" fg:w="1"/><text x="24.2331%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.05%)</title><rect x="23.9831%" y="869" width="0.0528%" height="15" fill="rgb(224,198,47)" fg:x="454" fg:w="1"/><text x="24.2331%" y="879.50"></text></g><g><title>maelstrom-txn`core::cmp::impls::_&lt;impl core::cmp::PartialEq for usize&gt;::eq (1 samples, 0.05%)</title><rect x="23.9831%" y="853" width="0.0528%" height="15" fill="rgb(233,171,20)" fg:x="454" fg:w="1"/><text x="24.2331%" y="863.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.11%)</title><rect x="24.0359%" y="853" width="0.1057%" height="15" fill="rgb(241,30,25)" fg:x="455" fg:w="2"/><text x="24.2859%" y="863.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (2 samples, 0.11%)</title><rect x="24.0359%" y="837" width="0.1057%" height="15" fill="rgb(207,171,38)" fg:x="455" fg:w="2"/><text x="24.2859%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.11%)</title><rect x="24.0359%" y="821" width="0.1057%" height="15" fill="rgb(234,70,1)" fg:x="455" fg:w="2"/><text x="24.2859%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.11%)</title><rect x="24.0359%" y="805" width="0.1057%" height="15" fill="rgb(232,178,18)" fg:x="455" fg:w="2"/><text x="24.2859%" y="815.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (2 samples, 0.11%)</title><rect x="24.0359%" y="789" width="0.1057%" height="15" fill="rgb(241,78,40)" fg:x="455" fg:w="2"/><text x="24.2859%" y="799.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (2 samples, 0.11%)</title><rect x="24.0359%" y="773" width="0.1057%" height="15" fill="rgb(222,35,25)" fg:x="455" fg:w="2"/><text x="24.2859%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="24.0887%" y="757" width="0.0528%" height="15" fill="rgb(207,92,16)" fg:x="456" fg:w="1"/><text x="24.3387%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="24.0887%" y="741" width="0.0528%" height="15" fill="rgb(216,59,51)" fg:x="456" fg:w="1"/><text x="24.3387%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.05%)</title><rect x="24.1416%" y="821" width="0.0528%" height="15" fill="rgb(213,80,28)" fg:x="457" fg:w="1"/><text x="24.3916%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::end (1 samples, 0.05%)</title><rect x="24.1944%" y="821" width="0.0528%" height="15" fill="rgb(220,93,7)" fg:x="458" fg:w="1"/><text x="24.4444%" y="831.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::end_object (1 samples, 0.05%)</title><rect x="24.1944%" y="805" width="0.0528%" height="15" fill="rgb(225,24,44)" fg:x="458" fg:w="1"/><text x="24.4444%" y="815.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="24.1944%" y="789" width="0.0528%" height="15" fill="rgb(243,74,40)" fg:x="458" fg:w="1"/><text x="24.4444%" y="799.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="24.1944%" y="773" width="0.0528%" height="15" fill="rgb(228,39,7)" fg:x="458" fg:w="1"/><text x="24.4444%" y="783.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="24.1944%" y="757" width="0.0528%" height="15" fill="rgb(227,79,8)" fg:x="458" fg:w="1"/><text x="24.4444%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="24.1944%" y="741" width="0.0528%" height="15" fill="rgb(236,58,11)" fg:x="458" fg:w="1"/><text x="24.4444%" y="751.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="24.1944%" y="725" width="0.0528%" height="15" fill="rgb(249,63,35)" fg:x="458" fg:w="1"/><text x="24.4444%" y="735.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.05%)</title><rect x="24.1944%" y="709" width="0.0528%" height="15" fill="rgb(252,114,16)" fg:x="458" fg:w="1"/><text x="24.4444%" y="719.50"></text></g><g><title>maelstrom-txn`core::ub_checks::is_nonoverlapping::runtime (1 samples, 0.05%)</title><rect x="24.1944%" y="693" width="0.0528%" height="15" fill="rgb(254,151,24)" fg:x="458" fg:w="1"/><text x="24.4444%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.05%)</title><rect x="24.2472%" y="805" width="0.0528%" height="15" fill="rgb(253,54,39)" fg:x="459" fg:w="1"/><text x="24.4972%" y="815.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.05%)</title><rect x="24.2472%" y="789" width="0.0528%" height="15" fill="rgb(243,25,45)" fg:x="459" fg:w="1"/><text x="24.4972%" y="799.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.05%)</title><rect x="24.2472%" y="773" width="0.0528%" height="15" fill="rgb(234,134,9)" fg:x="459" fg:w="1"/><text x="24.4972%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.05%)</title><rect x="24.2472%" y="757" width="0.0528%" height="15" fill="rgb(227,166,31)" fg:x="459" fg:w="1"/><text x="24.4972%" y="767.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (1 samples, 0.05%)</title><rect x="24.2472%" y="741" width="0.0528%" height="15" fill="rgb(245,143,41)" fg:x="459" fg:w="1"/><text x="24.4972%" y="751.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (1 samples, 0.05%)</title><rect x="24.2472%" y="725" width="0.0528%" height="15" fill="rgb(238,181,32)" fg:x="459" fg:w="1"/><text x="24.4972%" y="735.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_string_fragment (1 samples, 0.05%)</title><rect x="24.2472%" y="709" width="0.0528%" height="15" fill="rgb(224,113,18)" fg:x="459" fg:w="1"/><text x="24.4972%" y="719.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="24.2472%" y="693" width="0.0528%" height="15" fill="rgb(240,229,28)" fg:x="459" fg:w="1"/><text x="24.4972%" y="703.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="24.2472%" y="677" width="0.0528%" height="15" fill="rgb(250,185,3)" fg:x="459" fg:w="1"/><text x="24.4972%" y="687.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="24.2472%" y="661" width="0.0528%" height="15" fill="rgb(212,59,25)" fg:x="459" fg:w="1"/><text x="24.4972%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="24.2472%" y="645" width="0.0528%" height="15" fill="rgb(221,87,20)" fg:x="459" fg:w="1"/><text x="24.4972%" y="655.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="24.2472%" y="629" width="0.0528%" height="15" fill="rgb(213,74,28)" fg:x="459" fg:w="1"/><text x="24.4972%" y="639.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (2 samples, 0.11%)</title><rect x="24.2472%" y="821" width="0.1057%" height="15" fill="rgb(224,132,34)" fg:x="459" fg:w="2"/><text x="24.4972%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.05%)</title><rect x="24.3001%" y="805" width="0.0528%" height="15" fill="rgb(222,101,24)" fg:x="460" fg:w="1"/><text x="24.5501%" y="815.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for core::option::Option&lt;T&gt;&gt;::serialize (1 samples, 0.05%)</title><rect x="24.3001%" y="789" width="0.0528%" height="15" fill="rgb(254,142,4)" fg:x="460" fg:w="1"/><text x="24.5501%" y="799.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_some (1 samples, 0.05%)</title><rect x="24.3001%" y="773" width="0.0528%" height="15" fill="rgb(230,229,49)" fg:x="460" fg:w="1"/><text x="24.5501%" y="783.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for u64&gt;::serialize (1 samples, 0.05%)</title><rect x="24.3001%" y="757" width="0.0528%" height="15" fill="rgb(238,70,47)" fg:x="460" fg:w="1"/><text x="24.5501%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (1 samples, 0.05%)</title><rect x="24.3001%" y="741" width="0.0528%" height="15" fill="rgb(231,160,17)" fg:x="460" fg:w="1"/><text x="24.5501%" y="751.50"></text></g><g><title>maelstrom-txn`itoa::Buffer::new (1 samples, 0.05%)</title><rect x="24.3001%" y="725" width="0.0528%" height="15" fill="rgb(218,68,53)" fg:x="460" fg:w="1"/><text x="24.5501%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.05%)</title><rect x="24.3529%" y="725" width="0.0528%" height="15" fill="rgb(236,111,10)" fg:x="461" fg:w="1"/><text x="24.6029%" y="735.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_object_key (1 samples, 0.05%)</title><rect x="24.3529%" y="709" width="0.0528%" height="15" fill="rgb(224,34,41)" fg:x="461" fg:w="1"/><text x="24.6029%" y="719.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="24.3529%" y="693" width="0.0528%" height="15" fill="rgb(241,118,19)" fg:x="461" fg:w="1"/><text x="24.6029%" y="703.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="24.3529%" y="677" width="0.0528%" height="15" fill="rgb(238,129,25)" fg:x="461" fg:w="1"/><text x="24.6029%" y="687.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="24.3529%" y="661" width="0.0528%" height="15" fill="rgb(238,22,31)" fg:x="461" fg:w="1"/><text x="24.6029%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="24.3529%" y="645" width="0.0528%" height="15" fill="rgb(222,174,48)" fg:x="461" fg:w="1"/><text x="24.6029%" y="655.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="24.3529%" y="629" width="0.0528%" height="15" fill="rgb(206,152,40)" fg:x="461" fg:w="1"/><text x="24.6029%" y="639.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::MessageBody&gt;::serialize (6 samples, 0.32%)</title><rect x="24.1416%" y="837" width="0.3170%" height="15" fill="rgb(218,99,54)" fg:x="457" fg:w="6"/><text x="24.3916%" y="847.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.11%)</title><rect x="24.3529%" y="821" width="0.1057%" height="15" fill="rgb(220,174,26)" fg:x="461" fg:w="2"/><text x="24.6029%" y="831.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::MessageExtra&gt;::serialize (2 samples, 0.11%)</title><rect x="24.3529%" y="805" width="0.1057%" height="15" fill="rgb(245,116,9)" fg:x="461" fg:w="2"/><text x="24.6029%" y="815.50"></text></g><g><title>maelstrom-txn`serde::__private::ser::serialize_tagged_newtype (2 samples, 0.11%)</title><rect x="24.3529%" y="789" width="0.1057%" height="15" fill="rgb(209,72,35)" fg:x="461" fg:w="2"/><text x="24.6029%" y="799.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::KvReadExtra&gt;::serialize (2 samples, 0.11%)</title><rect x="24.3529%" y="773" width="0.1057%" height="15" fill="rgb(226,126,21)" fg:x="461" fg:w="2"/><text x="24.6029%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::ser::FlatMapSerializeStruct&lt;M&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.11%)</title><rect x="24.3529%" y="757" width="0.1057%" height="15" fill="rgb(227,192,1)" fg:x="461" fg:w="2"/><text x="24.6029%" y="767.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (2 samples, 0.11%)</title><rect x="24.3529%" y="741" width="0.1057%" height="15" fill="rgb(237,180,29)" fg:x="461" fg:w="2"/><text x="24.6029%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.05%)</title><rect x="24.4057%" y="725" width="0.0528%" height="15" fill="rgb(230,197,35)" fg:x="462" fg:w="1"/><text x="24.6557%" y="735.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_object_value (1 samples, 0.05%)</title><rect x="24.4057%" y="709" width="0.0528%" height="15" fill="rgb(246,193,31)" fg:x="462" fg:w="1"/><text x="24.6557%" y="719.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_string (1 samples, 0.05%)</title><rect x="24.4585%" y="805" width="0.0528%" height="15" fill="rgb(241,36,4)" fg:x="463" fg:w="1"/><text x="24.7085%" y="815.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="24.5114%" y="709" width="0.0528%" height="15" fill="rgb(241,130,17)" fg:x="464" fg:w="1"/><text x="24.7614%" y="719.50"></text></g><g><title>maelstrom-txn`core::ub_checks::is_nonoverlapping::runtime (1 samples, 0.05%)</title><rect x="24.5114%" y="693" width="0.0528%" height="15" fill="rgb(206,137,32)" fg:x="464" fg:w="1"/><text x="24.7614%" y="703.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::end_string (2 samples, 0.11%)</title><rect x="24.5114%" y="789" width="0.1057%" height="15" fill="rgb(237,228,51)" fg:x="464" fg:w="2"/><text x="24.7614%" y="799.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.11%)</title><rect x="24.5114%" y="773" width="0.1057%" height="15" fill="rgb(243,6,42)" fg:x="464" fg:w="2"/><text x="24.7614%" y="783.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.11%)</title><rect x="24.5114%" y="757" width="0.1057%" height="15" fill="rgb(251,74,28)" fg:x="464" fg:w="2"/><text x="24.7614%" y="767.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.11%)</title><rect x="24.5114%" y="741" width="0.1057%" height="15" fill="rgb(218,20,49)" fg:x="464" fg:w="2"/><text x="24.7614%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.11%)</title><rect x="24.5114%" y="725" width="0.1057%" height="15" fill="rgb(238,28,14)" fg:x="464" fg:w="2"/><text x="24.7614%" y="735.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.05%)</title><rect x="24.5642%" y="709" width="0.0528%" height="15" fill="rgb(229,40,46)" fg:x="465" fg:w="1"/><text x="24.8142%" y="719.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_string (14 samples, 0.74%)</title><rect x="23.9303%" y="949" width="0.7396%" height="15" fill="rgb(244,195,20)" fg:x="453" fg:w="14"/><text x="24.1803%" y="959.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_vec (14 samples, 0.74%)</title><rect x="23.9303%" y="933" width="0.7396%" height="15" fill="rgb(253,56,35)" fg:x="453" fg:w="14"/><text x="24.1803%" y="943.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_writer (13 samples, 0.69%)</title><rect x="23.9831%" y="917" width="0.6867%" height="15" fill="rgb(210,149,44)" fg:x="454" fg:w="13"/><text x="24.2331%" y="927.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::Message&gt;::serialize (13 samples, 0.69%)</title><rect x="23.9831%" y="901" width="0.6867%" height="15" fill="rgb(240,135,12)" fg:x="454" fg:w="13"/><text x="24.2331%" y="911.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.63%)</title><rect x="24.0359%" y="885" width="0.6339%" height="15" fill="rgb(251,24,50)" fg:x="455" fg:w="12"/><text x="24.2859%" y="895.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (12 samples, 0.63%)</title><rect x="24.0359%" y="869" width="0.6339%" height="15" fill="rgb(243,200,47)" fg:x="455" fg:w="12"/><text x="24.2859%" y="879.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.53%)</title><rect x="24.1416%" y="853" width="0.5283%" height="15" fill="rgb(224,166,26)" fg:x="457" fg:w="10"/><text x="24.3916%" y="863.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (4 samples, 0.21%)</title><rect x="24.4585%" y="837" width="0.2113%" height="15" fill="rgb(233,0,47)" fg:x="463" fg:w="4"/><text x="24.7085%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (4 samples, 0.21%)</title><rect x="24.4585%" y="821" width="0.2113%" height="15" fill="rgb(253,80,5)" fg:x="463" fg:w="4"/><text x="24.7085%" y="831.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (3 samples, 0.16%)</title><rect x="24.5114%" y="805" width="0.1585%" height="15" fill="rgb(214,133,25)" fg:x="464" fg:w="3"/><text x="24.7614%" y="815.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (1 samples, 0.05%)</title><rect x="24.6170%" y="789" width="0.0528%" height="15" fill="rgb(209,27,14)" fg:x="466" fg:w="1"/><text x="24.8670%" y="799.50"></text></g><g><title>maelstrom-txn`maelstrom_node::node::Node::sync_rpc (79 samples, 4.17%)</title><rect x="20.7607%" y="965" width="4.1733%" height="15" fill="rgb(219,102,51)" fg:x="393" fg:w="79"/><text x="21.0107%" y="975.50">maels..</text></g><g><title>maelstrom-txn`std::io::stdio::_eprint (5 samples, 0.26%)</title><rect x="24.6698%" y="949" width="0.2641%" height="15" fill="rgb(237,18,16)" fg:x="467" fg:w="5"/><text x="24.9198%" y="959.50"></text></g><g><title>maelstrom-txn`&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (5 samples, 0.26%)</title><rect x="24.6698%" y="933" width="0.2641%" height="15" fill="rgb(241,85,17)" fg:x="467" fg:w="5"/><text x="24.9198%" y="943.50"></text></g><g><title>maelstrom-txn`core::fmt::write (5 samples, 0.26%)</title><rect x="24.6698%" y="917" width="0.2641%" height="15" fill="rgb(236,90,42)" fg:x="467" fg:w="5"/><text x="24.9198%" y="927.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (4 samples, 0.21%)</title><rect x="24.7227%" y="901" width="0.2113%" height="15" fill="rgb(249,57,21)" fg:x="468" fg:w="4"/><text x="24.9727%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`write (4 samples, 0.21%)</title><rect x="24.7227%" y="885" width="0.2113%" height="15" fill="rgb(243,12,36)" fg:x="468" fg:w="4"/><text x="24.9727%" y="895.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;serde_json::value::de::MapKeyDeserializer&gt; (1 samples, 0.05%)</title><rect x="25.0396%" y="773" width="0.0528%" height="15" fill="rgb(253,128,47)" fg:x="474" fg:w="1"/><text x="25.2896%" y="783.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::borrow::Cow&lt;str&gt;&gt; (1 samples, 0.05%)</title><rect x="25.0396%" y="757" width="0.0528%" height="15" fill="rgb(207,33,20)" fg:x="474" fg:w="1"/><text x="25.2896%" y="767.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.05%)</title><rect x="25.0396%" y="741" width="0.0528%" height="15" fill="rgb(233,215,35)" fg:x="474" fg:w="1"/><text x="25.2896%" y="751.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="25.0396%" y="725" width="0.0528%" height="15" fill="rgb(249,188,52)" fg:x="474" fg:w="1"/><text x="25.2896%" y="735.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="25.0396%" y="709" width="0.0528%" height="15" fill="rgb(225,12,32)" fg:x="474" fg:w="1"/><text x="25.2896%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="25.0396%" y="693" width="0.0528%" height="15" fill="rgb(247,98,14)" fg:x="474" fg:w="1"/><text x="25.2896%" y="703.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1 samples, 0.05%)</title><rect x="25.0396%" y="677" width="0.0528%" height="15" fill="rgb(247,219,48)" fg:x="474" fg:w="1"/><text x="25.2896%" y="687.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1 samples, 0.05%)</title><rect x="25.0396%" y="661" width="0.0528%" height="15" fill="rgb(253,60,48)" fg:x="474" fg:w="1"/><text x="25.2896%" y="671.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::eat_char (1 samples, 0.05%)</title><rect x="25.1453%" y="741" width="0.0528%" height="15" fill="rgb(245,15,52)" fg:x="476" fg:w="1"/><text x="25.3953%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::discard (1 samples, 0.05%)</title><rect x="25.1453%" y="725" width="0.0528%" height="15" fill="rgb(220,133,28)" fg:x="476" fg:w="1"/><text x="25.3953%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::discard (1 samples, 0.05%)</title><rect x="25.1453%" y="709" width="0.0528%" height="15" fill="rgb(217,180,4)" fg:x="476" fg:w="1"/><text x="25.3953%" y="719.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::next_char (1 samples, 0.05%)</title><rect x="25.1981%" y="741" width="0.0528%" height="15" fill="rgb(251,24,1)" fg:x="477" fg:w="1"/><text x="25.4481%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::next (1 samples, 0.05%)</title><rect x="25.1981%" y="725" width="0.0528%" height="15" fill="rgb(212,185,49)" fg:x="477" fg:w="1"/><text x="25.4481%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::next (1 samples, 0.05%)</title><rect x="25.1981%" y="709" width="0.0528%" height="15" fill="rgb(215,175,22)" fg:x="477" fg:w="1"/><text x="25.4481%" y="719.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::parse_number (1 samples, 0.05%)</title><rect x="25.2509%" y="741" width="0.0528%" height="15" fill="rgb(250,205,14)" fg:x="478" fg:w="1"/><text x="25.5009%" y="751.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::parse_integer (4 samples, 0.21%)</title><rect x="25.1453%" y="757" width="0.2113%" height="15" fill="rgb(225,211,22)" fg:x="476" fg:w="4"/><text x="25.3953%" y="767.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::peek_or_null (1 samples, 0.05%)</title><rect x="25.3038%" y="741" width="0.0528%" height="15" fill="rgb(251,179,42)" fg:x="479" fg:w="1"/><text x="25.5538%" y="751.50"></text></g><g><title>maelstrom-txn`core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.05%)</title><rect x="25.3038%" y="725" width="0.0528%" height="15" fill="rgb(208,216,51)" fg:x="479" fg:w="1"/><text x="25.5538%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.37%)</title><rect x="25.0396%" y="821" width="0.3698%" height="15" fill="rgb(235,36,11)" fg:x="474" fg:w="7"/><text x="25.2896%" y="831.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for usize&gt;::deserialize (7 samples, 0.37%)</title><rect x="25.0396%" y="805" width="0.3698%" height="15" fill="rgb(213,189,28)" fg:x="474" fg:w="7"/><text x="25.2896%" y="815.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::de::MapKeyDeserializer as serde::de::Deserializer&gt;::deserialize_u64 (7 samples, 0.37%)</title><rect x="25.0396%" y="789" width="0.3698%" height="15" fill="rgb(227,203,42)" fg:x="474" fg:w="7"/><text x="25.2896%" y="799.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::deserialize_number (6 samples, 0.32%)</title><rect x="25.0924%" y="773" width="0.3170%" height="15" fill="rgb(244,72,36)" fg:x="475" fg:w="6"/><text x="25.3424%" y="783.50"></text></g><g><title>maelstrom-txn`serde_json::de::ParserNumber::visit (1 samples, 0.05%)</title><rect x="25.3566%" y="757" width="0.0528%" height="15" fill="rgb(213,53,17)" fg:x="480" fg:w="1"/><text x="25.6066%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for usize&gt;::deserialize::PrimitiveVisitor as serde::de::Visitor&gt;::visit_u64 (1 samples, 0.05%)</title><rect x="25.3566%" y="741" width="0.0528%" height="15" fill="rgb(207,167,3)" fg:x="480" fg:w="1"/><text x="25.6066%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="25.4094%" y="789" width="0.0528%" height="15" fill="rgb(216,98,30)" fg:x="481" fg:w="1"/><text x="25.6594%" y="799.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::init_front (1 samples, 0.05%)</title><rect x="25.4622%" y="773" width="0.0528%" height="15" fill="rgb(236,123,15)" fg:x="482" fg:w="1"/><text x="25.7122%" y="783.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (1 samples, 0.05%)</title><rect x="25.5151%" y="741" width="0.0528%" height="15" fill="rgb(248,81,50)" fg:x="483" fg:w="1"/><text x="25.7651%" y="751.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (1 samples, 0.05%)</title><rect x="25.5679%" y="709" width="0.0528%" height="15" fill="rgb(214,120,4)" fg:x="484" fg:w="1"/><text x="25.8179%" y="719.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (1 samples, 0.05%)</title><rect x="25.5679%" y="693" width="0.0528%" height="15" fill="rgb(208,179,34)" fg:x="484" fg:w="1"/><text x="25.8179%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (12 samples, 0.63%)</title><rect x="25.0396%" y="837" width="0.6339%" height="15" fill="rgb(227,140,7)" fg:x="474" fg:w="12"/><text x="25.2896%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::map::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.26%)</title><rect x="25.4094%" y="821" width="0.2641%" height="15" fill="rgb(214,22,6)" fg:x="481" fg:w="5"/><text x="25.6594%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.26%)</title><rect x="25.4094%" y="805" width="0.2641%" height="15" fill="rgb(207,137,27)" fg:x="481" fg:w="5"/><text x="25.6594%" y="815.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.21%)</title><rect x="25.4622%" y="789" width="0.2113%" height="15" fill="rgb(210,8,46)" fg:x="482" fg:w="4"/><text x="25.7122%" y="799.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (3 samples, 0.16%)</title><rect x="25.5151%" y="773" width="0.1585%" height="15" fill="rgb(240,16,54)" fg:x="483" fg:w="3"/><text x="25.7651%" y="783.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::mem::replace (3 samples, 0.16%)</title><rect x="25.5151%" y="757" width="0.1585%" height="15" fill="rgb(211,209,29)" fg:x="483" fg:w="3"/><text x="25.7651%" y="767.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (2 samples, 0.11%)</title><rect x="25.5679%" y="741" width="0.1057%" height="15" fill="rgb(226,228,24)" fg:x="484" fg:w="2"/><text x="25.8179%" y="751.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (2 samples, 0.11%)</title><rect x="25.5679%" y="725" width="0.1057%" height="15" fill="rgb(222,84,9)" fg:x="484" fg:w="2"/><text x="25.8179%" y="735.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (1 samples, 0.05%)</title><rect x="25.6207%" y="709" width="0.0528%" height="15" fill="rgb(234,203,30)" fg:x="485" fg:w="1"/><text x="25.8707%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="25.6207%" y="693" width="0.0528%" height="15" fill="rgb(238,109,14)" fg:x="485" fg:w="1"/><text x="25.8707%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="25.6207%" y="677" width="0.0528%" height="15" fill="rgb(233,206,34)" fg:x="485" fg:w="1"/><text x="25.8707%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.05%)</title><rect x="25.6207%" y="661" width="0.0528%" height="15" fill="rgb(220,167,47)" fg:x="485" fg:w="1"/><text x="25.8707%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.05%)</title><rect x="25.6207%" y="645" width="0.0528%" height="15" fill="rgb(238,105,10)" fg:x="485" fg:w="1"/><text x="25.8707%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::MapAccess&gt;::next_entry (14 samples, 0.74%)</title><rect x="24.9868%" y="885" width="0.7396%" height="15" fill="rgb(213,227,17)" fg:x="473" fg:w="14"/><text x="25.2368%" y="895.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_entry (14 samples, 0.74%)</title><rect x="24.9868%" y="869" width="0.7396%" height="15" fill="rgb(217,132,38)" fg:x="473" fg:w="14"/><text x="25.2368%" y="879.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_entry_seed (14 samples, 0.74%)</title><rect x="24.9868%" y="853" width="0.7396%" height="15" fill="rgb(242,146,4)" fg:x="473" fg:w="14"/><text x="25.2368%" y="863.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.05%)</title><rect x="25.6735%" y="837" width="0.0528%" height="15" fill="rgb(212,61,9)" fg:x="486" fg:w="1"/><text x="25.9235%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::MapAccess&gt;::size_hint (1 samples, 0.05%)</title><rect x="25.7264%" y="885" width="0.0528%" height="15" fill="rgb(247,126,22)" fg:x="487" fg:w="1"/><text x="25.9764%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;std::hash::random::RandomState as core::default::Default&gt;::default (1 samples, 0.05%)</title><rect x="25.7792%" y="885" width="0.0528%" height="15" fill="rgb(220,196,2)" fg:x="488" fg:w="1"/><text x="26.0292%" y="895.50"></text></g><g><title>maelstrom-txn`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.05%)</title><rect x="25.7792%" y="869" width="0.0528%" height="15" fill="rgb(208,46,4)" fg:x="488" fg:w="1"/><text x="26.0292%" y="879.50"></text></g><g><title>maelstrom-txn`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.05%)</title><rect x="25.7792%" y="853" width="0.0528%" height="15" fill="rgb(252,104,46)" fg:x="488" fg:w="1"/><text x="26.0292%" y="863.50"></text></g><g><title>maelstrom-txn`core::ops::function::FnOnce::call_once (1 samples, 0.05%)</title><rect x="25.7792%" y="837" width="0.0528%" height="15" fill="rgb(237,152,48)" fg:x="488" fg:w="1"/><text x="26.0292%" y="847.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.05%)</title><rect x="25.7792%" y="821" width="0.0528%" height="15" fill="rgb(221,59,37)" fg:x="488" fg:w="1"/><text x="26.0292%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.05%)</title><rect x="25.8320%" y="837" width="0.0528%" height="15" fill="rgb(209,202,51)" fg:x="489" fg:w="1"/><text x="26.0820%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.05%)</title><rect x="25.8320%" y="821" width="0.0528%" height="15" fill="rgb(228,81,30)" fg:x="489" fg:w="1"/><text x="26.0820%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.05%)</title><rect x="25.8320%" y="805" width="0.0528%" height="15" fill="rgb(227,42,39)" fg:x="489" fg:w="1"/><text x="26.0820%" y="815.50"></text></g><g><title>maelstrom-txn`core::hash::sip::u8to64_le (2 samples, 0.11%)</title><rect x="25.8848%" y="757" width="0.1057%" height="15" fill="rgb(221,26,2)" fg:x="490" fg:w="2"/><text x="26.1348%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.16%)</title><rect x="25.8848%" y="773" width="0.1585%" height="15" fill="rgb(254,61,31)" fg:x="490" fg:w="3"/><text x="26.1348%" y="783.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.05%)</title><rect x="25.9905%" y="757" width="0.0528%" height="15" fill="rgb(222,173,38)" fg:x="492" fg:w="1"/><text x="26.2405%" y="767.50"></text></g><g><title>maelstrom-txn`core::ub_checks::is_nonoverlapping::runtime (1 samples, 0.05%)</title><rect x="25.9905%" y="741" width="0.0528%" height="15" fill="rgb(218,50,12)" fg:x="492" fg:w="1"/><text x="26.2405%" y="751.50"></text></g><g><title>maelstrom-txn`core::hash::BuildHasher::hash_one (5 samples, 0.26%)</title><rect x="25.8320%" y="853" width="0.2641%" height="15" fill="rgb(223,88,40)" fg:x="489" fg:w="5"/><text x="26.0820%" y="863.50"></text></g><g><title>maelstrom-txn`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.21%)</title><rect x="25.8848%" y="837" width="0.2113%" height="15" fill="rgb(237,54,19)" fg:x="490" fg:w="4"/><text x="26.1348%" y="847.50"></text></g><g><title>maelstrom-txn`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash (4 samples, 0.21%)</title><rect x="25.8848%" y="821" width="0.2113%" height="15" fill="rgb(251,129,25)" fg:x="490" fg:w="4"/><text x="26.1348%" y="831.50"></text></g><g><title>maelstrom-txn`core::hash::Hasher::write_usize (4 samples, 0.21%)</title><rect x="25.8848%" y="805" width="0.2113%" height="15" fill="rgb(238,97,19)" fg:x="490" fg:w="4"/><text x="26.1348%" y="815.50"></text></g><g><title>maelstrom-txn`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.21%)</title><rect x="25.8848%" y="789" width="0.2113%" height="15" fill="rgb(240,169,18)" fg:x="490" fg:w="4"/><text x="26.1348%" y="799.50"></text></g><g><title>maelstrom-txn`core::hash::sip::u8to64_le (1 samples, 0.05%)</title><rect x="26.0433%" y="773" width="0.0528%" height="15" fill="rgb(230,187,49)" fg:x="493" fg:w="1"/><text x="26.2933%" y="783.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.05%)</title><rect x="26.0961%" y="837" width="0.0528%" height="15" fill="rgb(209,44,26)" fg:x="494" fg:w="1"/><text x="26.3461%" y="847.50"></text></g><g><title>maelstrom-txn`core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.05%)</title><rect x="26.2018%" y="821" width="0.0528%" height="15" fill="rgb(244,0,6)" fg:x="496" fg:w="1"/><text x="26.4518%" y="831.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.05%)</title><rect x="26.2018%" y="805" width="0.0528%" height="15" fill="rgb(248,18,21)" fg:x="496" fg:w="1"/><text x="26.4518%" y="815.50"></text></g><g><title>maelstrom-txn`core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.05%)</title><rect x="26.2546%" y="821" width="0.0528%" height="15" fill="rgb(245,180,19)" fg:x="497" fg:w="1"/><text x="26.5046%" y="831.50"></text></g><g><title>maelstrom-txn`core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.05%)</title><rect x="26.3074%" y="821" width="0.0528%" height="15" fill="rgb(252,118,36)" fg:x="498" fg:w="1"/><text x="26.5574%" y="831.50"></text></g><g><title>maelstrom-txn`std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (11 samples, 0.58%)</title><rect x="25.8320%" y="885" width="0.5811%" height="15" fill="rgb(210,224,19)" fg:x="489" fg:w="11"/><text x="26.0820%" y="895.50"></text></g><g><title>maelstrom-txn`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.58%)</title><rect x="25.8320%" y="869" width="0.5811%" height="15" fill="rgb(218,30,24)" fg:x="489" fg:w="11"/><text x="26.0820%" y="879.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (6 samples, 0.32%)</title><rect x="26.0961%" y="853" width="0.3170%" height="15" fill="rgb(219,75,50)" fg:x="494" fg:w="6"/><text x="26.3461%" y="863.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (5 samples, 0.26%)</title><rect x="26.1490%" y="837" width="0.2641%" height="15" fill="rgb(234,72,50)" fg:x="495" fg:w="5"/><text x="26.3990%" y="847.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::find_insert_slot_in_group (1 samples, 0.05%)</title><rect x="26.3603%" y="821" width="0.0528%" height="15" fill="rgb(219,100,48)" fg:x="499" fg:w="1"/><text x="26.6103%" y="831.50"></text></g><g><title>maelstrom-txn`core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.05%)</title><rect x="26.3603%" y="805" width="0.0528%" height="15" fill="rgb(253,5,41)" fg:x="499" fg:w="1"/><text x="26.6103%" y="815.50"></text></g><g><title>maelstrom-txn`core::core_arch::x86::m128iExt::as_i8x16 (1 samples, 0.05%)</title><rect x="26.3603%" y="789" width="0.0528%" height="15" fill="rgb(247,181,11)" fg:x="499" fg:w="1"/><text x="26.6103%" y="799.50"></text></g><g><title>maelstrom-txn`serde_json::value::from_value (29 samples, 1.53%)</title><rect x="24.9340%" y="965" width="1.5320%" height="15" fill="rgb(222,223,25)" fg:x="472" fg:w="29"/><text x="25.1840%" y="975.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (29 samples, 1.53%)</title><rect x="24.9340%" y="949" width="1.5320%" height="15" fill="rgb(214,198,28)" fg:x="472" fg:w="29"/><text x="25.1840%" y="959.50"></text></g><g><title>maelstrom-txn`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (29 samples, 1.53%)</title><rect x="24.9340%" y="933" width="1.5320%" height="15" fill="rgb(230,46,43)" fg:x="472" fg:w="29"/><text x="25.1840%" y="943.50"></text></g><g><title>maelstrom-txn`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (29 samples, 1.53%)</title><rect x="24.9340%" y="917" width="1.5320%" height="15" fill="rgb(233,65,53)" fg:x="472" fg:w="29"/><text x="25.1840%" y="927.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize::MapVisitor&lt;K,V,S&gt; as serde::de::Visitor&gt;::visit_map (29 samples, 1.53%)</title><rect x="24.9340%" y="901" width="1.5320%" height="15" fill="rgb(221,121,27)" fg:x="472" fg:w="29"/><text x="25.1840%" y="911.50"></text></g><g><title>maelstrom-txn`std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (1 samples, 0.05%)</title><rect x="26.4131%" y="885" width="0.0528%" height="15" fill="rgb(247,70,47)" fg:x="500" fg:w="1"/><text x="26.6631%" y="895.50"></text></g><g><title>maelstrom-txn`hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (1 samples, 0.05%)</title><rect x="26.4131%" y="869" width="0.0528%" height="15" fill="rgb(228,85,35)" fg:x="500" fg:w="1"/><text x="26.6631%" y="879.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="26.4131%" y="853" width="0.0528%" height="15" fill="rgb(209,50,18)" fg:x="500" fg:w="1"/><text x="26.6631%" y="863.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::fallible_with_capacity (1 samples, 0.05%)</title><rect x="26.4131%" y="837" width="0.0528%" height="15" fill="rgb(250,19,35)" fg:x="500" fg:w="1"/><text x="26.6631%" y="847.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.05%)</title><rect x="26.4131%" y="821" width="0.0528%" height="15" fill="rgb(253,107,29)" fg:x="500" fg:w="1"/><text x="26.6631%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="26.4131%" y="805" width="0.0528%" height="15" fill="rgb(252,179,29)" fg:x="500" fg:w="1"/><text x="26.6631%" y="815.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="26.4131%" y="789" width="0.0528%" height="15" fill="rgb(238,194,6)" fg:x="500" fg:w="1"/><text x="26.6631%" y="799.50"></text></g><g><title>maelstrom-txn`alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="26.4131%" y="773" width="0.0528%" height="15" fill="rgb(238,164,29)" fg:x="500" fg:w="1"/><text x="26.6631%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="26.4131%" y="757" width="0.0528%" height="15" fill="rgb(224,25,9)" fg:x="500" fg:w="1"/><text x="26.6631%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.05%)</title><rect x="26.4131%" y="741" width="0.0528%" height="15" fill="rgb(244,153,23)" fg:x="500" fg:w="1"/><text x="26.6631%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.11%)</title><rect x="26.5188%" y="885" width="0.1057%" height="15" fill="rgb(212,203,14)" fg:x="502" fg:w="2"/><text x="26.7688%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.21%)</title><rect x="26.6244%" y="885" width="0.2113%" height="15" fill="rgb(220,164,20)" fg:x="504" fg:w="4"/><text x="26.8744%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.21%)</title><rect x="26.6244%" y="869" width="0.2113%" height="15" fill="rgb(222,203,48)" fg:x="504" fg:w="4"/><text x="26.8744%" y="879.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (2 samples, 0.11%)</title><rect x="26.7301%" y="853" width="0.1057%" height="15" fill="rgb(215,159,22)" fg:x="506" fg:w="2"/><text x="26.9801%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`write (128 samples, 6.76%)</title><rect x="27.7338%" y="773" width="6.7618%" height="15" fill="rgb(216,183,47)" fg:x="525" fg:w="128"/><text x="27.9838%" y="783.50">libsystem..</text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (143 samples, 7.55%)</title><rect x="27.0998%" y="805" width="7.5541%" height="15" fill="rgb(229,195,25)" fg:x="513" fg:w="143"/><text x="27.3498%" y="815.50">maelstrom-..</text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (135 samples, 7.13%)</title><rect x="27.5225%" y="789" width="7.1315%" height="15" fill="rgb(224,132,51)" fg:x="521" fg:w="135"/><text x="27.7725%" y="799.50">maelstrom-..</text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (3 samples, 0.16%)</title><rect x="34.4955%" y="773" width="0.1585%" height="15" fill="rgb(240,63,7)" fg:x="653" fg:w="3"/><text x="34.7455%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="34.6540%" y="805" width="0.0528%" height="15" fill="rgb(249,182,41)" fg:x="656" fg:w="1"/><text x="34.9040%" y="815.50"></text></g><g><title>maelstrom-txn`core::fmt::num::_&lt;impl core::fmt::Debug for usize&gt;::fmt (148 samples, 7.82%)</title><rect x="26.9942%" y="837" width="7.8183%" height="15" fill="rgb(243,47,26)" fg:x="511" fg:w="148"/><text x="27.2442%" y="847.50">maelstrom-t..</text></g><g><title>maelstrom-txn`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (148 samples, 7.82%)</title><rect x="26.9942%" y="821" width="7.8183%" height="15" fill="rgb(233,48,2)" fg:x="511" fg:w="148"/><text x="27.2442%" y="831.50">maelstrom-t..</text></g><g><title>maelstrom-txn`core::fmt::Formatter::pad_integral (2 samples, 0.11%)</title><rect x="34.7068%" y="805" width="0.1057%" height="15" fill="rgb(244,165,34)" fg:x="657" fg:w="2"/><text x="34.9568%" y="815.50"></text></g><g><title>maelstrom-txn`&lt;&amp;T as core::fmt::Debug&gt;::fmt (151 samples, 7.98%)</title><rect x="26.8885%" y="853" width="7.9768%" height="15" fill="rgb(207,89,7)" fg:x="509" fg:w="151"/><text x="27.1385%" y="863.50">maelstrom-t..</text></g><g><title>maelstrom-txn`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.05%)</title><rect x="34.8125%" y="837" width="0.0528%" height="15" fill="rgb(244,117,36)" fg:x="659" fg:w="1"/><text x="35.0625%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`write (41 samples, 2.17%)</title><rect x="34.9709%" y="821" width="2.1659%" height="15" fill="rgb(226,144,34)" fg:x="662" fg:w="41"/><text x="35.2209%" y="831.50">l..</text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (44 samples, 2.32%)</title><rect x="34.8653%" y="853" width="2.3244%" height="15" fill="rgb(213,23,19)" fg:x="660" fg:w="44"/><text x="35.1153%" y="863.50">m..</text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (43 samples, 2.27%)</title><rect x="34.9181%" y="837" width="2.2715%" height="15" fill="rgb(217,75,12)" fg:x="661" fg:w="43"/><text x="35.1681%" y="847.50">m..</text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (1 samples, 0.05%)</title><rect x="37.1368%" y="821" width="0.0528%" height="15" fill="rgb(224,159,17)" fg:x="703" fg:w="1"/><text x="37.3868%" y="831.50"></text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::entry (197 samples, 10.41%)</title><rect x="26.8357%" y="885" width="10.4068%" height="15" fill="rgb(217,118,1)" fg:x="508" fg:w="197"/><text x="27.0857%" y="895.50">maelstrom-txn`c..</text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::key (197 samples, 10.41%)</title><rect x="26.8357%" y="869" width="10.4068%" height="15" fill="rgb(232,180,48)" fg:x="508" fg:w="197"/><text x="27.0857%" y="879.50">maelstrom-txn`c..</text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="37.1896%" y="853" width="0.0528%" height="15" fill="rgb(230,27,33)" fg:x="704" fg:w="1"/><text x="37.4396%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`write (57 samples, 3.01%)</title><rect x="37.9292%" y="789" width="3.0111%" height="15" fill="rgb(205,31,21)" fg:x="718" fg:w="57"/><text x="38.1792%" y="799.50">lib..</text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (63 samples, 3.33%)</title><rect x="37.7179%" y="821" width="3.3281%" height="15" fill="rgb(253,59,4)" fg:x="714" fg:w="63"/><text x="37.9679%" y="831.50">mae..</text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (59 samples, 3.12%)</title><rect x="37.9292%" y="805" width="3.1167%" height="15" fill="rgb(224,201,9)" fg:x="718" fg:w="59"/><text x="38.1792%" y="815.50">mae..</text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (2 samples, 0.11%)</title><rect x="40.9403%" y="789" width="0.1057%" height="15" fill="rgb(229,206,30)" fg:x="775" fg:w="2"/><text x="41.1903%" y="799.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="41.0460%" y="821" width="0.0528%" height="15" fill="rgb(212,67,47)" fg:x="777" fg:w="1"/><text x="41.2960%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`write (101 samples, 5.34%)</title><rect x="41.2573%" y="805" width="5.3354%" height="15" fill="rgb(211,96,50)" fg:x="781" fg:w="101"/><text x="41.5073%" y="815.50">libsyst..</text></g><g><title>maelstrom-txn`&lt;str as core::fmt::Debug&gt;::fmt (173 samples, 9.14%)</title><rect x="37.5594%" y="837" width="9.1389%" height="15" fill="rgb(252,114,18)" fg:x="711" fg:w="173"/><text x="37.8094%" y="847.50">maelstrom-txn..</text></g><g><title>maelstrom-txn`core::fmt::Write::write_char (106 samples, 5.60%)</title><rect x="41.0988%" y="821" width="5.5996%" height="15" fill="rgb(223,58,37)" fg:x="778" fg:w="106"/><text x="41.3488%" y="831.50">maelstr..</text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (2 samples, 0.11%)</title><rect x="46.5927%" y="805" width="0.1057%" height="15" fill="rgb(237,70,4)" fg:x="882" fg:w="2"/><text x="46.8427%" y="815.50"></text></g><g><title>maelstrom-txn`core::fmt::Write::write_char (1 samples, 0.05%)</title><rect x="46.6984%" y="837" width="0.0528%" height="15" fill="rgb(244,85,46)" fg:x="884" fg:w="1"/><text x="46.9484%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;&amp;T as core::fmt::Debug&gt;::fmt (179 samples, 9.46%)</title><rect x="37.3481%" y="869" width="9.4559%" height="15" fill="rgb(223,39,52)" fg:x="707" fg:w="179"/><text x="37.5981%" y="879.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::fmt::Debug&gt;::fmt (179 samples, 9.46%)</title><rect x="37.3481%" y="853" width="9.4559%" height="15" fill="rgb(218,200,14)" fg:x="707" fg:w="179"/><text x="37.5981%" y="863.50">maelstrom-txn`..</text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.05%)</title><rect x="46.7512%" y="837" width="0.0528%" height="15" fill="rgb(208,171,16)" fg:x="885" fg:w="1"/><text x="47.0012%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::fmt::Debug&gt;::fmt (1 samples, 0.05%)</title><rect x="46.8040%" y="869" width="0.0528%" height="15" fill="rgb(234,200,18)" fg:x="886" fg:w="1"/><text x="47.0540%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`write (51 samples, 2.69%)</title><rect x="47.1210%" y="837" width="2.6941%" height="15" fill="rgb(228,45,11)" fg:x="892" fg:w="51"/><text x="47.3710%" y="847.50">li..</text></g><g><title>maelstrom-txn`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::fmt::Debug&gt;::fmt (443 samples, 23.40%)</title><rect x="26.4659%" y="917" width="23.4020%" height="15" fill="rgb(237,182,11)" fg:x="501" fg:w="443"/><text x="26.7159%" y="927.50">maelstrom-txn`&lt;std::collections::hash..</text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::entries (443 samples, 23.40%)</title><rect x="26.4659%" y="901" width="23.4020%" height="15" fill="rgb(241,175,49)" fg:x="501" fg:w="443"/><text x="26.7159%" y="911.50">maelstrom-txn`core::fmt::builders::De..</text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::value (239 samples, 12.63%)</title><rect x="37.2425%" y="885" width="12.6255%" height="15" fill="rgb(247,38,35)" fg:x="705" fg:w="239"/><text x="37.4925%" y="895.50">maelstrom-txn`core:..</text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (57 samples, 3.01%)</title><rect x="46.8568%" y="869" width="3.0111%" height="15" fill="rgb(228,39,49)" fg:x="887" fg:w="57"/><text x="47.1068%" y="879.50">mae..</text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (54 samples, 2.85%)</title><rect x="47.0153%" y="853" width="2.8526%" height="15" fill="rgb(226,101,26)" fg:x="890" fg:w="54"/><text x="47.2653%" y="863.50">ma..</text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (1 samples, 0.05%)</title><rect x="49.8151%" y="837" width="0.0528%" height="15" fill="rgb(206,141,19)" fg:x="943" fg:w="1"/><text x="50.0651%" y="847.50"></text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Root::load (557 samples, 29.42%)</title><rect x="20.7607%" y="981" width="29.4242%" height="15" fill="rgb(211,200,13)" fg:x="393" fg:w="557"/><text x="21.0107%" y="991.50">maelstrom-txn`maelstrom_node::transactor2::Root..</text></g><g><title>maelstrom-txn`std::io::stdio::_eprint (449 samples, 23.72%)</title><rect x="26.4659%" y="965" width="23.7190%" height="15" fill="rgb(241,121,6)" fg:x="501" fg:w="449"/><text x="26.7159%" y="975.50">maelstrom-txn`std::io::stdio::_eprint</text></g><g><title>maelstrom-txn`&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (449 samples, 23.72%)</title><rect x="26.4659%" y="949" width="23.7190%" height="15" fill="rgb(234,221,29)" fg:x="501" fg:w="449"/><text x="26.7159%" y="959.50">maelstrom-txn`&lt;&amp;std::io::stdio::Stderr..</text></g><g><title>maelstrom-txn`core::fmt::write (449 samples, 23.72%)</title><rect x="26.4659%" y="933" width="23.7190%" height="15" fill="rgb(229,136,5)" fg:x="501" fg:w="449"/><text x="26.7159%" y="943.50">maelstrom-txn`core::fmt::write</text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (6 samples, 0.32%)</title><rect x="49.8679%" y="917" width="0.3170%" height="15" fill="rgb(238,36,11)" fg:x="944" fg:w="6"/><text x="50.1179%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`write (6 samples, 0.32%)</title><rect x="49.8679%" y="901" width="0.3170%" height="15" fill="rgb(251,55,41)" fg:x="944" fg:w="6"/><text x="50.1179%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="50.2905%" y="949" width="0.0528%" height="15" fill="rgb(242,34,40)" fg:x="952" fg:w="1"/><text x="50.5405%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.11%)</title><rect x="50.4490%" y="885" width="0.1057%" height="15" fill="rgb(215,42,17)" fg:x="955" fg:w="2"/><text x="50.6990%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="50.5547%" y="869" width="0.0528%" height="15" fill="rgb(207,44,46)" fg:x="957" fg:w="1"/><text x="50.8047%" y="879.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (6 samples, 0.32%)</title><rect x="50.3434%" y="917" width="0.3170%" height="15" fill="rgb(211,206,28)" fg:x="953" fg:w="6"/><text x="50.5934%" y="927.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (6 samples, 0.32%)</title><rect x="50.3434%" y="901" width="0.3170%" height="15" fill="rgb(237,167,16)" fg:x="953" fg:w="6"/><text x="50.5934%" y="911.50"></text></g><g><title>maelstrom-txn`core::clone::Clone::clone (2 samples, 0.11%)</title><rect x="50.5547%" y="885" width="0.1057%" height="15" fill="rgb(233,66,6)" fg:x="957" fg:w="2"/><text x="50.8047%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="50.6075%" y="869" width="0.0528%" height="15" fill="rgb(246,123,29)" fg:x="958" fg:w="1"/><text x="50.8575%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.05%)</title><rect x="50.6075%" y="853" width="0.0528%" height="15" fill="rgb(209,62,40)" fg:x="958" fg:w="1"/><text x="50.8575%" y="863.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.05%)</title><rect x="50.6603%" y="917" width="0.0528%" height="15" fill="rgb(218,4,25)" fg:x="959" fg:w="1"/><text x="50.9103%" y="927.50"></text></g><g><title>maelstrom-txn`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (12 samples, 0.63%)</title><rect x="50.2377%" y="965" width="0.6339%" height="15" fill="rgb(253,91,49)" fg:x="951" fg:w="12"/><text x="50.4877%" y="975.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.53%)</title><rect x="50.3434%" y="949" width="0.5283%" height="15" fill="rgb(228,155,29)" fg:x="953" fg:w="10"/><text x="50.5934%" y="959.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.53%)</title><rect x="50.3434%" y="933" width="0.5283%" height="15" fill="rgb(243,57,37)" fg:x="953" fg:w="10"/><text x="50.5934%" y="943.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (3 samples, 0.16%)</title><rect x="50.7132%" y="917" width="0.1585%" height="15" fill="rgb(244,167,17)" fg:x="960" fg:w="3"/><text x="50.9632%" y="927.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::new_uninitialized (2 samples, 0.11%)</title><rect x="50.7660%" y="901" width="0.1057%" height="15" fill="rgb(207,181,38)" fg:x="961" fg:w="2"/><text x="51.0160%" y="911.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.11%)</title><rect x="50.7660%" y="885" width="0.1057%" height="15" fill="rgb(211,8,23)" fg:x="961" fg:w="2"/><text x="51.0160%" y="895.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::alloc_impl (2 samples, 0.11%)</title><rect x="50.7660%" y="869" width="0.1057%" height="15" fill="rgb(235,11,44)" fg:x="961" fg:w="2"/><text x="51.0160%" y="879.50"></text></g><g><title>maelstrom-txn`alloc::alloc::alloc (2 samples, 0.11%)</title><rect x="50.7660%" y="853" width="0.1057%" height="15" fill="rgb(248,18,52)" fg:x="961" fg:w="2"/><text x="51.0160%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.11%)</title><rect x="50.7660%" y="837" width="0.1057%" height="15" fill="rgb(208,4,7)" fg:x="961" fg:w="2"/><text x="51.0160%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.11%)</title><rect x="50.7660%" y="821" width="0.1057%" height="15" fill="rgb(240,17,39)" fg:x="961" fg:w="2"/><text x="51.0160%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.05%)</title><rect x="50.8188%" y="805" width="0.0528%" height="15" fill="rgb(207,170,3)" fg:x="962" fg:w="1"/><text x="51.0688%" y="815.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as alloc::string::ToString&gt;::to_string (1 samples, 0.05%)</title><rect x="50.8716%" y="869" width="0.0528%" height="15" fill="rgb(236,100,52)" fg:x="963" fg:w="1"/><text x="51.1216%" y="879.50"></text></g><g><title>maelstrom-txn`core::option::Option&lt;&amp;T&gt;::cloned (2 samples, 0.11%)</title><rect x="50.9245%" y="853" width="0.1057%" height="15" fill="rgb(246,78,51)" fg:x="964" fg:w="2"/><text x="51.1745%" y="863.50"></text></g><g><title>maelstrom-txn`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="50.9773%" y="837" width="0.0528%" height="15" fill="rgb(211,17,15)" fg:x="965" fg:w="1"/><text x="51.2273%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="50.9773%" y="821" width="0.0528%" height="15" fill="rgb(209,59,46)" fg:x="965" fg:w="1"/><text x="51.2273%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="50.9773%" y="805" width="0.0528%" height="15" fill="rgb(210,92,25)" fg:x="965" fg:w="1"/><text x="51.2273%" y="815.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.05%)</title><rect x="50.9773%" y="789" width="0.0528%" height="15" fill="rgb(238,174,52)" fg:x="965" fg:w="1"/><text x="51.2273%" y="799.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.05%)</title><rect x="50.9773%" y="773" width="0.0528%" height="15" fill="rgb(230,73,7)" fg:x="965" fg:w="1"/><text x="51.2273%" y="783.50"></text></g><g><title>maelstrom-txn`core::clone::Clone::clone (1 samples, 0.05%)</title><rect x="50.9773%" y="757" width="0.0528%" height="15" fill="rgb(243,124,40)" fg:x="965" fg:w="1"/><text x="51.2273%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="50.9773%" y="741" width="0.0528%" height="15" fill="rgb(244,170,11)" fg:x="965" fg:w="1"/><text x="51.2273%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.05%)</title><rect x="50.9773%" y="725" width="0.0528%" height="15" fill="rgb(207,114,54)" fg:x="965" fg:w="1"/><text x="51.2273%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2 samples, 0.11%)</title><rect x="51.0301%" y="789" width="0.1057%" height="15" fill="rgb(205,42,20)" fg:x="966" fg:w="2"/><text x="51.2801%" y="799.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2 samples, 0.11%)</title><rect x="51.0301%" y="773" width="0.1057%" height="15" fill="rgb(230,30,28)" fg:x="966" fg:w="2"/><text x="51.2801%" y="783.50"></text></g><g><title>maelstrom-txn`core::clone::Clone::clone (1 samples, 0.05%)</title><rect x="51.0829%" y="757" width="0.0528%" height="15" fill="rgb(205,73,54)" fg:x="967" fg:w="1"/><text x="51.3329%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.05%)</title><rect x="51.0829%" y="741" width="0.0528%" height="15" fill="rgb(254,227,23)" fg:x="967" fg:w="1"/><text x="51.3329%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="51.1358%" y="757" width="0.0528%" height="15" fill="rgb(228,202,34)" fg:x="968" fg:w="1"/><text x="51.3858%" y="767.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="51.1358%" y="741" width="0.0528%" height="15" fill="rgb(222,225,37)" fg:x="968" fg:w="1"/><text x="51.3858%" y="751.50"></text></g><g><title>maelstrom-txn`alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="51.1358%" y="725" width="0.0528%" height="15" fill="rgb(221,14,54)" fg:x="968" fg:w="1"/><text x="51.3858%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.05%)</title><rect x="51.1358%" y="709" width="0.0528%" height="15" fill="rgb(254,102,2)" fg:x="968" fg:w="1"/><text x="51.3858%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (4 samples, 0.21%)</title><rect x="51.0301%" y="837" width="0.2113%" height="15" fill="rgb(232,104,17)" fg:x="966" fg:w="4"/><text x="51.2801%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.21%)</title><rect x="51.0301%" y="821" width="0.2113%" height="15" fill="rgb(250,220,14)" fg:x="966" fg:w="4"/><text x="51.2801%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.21%)</title><rect x="51.0301%" y="805" width="0.2113%" height="15" fill="rgb(241,158,9)" fg:x="966" fg:w="4"/><text x="51.2801%" y="815.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2 samples, 0.11%)</title><rect x="51.1358%" y="789" width="0.1057%" height="15" fill="rgb(246,9,43)" fg:x="968" fg:w="2"/><text x="51.3858%" y="799.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::new_uninitialized (2 samples, 0.11%)</title><rect x="51.1358%" y="773" width="0.1057%" height="15" fill="rgb(206,73,33)" fg:x="968" fg:w="2"/><text x="51.3858%" y="783.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::TableLayout::calculate_layout_for (1 samples, 0.05%)</title><rect x="51.1886%" y="757" width="0.0528%" height="15" fill="rgb(222,79,8)" fg:x="969" fg:w="1"/><text x="51.4386%" y="767.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;core::cell::RefMut&lt;maelstrom_node::node::Node&gt;&gt; (1 samples, 0.05%)</title><rect x="51.2414%" y="837" width="0.0528%" height="15" fill="rgb(234,8,54)" fg:x="970" fg:w="1"/><text x="51.4914%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StdinLock as std::io::BufRead&gt;::read_line (6 samples, 0.32%)</title><rect x="51.2942%" y="821" width="0.3170%" height="15" fill="rgb(209,134,38)" fg:x="971" fg:w="6"/><text x="51.5442%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`read (6 samples, 0.32%)</title><rect x="51.2942%" y="805" width="0.3170%" height="15" fill="rgb(230,127,29)" fg:x="971" fg:w="6"/><text x="51.5442%" y="815.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;maelstrom_node::messages::Message&gt; (1 samples, 0.05%)</title><rect x="51.6112%" y="821" width="0.0528%" height="15" fill="rgb(242,44,41)" fg:x="977" fg:w="1"/><text x="51.8612%" y="831.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;maelstrom_node::messages::MessageBody&gt; (1 samples, 0.05%)</title><rect x="51.6112%" y="805" width="0.0528%" height="15" fill="rgb(222,56,43)" fg:x="977" fg:w="1"/><text x="51.8612%" y="815.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;maelstrom_node::messages::MessageExtra&gt; (1 samples, 0.05%)</title><rect x="51.6112%" y="789" width="0.0528%" height="15" fill="rgb(238,39,47)" fg:x="977" fg:w="1"/><text x="51.8612%" y="799.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;maelstrom_node::messages::KvWriteExtra&gt; (1 samples, 0.05%)</title><rect x="51.6112%" y="773" width="0.0528%" height="15" fill="rgb(226,79,43)" fg:x="977" fg:w="1"/><text x="51.8612%" y="783.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.05%)</title><rect x="51.6112%" y="757" width="0.0528%" height="15" fill="rgb(242,105,53)" fg:x="977" fg:w="1"/><text x="51.8612%" y="767.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.05%)</title><rect x="51.6112%" y="741" width="0.0528%" height="15" fill="rgb(251,132,46)" fg:x="977" fg:w="1"/><text x="51.8612%" y="751.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.05%)</title><rect x="51.6112%" y="725" width="0.0528%" height="15" fill="rgb(231,77,14)" fg:x="977" fg:w="1"/><text x="51.8612%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="51.6112%" y="709" width="0.0528%" height="15" fill="rgb(240,135,9)" fg:x="977" fg:w="1"/><text x="51.8612%" y="719.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.05%)</title><rect x="51.6112%" y="693" width="0.0528%" height="15" fill="rgb(248,109,14)" fg:x="977" fg:w="1"/><text x="51.8612%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="51.6112%" y="677" width="0.0528%" height="15" fill="rgb(227,146,52)" fg:x="977" fg:w="1"/><text x="51.8612%" y="687.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.05%)</title><rect x="51.6112%" y="661" width="0.0528%" height="15" fill="rgb(232,54,3)" fg:x="977" fg:w="1"/><text x="51.8612%" y="671.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1 samples, 0.05%)</title><rect x="51.6112%" y="645" width="0.0528%" height="15" fill="rgb(229,201,43)" fg:x="977" fg:w="1"/><text x="51.8612%" y="655.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::mem::replace (1 samples, 0.05%)</title><rect x="51.6112%" y="629" width="0.0528%" height="15" fill="rgb(252,161,33)" fg:x="977" fg:w="1"/><text x="51.8612%" y="639.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;&gt; (1 samples, 0.05%)</title><rect x="51.6640%" y="789" width="0.0528%" height="15" fill="rgb(226,146,40)" fg:x="978" fg:w="1"/><text x="51.9140%" y="799.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="51.6640%" y="773" width="0.0528%" height="15" fill="rgb(219,47,25)" fg:x="978" fg:w="1"/><text x="51.9140%" y="783.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="51.6640%" y="757" width="0.0528%" height="15" fill="rgb(250,135,13)" fg:x="978" fg:w="1"/><text x="51.9140%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="51.6640%" y="741" width="0.0528%" height="15" fill="rgb(219,229,18)" fg:x="978" fg:w="1"/><text x="51.9140%" y="751.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1 samples, 0.05%)</title><rect x="51.6640%" y="725" width="0.0528%" height="15" fill="rgb(217,152,27)" fg:x="978" fg:w="1"/><text x="51.9140%" y="735.50"></text></g><g><title>maelstrom-txn`core::result::Result&lt;T,E&gt;::map (1 samples, 0.05%)</title><rect x="51.7169%" y="613" width="0.0528%" height="15" fill="rgb(225,71,47)" fg:x="979" fg:w="1"/><text x="51.9669%" y="623.50"></text></g><g><title>maelstrom-txn`serde_json::read::Reference::Borrowed (1 samples, 0.05%)</title><rect x="51.7169%" y="597" width="0.0528%" height="15" fill="rgb(220,139,14)" fg:x="979" fg:w="1"/><text x="51.9669%" y="607.50"></text></g><g><title>maelstrom-txn`DYLD-STUB$$memcpy (1 samples, 0.05%)</title><rect x="51.8225%" y="597" width="0.0528%" height="15" fill="rgb(247,54,32)" fg:x="981" fg:w="1"/><text x="52.0725%" y="607.50"></text></g><g><title>maelstrom-txn`core::ptr::const_ptr::_&lt;impl *const T&gt;::offset_from (1 samples, 0.05%)</title><rect x="51.8753%" y="597" width="0.0528%" height="15" fill="rgb(252,131,39)" fg:x="982" fg:w="1"/><text x="52.1253%" y="607.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_key (5 samples, 0.26%)</title><rect x="51.7169%" y="741" width="0.2641%" height="15" fill="rgb(210,108,39)" fg:x="979" fg:w="5"/><text x="51.9669%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.26%)</title><rect x="51.7169%" y="725" width="0.2641%" height="15" fill="rgb(205,23,29)" fg:x="979" fg:w="5"/><text x="51.9669%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 0.26%)</title><rect x="51.7169%" y="709" width="0.2641%" height="15" fill="rgb(246,139,46)" fg:x="979" fg:w="5"/><text x="51.9669%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (5 samples, 0.26%)</title><rect x="51.7169%" y="693" width="0.2641%" height="15" fill="rgb(250,81,26)" fg:x="979" fg:w="5"/><text x="51.9669%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (5 samples, 0.26%)</title><rect x="51.7169%" y="677" width="0.2641%" height="15" fill="rgb(214,104,7)" fg:x="979" fg:w="5"/><text x="51.9669%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.26%)</title><rect x="51.7169%" y="661" width="0.2641%" height="15" fill="rgb(233,189,8)" fg:x="979" fg:w="5"/><text x="51.9669%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (5 samples, 0.26%)</title><rect x="51.7169%" y="645" width="0.2641%" height="15" fill="rgb(228,141,17)" fg:x="979" fg:w="5"/><text x="51.9669%" y="655.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::parse_str_bytes (5 samples, 0.26%)</title><rect x="51.7169%" y="629" width="0.2641%" height="15" fill="rgb(247,157,1)" fg:x="979" fg:w="5"/><text x="51.9669%" y="639.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::skip_to_escape (4 samples, 0.21%)</title><rect x="51.7697%" y="613" width="0.2113%" height="15" fill="rgb(249,225,5)" fg:x="980" fg:w="4"/><text x="52.0197%" y="623.50"></text></g><g><title>maelstrom-txn`core::slice::_&lt;impl [T]&gt;::chunks_exact (1 samples, 0.05%)</title><rect x="51.9282%" y="597" width="0.0528%" height="15" fill="rgb(242,55,13)" fg:x="983" fg:w="1"/><text x="52.1782%" y="607.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="51.9810%" y="645" width="0.0528%" height="15" fill="rgb(230,49,50)" fg:x="984" fg:w="1"/><text x="52.2310%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="51.9810%" y="629" width="0.0528%" height="15" fill="rgb(241,111,38)" fg:x="984" fg:w="1"/><text x="52.2310%" y="639.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;[core::option::Option&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt;]&gt; (1 samples, 0.05%)</title><rect x="51.9810%" y="613" width="0.0528%" height="15" fill="rgb(252,155,4)" fg:x="984" fg:w="1"/><text x="52.2310%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.05%)</title><rect x="52.0338%" y="629" width="0.0528%" height="15" fill="rgb(212,69,32)" fg:x="985" fg:w="1"/><text x="52.2838%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 0.05%)</title><rect x="52.0338%" y="613" width="0.0528%" height="15" fill="rgb(243,107,47)" fg:x="985" fg:w="1"/><text x="52.2838%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::TaggedContentVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.05%)</title><rect x="52.0338%" y="597" width="0.0528%" height="15" fill="rgb(247,130,12)" fg:x="985" fg:w="1"/><text x="52.2838%" y="607.50"></text></g><g><title>maelstrom-txn`core::cmp::min (1 samples, 0.05%)</title><rect x="52.0338%" y="581" width="0.0528%" height="15" fill="rgb(233,74,16)" fg:x="985" fg:w="1"/><text x="52.2838%" y="591.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageExtra&gt;::deserialize (2 samples, 0.11%)</title><rect x="52.0338%" y="645" width="0.1057%" height="15" fill="rgb(208,58,18)" fg:x="985" fg:w="2"/><text x="52.2838%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.05%)</title><rect x="52.0866%" y="629" width="0.0528%" height="15" fill="rgb(242,225,1)" fg:x="986" fg:w="1"/><text x="52.3366%" y="639.50"></text></g><g><title>maelstrom-txn`serde::de::value::MapDeserializer&lt;I,E&gt;::new (1 samples, 0.05%)</title><rect x="52.0866%" y="613" width="0.0528%" height="15" fill="rgb(249,39,40)" fg:x="986" fg:w="1"/><text x="52.3366%" y="623.50"></text></g><g><title>maelstrom-txn`serde::__private::de::content::TaggedContentVisitor&lt;T&gt;::new (1 samples, 0.05%)</title><rect x="52.1395%" y="645" width="0.0528%" height="15" fill="rgb(207,72,44)" fg:x="987" fg:w="1"/><text x="52.3895%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (1 samples, 0.05%)</title><rect x="52.1923%" y="565" width="0.0528%" height="15" fill="rgb(215,193,12)" fg:x="988" fg:w="1"/><text x="52.4423%" y="575.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for u64&gt;::deserialize (1 samples, 0.05%)</title><rect x="52.1923%" y="549" width="0.0528%" height="15" fill="rgb(248,41,39)" fg:x="988" fg:w="1"/><text x="52.4423%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u64 (1 samples, 0.05%)</title><rect x="52.1923%" y="533" width="0.0528%" height="15" fill="rgb(253,85,4)" fg:x="988" fg:w="1"/><text x="52.4423%" y="543.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::deserialize_number (1 samples, 0.05%)</title><rect x="52.1923%" y="517" width="0.0528%" height="15" fill="rgb(243,70,31)" fg:x="988" fg:w="1"/><text x="52.4423%" y="527.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1 samples, 0.05%)</title><rect x="52.1923%" y="501" width="0.0528%" height="15" fill="rgb(253,195,26)" fg:x="988" fg:w="1"/><text x="52.4423%" y="511.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::peek (1 samples, 0.05%)</title><rect x="52.1923%" y="485" width="0.0528%" height="15" fill="rgb(243,42,11)" fg:x="988" fg:w="1"/><text x="52.4423%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.05%)</title><rect x="52.1923%" y="469" width="0.0528%" height="15" fill="rgb(239,66,17)" fg:x="988" fg:w="1"/><text x="52.4423%" y="479.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize (6 samples, 0.32%)</title><rect x="51.9810%" y="693" width="0.3170%" height="15" fill="rgb(217,132,21)" fg:x="984" fg:w="6"/><text x="52.2310%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (6 samples, 0.32%)</title><rect x="51.9810%" y="677" width="0.3170%" height="15" fill="rgb(252,202,21)" fg:x="984" fg:w="6"/><text x="52.2310%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.32%)</title><rect x="51.9810%" y="661" width="0.3170%" height="15" fill="rgb(233,98,36)" fg:x="984" fg:w="6"/><text x="52.2310%" y="671.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (2 samples, 0.11%)</title><rect x="52.1923%" y="645" width="0.1057%" height="15" fill="rgb(216,153,54)" fg:x="988" fg:w="2"/><text x="52.4423%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.11%)</title><rect x="52.1923%" y="629" width="0.1057%" height="15" fill="rgb(250,99,7)" fg:x="988" fg:w="2"/><text x="52.4423%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.11%)</title><rect x="52.1923%" y="613" width="0.1057%" height="15" fill="rgb(207,56,50)" fg:x="988" fg:w="2"/><text x="52.4423%" y="623.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (2 samples, 0.11%)</title><rect x="52.1923%" y="597" width="0.1057%" height="15" fill="rgb(244,61,34)" fg:x="988" fg:w="2"/><text x="52.4423%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (2 samples, 0.11%)</title><rect x="52.1923%" y="581" width="0.1057%" height="15" fill="rgb(241,50,38)" fg:x="988" fg:w="2"/><text x="52.4423%" y="591.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for u64&gt;::deserialize (1 samples, 0.05%)</title><rect x="52.2451%" y="565" width="0.0528%" height="15" fill="rgb(212,166,30)" fg:x="989" fg:w="1"/><text x="52.4951%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.37%)</title><rect x="51.9810%" y="709" width="0.3698%" height="15" fill="rgb(249,127,32)" fg:x="984" fg:w="7"/><text x="52.2310%" y="719.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.05%)</title><rect x="52.2979%" y="693" width="0.0528%" height="15" fill="rgb(209,103,0)" fg:x="990" fg:w="1"/><text x="52.5479%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.05%)</title><rect x="52.2979%" y="677" width="0.0528%" height="15" fill="rgb(238,209,51)" fg:x="990" fg:w="1"/><text x="52.5479%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.05%)</title><rect x="52.2979%" y="661" width="0.0528%" height="15" fill="rgb(237,56,23)" fg:x="990" fg:w="1"/><text x="52.5479%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.05%)</title><rect x="52.2979%" y="645" width="0.0528%" height="15" fill="rgb(215,153,46)" fg:x="990" fg:w="1"/><text x="52.5479%" y="655.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::parse_str_bytes (1 samples, 0.05%)</title><rect x="52.2979%" y="629" width="0.0528%" height="15" fill="rgb(224,49,31)" fg:x="990" fg:w="1"/><text x="52.5479%" y="639.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::skip_to_escape (1 samples, 0.05%)</title><rect x="52.2979%" y="613" width="0.0528%" height="15" fill="rgb(250,18,42)" fg:x="990" fg:w="1"/><text x="52.5479%" y="623.50"></text></g><g><title>maelstrom-txn`serde_json::de::from_str (14 samples, 0.74%)</title><rect x="51.6640%" y="821" width="0.7396%" height="15" fill="rgb(215,176,39)" fg:x="978" fg:w="14"/><text x="51.9140%" y="831.50"></text></g><g><title>maelstrom-txn`serde_json::de::from_trait (14 samples, 0.74%)</title><rect x="51.6640%" y="805" width="0.7396%" height="15" fill="rgb(223,77,29)" fg:x="978" fg:w="14"/><text x="51.9140%" y="815.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize (13 samples, 0.69%)</title><rect x="51.7169%" y="789" width="0.6867%" height="15" fill="rgb(234,94,52)" fg:x="979" fg:w="13"/><text x="51.9669%" y="799.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (13 samples, 0.69%)</title><rect x="51.7169%" y="773" width="0.6867%" height="15" fill="rgb(220,154,50)" fg:x="979" fg:w="13"/><text x="51.9669%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (13 samples, 0.69%)</title><rect x="51.7169%" y="757" width="0.6867%" height="15" fill="rgb(212,11,10)" fg:x="979" fg:w="13"/><text x="51.9669%" y="767.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (8 samples, 0.42%)</title><rect x="51.9810%" y="741" width="0.4226%" height="15" fill="rgb(205,166,19)" fg:x="984" fg:w="8"/><text x="52.2310%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (8 samples, 0.42%)</title><rect x="51.9810%" y="725" width="0.4226%" height="15" fill="rgb(244,198,16)" fg:x="984" fg:w="8"/><text x="52.2310%" y="735.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1 samples, 0.05%)</title><rect x="52.3508%" y="709" width="0.0528%" height="15" fill="rgb(219,69,12)" fg:x="991" fg:w="1"/><text x="52.6008%" y="719.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.05%)</title><rect x="52.4036%" y="789" width="0.0528%" height="15" fill="rgb(245,30,7)" fg:x="992" fg:w="1"/><text x="52.6536%" y="799.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="52.4036%" y="773" width="0.0528%" height="15" fill="rgb(218,221,48)" fg:x="992" fg:w="1"/><text x="52.6536%" y="783.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1 samples, 0.05%)</title><rect x="52.4036%" y="757" width="0.0528%" height="15" fill="rgb(216,66,15)" fg:x="992" fg:w="1"/><text x="52.6536%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="52.4036%" y="741" width="0.0528%" height="15" fill="rgb(226,122,50)" fg:x="992" fg:w="1"/><text x="52.6536%" y="751.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="52.4036%" y="725" width="0.0528%" height="15" fill="rgb(239,156,16)" fg:x="992" fg:w="1"/><text x="52.6536%" y="735.50"></text></g><g><title>maelstrom-txn`alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="52.4036%" y="709" width="0.0528%" height="15" fill="rgb(224,27,38)" fg:x="992" fg:w="1"/><text x="52.6536%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.05%)</title><rect x="52.4036%" y="693" width="0.0528%" height="15" fill="rgb(224,39,27)" fg:x="992" fg:w="1"/><text x="52.6536%" y="703.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.05%)</title><rect x="52.5092%" y="709" width="0.0528%" height="15" fill="rgb(215,92,29)" fg:x="994" fg:w="1"/><text x="52.7592%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.05%)</title><rect x="52.5092%" y="693" width="0.0528%" height="15" fill="rgb(207,159,16)" fg:x="994" fg:w="1"/><text x="52.7592%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.05%)</title><rect x="52.5092%" y="677" width="0.0528%" height="15" fill="rgb(238,163,47)" fg:x="994" fg:w="1"/><text x="52.7592%" y="687.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (1 samples, 0.05%)</title><rect x="52.5092%" y="661" width="0.0528%" height="15" fill="rgb(219,91,49)" fg:x="994" fg:w="1"/><text x="52.7592%" y="671.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (1 samples, 0.05%)</title><rect x="52.5092%" y="645" width="0.0528%" height="15" fill="rgb(227,167,31)" fg:x="994" fg:w="1"/><text x="52.7592%" y="655.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_string_fragment (1 samples, 0.05%)</title><rect x="52.5092%" y="629" width="0.0528%" height="15" fill="rgb(234,80,54)" fg:x="994" fg:w="1"/><text x="52.7592%" y="639.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="52.5092%" y="613" width="0.0528%" height="15" fill="rgb(212,114,2)" fg:x="994" fg:w="1"/><text x="52.7592%" y="623.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="52.5092%" y="597" width="0.0528%" height="15" fill="rgb(234,50,24)" fg:x="994" fg:w="1"/><text x="52.7592%" y="607.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="52.5092%" y="581" width="0.0528%" height="15" fill="rgb(221,68,8)" fg:x="994" fg:w="1"/><text x="52.7592%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="52.5092%" y="565" width="0.0528%" height="15" fill="rgb(254,180,31)" fg:x="994" fg:w="1"/><text x="52.7592%" y="575.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="52.5621%" y="629" width="0.0528%" height="15" fill="rgb(247,130,50)" fg:x="995" fg:w="1"/><text x="52.8121%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (4 samples, 0.21%)</title><rect x="52.4564%" y="725" width="0.2113%" height="15" fill="rgb(211,109,4)" fg:x="993" fg:w="4"/><text x="52.7064%" y="735.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_object_key (2 samples, 0.11%)</title><rect x="52.5621%" y="709" width="0.1057%" height="15" fill="rgb(238,50,21)" fg:x="995" fg:w="2"/><text x="52.8121%" y="719.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.11%)</title><rect x="52.5621%" y="693" width="0.1057%" height="15" fill="rgb(225,57,45)" fg:x="995" fg:w="2"/><text x="52.8121%" y="703.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.11%)</title><rect x="52.5621%" y="677" width="0.1057%" height="15" fill="rgb(209,196,50)" fg:x="995" fg:w="2"/><text x="52.8121%" y="687.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.11%)</title><rect x="52.5621%" y="661" width="0.1057%" height="15" fill="rgb(242,140,13)" fg:x="995" fg:w="2"/><text x="52.8121%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.11%)</title><rect x="52.5621%" y="645" width="0.1057%" height="15" fill="rgb(217,111,7)" fg:x="995" fg:w="2"/><text x="52.8121%" y="655.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.05%)</title><rect x="52.6149%" y="629" width="0.0528%" height="15" fill="rgb(253,193,51)" fg:x="996" fg:w="1"/><text x="52.8649%" y="639.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (1 samples, 0.05%)</title><rect x="52.6677%" y="693" width="0.0528%" height="15" fill="rgb(252,70,29)" fg:x="997" fg:w="1"/><text x="52.9177%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.05%)</title><rect x="52.6677%" y="677" width="0.0528%" height="15" fill="rgb(232,127,12)" fg:x="997" fg:w="1"/><text x="52.9177%" y="687.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.05%)</title><rect x="52.6677%" y="661" width="0.0528%" height="15" fill="rgb(211,180,21)" fg:x="997" fg:w="1"/><text x="52.9177%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.05%)</title><rect x="52.6677%" y="645" width="0.0528%" height="15" fill="rgb(229,72,13)" fg:x="997" fg:w="1"/><text x="52.9177%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.05%)</title><rect x="52.6677%" y="629" width="0.0528%" height="15" fill="rgb(240,211,49)" fg:x="997" fg:w="1"/><text x="52.9177%" y="639.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (1 samples, 0.05%)</title><rect x="52.6677%" y="613" width="0.0528%" height="15" fill="rgb(219,149,40)" fg:x="997" fg:w="1"/><text x="52.9177%" y="623.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (1 samples, 0.05%)</title><rect x="52.6677%" y="597" width="0.0528%" height="15" fill="rgb(210,127,46)" fg:x="997" fg:w="1"/><text x="52.9177%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.11%)</title><rect x="52.7205%" y="597" width="0.1057%" height="15" fill="rgb(220,106,7)" fg:x="998" fg:w="2"/><text x="52.9705%" y="607.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (2 samples, 0.11%)</title><rect x="52.7205%" y="581" width="0.1057%" height="15" fill="rgb(249,31,22)" fg:x="998" fg:w="2"/><text x="52.9705%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.11%)</title><rect x="52.7205%" y="565" width="0.1057%" height="15" fill="rgb(253,1,49)" fg:x="998" fg:w="2"/><text x="52.9705%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.11%)</title><rect x="52.7205%" y="549" width="0.1057%" height="15" fill="rgb(227,144,33)" fg:x="998" fg:w="2"/><text x="52.9705%" y="559.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (2 samples, 0.11%)</title><rect x="52.7205%" y="533" width="0.1057%" height="15" fill="rgb(249,163,44)" fg:x="998" fg:w="2"/><text x="52.9705%" y="543.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (2 samples, 0.11%)</title><rect x="52.7205%" y="517" width="0.1057%" height="15" fill="rgb(234,15,39)" fg:x="998" fg:w="2"/><text x="52.9705%" y="527.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_string_fragment (1 samples, 0.05%)</title><rect x="52.7734%" y="501" width="0.0528%" height="15" fill="rgb(207,66,16)" fg:x="999" fg:w="1"/><text x="53.0234%" y="511.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="52.7734%" y="485" width="0.0528%" height="15" fill="rgb(233,112,24)" fg:x="999" fg:w="1"/><text x="53.0234%" y="495.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="52.7734%" y="469" width="0.0528%" height="15" fill="rgb(230,90,22)" fg:x="999" fg:w="1"/><text x="53.0234%" y="479.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="52.7734%" y="453" width="0.0528%" height="15" fill="rgb(229,61,13)" fg:x="999" fg:w="1"/><text x="53.0234%" y="463.50"></text></g><g><title>maelstrom-txn`core::ptr::const_ptr::_&lt;impl *const T&gt;::sub_ptr::precondition_check (1 samples, 0.05%)</title><rect x="52.7734%" y="437" width="0.0528%" height="15" fill="rgb(225,57,24)" fg:x="999" fg:w="1"/><text x="53.0234%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_map (2 samples, 0.11%)</title><rect x="52.8790%" y="565" width="0.1057%" height="15" fill="rgb(208,169,48)" fg:x="1001" fg:w="2"/><text x="53.1290%" y="575.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_object (2 samples, 0.11%)</title><rect x="52.8790%" y="549" width="0.1057%" height="15" fill="rgb(244,218,51)" fg:x="1001" fg:w="2"/><text x="53.1290%" y="559.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.11%)</title><rect x="52.8790%" y="533" width="0.1057%" height="15" fill="rgb(214,148,10)" fg:x="1001" fg:w="2"/><text x="53.1290%" y="543.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.11%)</title><rect x="52.8790%" y="517" width="0.1057%" height="15" fill="rgb(225,174,27)" fg:x="1001" fg:w="2"/><text x="53.1290%" y="527.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.11%)</title><rect x="52.8790%" y="501" width="0.1057%" height="15" fill="rgb(230,96,26)" fg:x="1001" fg:w="2"/><text x="53.1290%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="52.9319%" y="485" width="0.0528%" height="15" fill="rgb(232,10,30)" fg:x="1002" fg:w="1"/><text x="53.1819%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.05%)</title><rect x="52.9847%" y="565" width="0.0528%" height="15" fill="rgb(222,8,50)" fg:x="1003" fg:w="1"/><text x="53.2347%" y="575.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (1 samples, 0.05%)</title><rect x="52.9847%" y="549" width="0.0528%" height="15" fill="rgb(213,81,27)" fg:x="1003" fg:w="1"/><text x="53.2347%" y="559.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (1 samples, 0.05%)</title><rect x="52.9847%" y="533" width="0.0528%" height="15" fill="rgb(245,50,10)" fg:x="1003" fg:w="1"/><text x="53.2347%" y="543.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_string_fragment (1 samples, 0.05%)</title><rect x="52.9847%" y="517" width="0.0528%" height="15" fill="rgb(216,100,18)" fg:x="1003" fg:w="1"/><text x="53.2347%" y="527.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="52.9847%" y="501" width="0.0528%" height="15" fill="rgb(236,147,54)" fg:x="1003" fg:w="1"/><text x="53.2347%" y="511.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="52.9847%" y="485" width="0.0528%" height="15" fill="rgb(205,143,26)" fg:x="1003" fg:w="1"/><text x="53.2347%" y="495.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="52.9847%" y="469" width="0.0528%" height="15" fill="rgb(236,26,9)" fg:x="1003" fg:w="1"/><text x="53.2347%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="52.9847%" y="453" width="0.0528%" height="15" fill="rgb(221,165,53)" fg:x="1003" fg:w="1"/><text x="53.2347%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.05%)</title><rect x="53.0375%" y="533" width="0.0528%" height="15" fill="rgb(214,110,17)" fg:x="1004" fg:w="1"/><text x="53.2875%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.05%)</title><rect x="53.0903%" y="517" width="0.0528%" height="15" fill="rgb(237,197,12)" fg:x="1005" fg:w="1"/><text x="53.3403%" y="527.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.05%)</title><rect x="53.0903%" y="501" width="0.0528%" height="15" fill="rgb(205,84,17)" fg:x="1005" fg:w="1"/><text x="53.3403%" y="511.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::end_string (2 samples, 0.11%)</title><rect x="53.1432%" y="469" width="0.1057%" height="15" fill="rgb(237,18,45)" fg:x="1006" fg:w="2"/><text x="53.3932%" y="479.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.11%)</title><rect x="53.1432%" y="453" width="0.1057%" height="15" fill="rgb(221,87,14)" fg:x="1006" fg:w="2"/><text x="53.3932%" y="463.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.11%)</title><rect x="53.1432%" y="437" width="0.1057%" height="15" fill="rgb(238,186,15)" fg:x="1006" fg:w="2"/><text x="53.3932%" y="447.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.11%)</title><rect x="53.1432%" y="421" width="0.1057%" height="15" fill="rgb(208,115,11)" fg:x="1006" fg:w="2"/><text x="53.3932%" y="431.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.11%)</title><rect x="53.1432%" y="405" width="0.1057%" height="15" fill="rgb(254,175,0)" fg:x="1006" fg:w="2"/><text x="53.3932%" y="415.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.11%)</title><rect x="53.1432%" y="389" width="0.1057%" height="15" fill="rgb(227,24,42)" fg:x="1006" fg:w="2"/><text x="53.3932%" y="399.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (2 samples, 0.11%)</title><rect x="53.1432%" y="373" width="0.1057%" height="15" fill="rgb(223,211,37)" fg:x="1006" fg:w="2"/><text x="53.3932%" y="383.50"></text></g><g><title>maelstrom-txn`core::ub_checks::is_nonoverlapping::runtime (1 samples, 0.05%)</title><rect x="53.1960%" y="357" width="0.0528%" height="15" fill="rgb(235,49,27)" fg:x="1007" fg:w="1"/><text x="53.4460%" y="367.50"></text></g><g><title>maelstrom-txn`core::str::traits::_&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.05%)</title><rect x="53.2488%" y="453" width="0.0528%" height="15" fill="rgb(254,97,51)" fg:x="1008" fg:w="1"/><text x="53.4988%" y="463.50"></text></g><g><title>maelstrom-txn`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (1 samples, 0.05%)</title><rect x="53.2488%" y="437" width="0.0528%" height="15" fill="rgb(249,51,40)" fg:x="1008" fg:w="1"/><text x="53.4988%" y="447.50"></text></g><g><title>maelstrom-txn`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (1 samples, 0.05%)</title><rect x="53.2488%" y="421" width="0.0528%" height="15" fill="rgb(210,128,45)" fg:x="1008" fg:w="1"/><text x="53.4988%" y="431.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (3 samples, 0.16%)</title><rect x="53.2488%" y="469" width="0.1585%" height="15" fill="rgb(224,137,50)" fg:x="1008" fg:w="3"/><text x="53.4988%" y="479.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_string_fragment (2 samples, 0.11%)</title><rect x="53.3016%" y="453" width="0.1057%" height="15" fill="rgb(242,15,9)" fg:x="1009" fg:w="2"/><text x="53.5516%" y="463.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.11%)</title><rect x="53.3016%" y="437" width="0.1057%" height="15" fill="rgb(233,187,41)" fg:x="1009" fg:w="2"/><text x="53.5516%" y="447.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.11%)</title><rect x="53.3016%" y="421" width="0.1057%" height="15" fill="rgb(227,2,29)" fg:x="1009" fg:w="2"/><text x="53.5516%" y="431.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.11%)</title><rect x="53.3016%" y="405" width="0.1057%" height="15" fill="rgb(222,70,3)" fg:x="1009" fg:w="2"/><text x="53.5516%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.11%)</title><rect x="53.3016%" y="389" width="0.1057%" height="15" fill="rgb(213,11,42)" fg:x="1009" fg:w="2"/><text x="53.5516%" y="399.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="53.3545%" y="373" width="0.0528%" height="15" fill="rgb(225,150,9)" fg:x="1010" fg:w="1"/><text x="53.6045%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="53.3545%" y="357" width="0.0528%" height="15" fill="rgb(230,162,45)" fg:x="1010" fg:w="1"/><text x="53.6045%" y="367.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (8 samples, 0.42%)</title><rect x="53.0375%" y="549" width="0.4226%" height="15" fill="rgb(222,14,52)" fg:x="1004" fg:w="8"/><text x="53.2875%" y="559.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (7 samples, 0.37%)</title><rect x="53.0903%" y="533" width="0.3698%" height="15" fill="rgb(254,198,14)" fg:x="1005" fg:w="7"/><text x="53.3403%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (6 samples, 0.32%)</title><rect x="53.1432%" y="517" width="0.3170%" height="15" fill="rgb(220,217,30)" fg:x="1006" fg:w="6"/><text x="53.3932%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (6 samples, 0.32%)</title><rect x="53.1432%" y="501" width="0.3170%" height="15" fill="rgb(215,146,41)" fg:x="1006" fg:w="6"/><text x="53.3932%" y="511.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (6 samples, 0.32%)</title><rect x="53.1432%" y="485" width="0.3170%" height="15" fill="rgb(217,27,36)" fg:x="1006" fg:w="6"/><text x="53.3932%" y="495.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="53.4073%" y="469" width="0.0528%" height="15" fill="rgb(219,218,39)" fg:x="1011" fg:w="1"/><text x="53.6573%" y="479.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_object_value (1 samples, 0.05%)</title><rect x="53.4601%" y="533" width="0.0528%" height="15" fill="rgb(219,4,42)" fg:x="1012" fg:w="1"/><text x="53.7101%" y="543.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="53.4601%" y="517" width="0.0528%" height="15" fill="rgb(249,119,36)" fg:x="1012" fg:w="1"/><text x="53.7101%" y="527.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="53.4601%" y="501" width="0.0528%" height="15" fill="rgb(209,23,33)" fg:x="1012" fg:w="1"/><text x="53.7101%" y="511.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="53.4601%" y="485" width="0.0528%" height="15" fill="rgb(211,10,0)" fg:x="1012" fg:w="1"/><text x="53.7101%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="53.4601%" y="469" width="0.0528%" height="15" fill="rgb(208,99,37)" fg:x="1012" fg:w="1"/><text x="53.7101%" y="479.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="53.4601%" y="453" width="0.0528%" height="15" fill="rgb(213,132,31)" fg:x="1012" fg:w="1"/><text x="53.7101%" y="463.50"></text></g><g><title>maelstrom-txn`core::ub_checks::is_nonoverlapping::runtime (1 samples, 0.05%)</title><rect x="53.4601%" y="437" width="0.0528%" height="15" fill="rgb(243,129,40)" fg:x="1012" fg:w="1"/><text x="53.7101%" y="447.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="53.5129%" y="453" width="0.0528%" height="15" fill="rgb(210,66,33)" fg:x="1013" fg:w="1"/><text x="53.7629%" y="463.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::end_string (2 samples, 0.11%)</title><rect x="53.5129%" y="485" width="0.1057%" height="15" fill="rgb(209,189,4)" fg:x="1013" fg:w="2"/><text x="53.7629%" y="495.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.11%)</title><rect x="53.5129%" y="469" width="0.1057%" height="15" fill="rgb(214,107,37)" fg:x="1013" fg:w="2"/><text x="53.7629%" y="479.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="53.5658%" y="453" width="0.0528%" height="15" fill="rgb(245,88,54)" fg:x="1014" fg:w="1"/><text x="53.8158%" y="463.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="53.5658%" y="437" width="0.0528%" height="15" fill="rgb(205,146,20)" fg:x="1014" fg:w="1"/><text x="53.8158%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="53.5658%" y="421" width="0.0528%" height="15" fill="rgb(220,161,25)" fg:x="1014" fg:w="1"/><text x="53.8158%" y="431.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="53.6186%" y="469" width="0.0528%" height="15" fill="rgb(215,152,15)" fg:x="1015" fg:w="1"/><text x="53.8686%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.05%)</title><rect x="53.7771%" y="277" width="0.0528%" height="15" fill="rgb(233,192,44)" fg:x="1018" fg:w="1"/><text x="54.0271%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.05%)</title><rect x="53.7771%" y="261" width="0.0528%" height="15" fill="rgb(240,170,46)" fg:x="1018" fg:w="1"/><text x="54.0271%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.05%)</title><rect x="53.7771%" y="245" width="0.0528%" height="15" fill="rgb(207,104,33)" fg:x="1018" fg:w="1"/><text x="54.0271%" y="255.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.05%)</title><rect x="53.7771%" y="229" width="0.0528%" height="15" fill="rgb(219,21,39)" fg:x="1018" fg:w="1"/><text x="54.0271%" y="239.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.11%)</title><rect x="53.7771%" y="373" width="0.1057%" height="15" fill="rgb(214,133,29)" fg:x="1018" fg:w="2"/><text x="54.0271%" y="383.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2 samples, 0.11%)</title><rect x="53.7771%" y="357" width="0.1057%" height="15" fill="rgb(226,93,6)" fg:x="1018" fg:w="2"/><text x="54.0271%" y="367.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2 samples, 0.11%)</title><rect x="53.7771%" y="341" width="0.1057%" height="15" fill="rgb(252,222,34)" fg:x="1018" fg:w="2"/><text x="54.0271%" y="351.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::finish_grow (2 samples, 0.11%)</title><rect x="53.7771%" y="325" width="0.1057%" height="15" fill="rgb(252,92,48)" fg:x="1018" fg:w="2"/><text x="54.0271%" y="335.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.11%)</title><rect x="53.7771%" y="309" width="0.1057%" height="15" fill="rgb(245,223,24)" fg:x="1018" fg:w="2"/><text x="54.0271%" y="319.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::grow_impl (2 samples, 0.11%)</title><rect x="53.7771%" y="293" width="0.1057%" height="15" fill="rgb(205,176,3)" fg:x="1018" fg:w="2"/><text x="54.0271%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.05%)</title><rect x="53.8299%" y="277" width="0.0528%" height="15" fill="rgb(235,151,15)" fg:x="1019" fg:w="1"/><text x="54.0799%" y="287.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.21%)</title><rect x="53.7771%" y="389" width="0.2113%" height="15" fill="rgb(237,209,11)" fg:x="1018" fg:w="4"/><text x="54.0271%" y="399.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (2 samples, 0.11%)</title><rect x="53.8827%" y="373" width="0.1057%" height="15" fill="rgb(243,227,24)" fg:x="1020" fg:w="2"/><text x="54.1327%" y="383.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::ser::FlatMapSerializeStruct&lt;M&gt; as serde::ser::SerializeStruct&gt;::serialize_field (26 samples, 1.37%)</title><rect x="52.7205%" y="629" width="1.3735%" height="15" fill="rgb(239,193,16)" fg:x="998" fg:w="26"/><text x="52.9705%" y="639.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (26 samples, 1.37%)</title><rect x="52.7205%" y="613" width="1.3735%" height="15" fill="rgb(231,27,9)" fg:x="998" fg:w="26"/><text x="52.9705%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (24 samples, 1.27%)</title><rect x="52.8262%" y="597" width="1.2678%" height="15" fill="rgb(219,169,10)" fg:x="1000" fg:w="24"/><text x="53.0762%" y="607.50"></text></g><g><title>maelstrom-txn`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.27%)</title><rect x="52.8262%" y="581" width="1.2678%" height="15" fill="rgb(244,229,43)" fg:x="1000" fg:w="24"/><text x="53.0762%" y="591.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (20 samples, 1.06%)</title><rect x="53.0375%" y="565" width="1.0565%" height="15" fill="rgb(254,38,20)" fg:x="1004" fg:w="20"/><text x="53.2875%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.63%)</title><rect x="53.4601%" y="549" width="0.6339%" height="15" fill="rgb(250,47,30)" fg:x="1012" fg:w="12"/><text x="53.7101%" y="559.50"></text></g><g><title>maelstrom-txn`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.58%)</title><rect x="53.5129%" y="533" width="0.5811%" height="15" fill="rgb(224,124,36)" fg:x="1013" fg:w="11"/><text x="53.7629%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (11 samples, 0.58%)</title><rect x="53.5129%" y="517" width="0.5811%" height="15" fill="rgb(246,68,51)" fg:x="1013" fg:w="11"/><text x="53.7629%" y="527.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (11 samples, 0.58%)</title><rect x="53.5129%" y="501" width="0.5811%" height="15" fill="rgb(253,43,49)" fg:x="1013" fg:w="11"/><text x="53.7629%" y="511.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (9 samples, 0.48%)</title><rect x="53.6186%" y="485" width="0.4754%" height="15" fill="rgb(219,54,36)" fg:x="1015" fg:w="9"/><text x="53.8686%" y="495.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_string_fragment (8 samples, 0.42%)</title><rect x="53.6714%" y="469" width="0.4226%" height="15" fill="rgb(227,133,34)" fg:x="1016" fg:w="8"/><text x="53.9214%" y="479.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (8 samples, 0.42%)</title><rect x="53.6714%" y="453" width="0.4226%" height="15" fill="rgb(247,227,15)" fg:x="1016" fg:w="8"/><text x="53.9214%" y="463.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (7 samples, 0.37%)</title><rect x="53.7242%" y="437" width="0.3698%" height="15" fill="rgb(229,96,14)" fg:x="1017" fg:w="7"/><text x="53.9742%" y="447.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.37%)</title><rect x="53.7242%" y="421" width="0.3698%" height="15" fill="rgb(220,79,17)" fg:x="1017" fg:w="7"/><text x="53.9742%" y="431.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.32%)</title><rect x="53.7771%" y="405" width="0.3170%" height="15" fill="rgb(205,131,53)" fg:x="1018" fg:w="6"/><text x="54.0271%" y="415.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (2 samples, 0.11%)</title><rect x="53.9884%" y="389" width="0.1057%" height="15" fill="rgb(209,50,29)" fg:x="1022" fg:w="2"/><text x="54.2384%" y="399.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="54.0940%" y="421" width="0.0528%" height="15" fill="rgb(245,86,46)" fg:x="1024" fg:w="1"/><text x="54.3440%" y="431.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.05%)</title><rect x="54.0940%" y="405" width="0.0528%" height="15" fill="rgb(235,66,46)" fg:x="1024" fg:w="1"/><text x="54.3440%" y="415.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_string (34 samples, 1.80%)</title><rect x="52.4036%" y="821" width="1.7961%" height="15" fill="rgb(232,148,31)" fg:x="992" fg:w="34"/><text x="52.6536%" y="831.50">m..</text></g><g><title>maelstrom-txn`serde_json::ser::to_vec (34 samples, 1.80%)</title><rect x="52.4036%" y="805" width="1.7961%" height="15" fill="rgb(217,149,8)" fg:x="992" fg:w="34"/><text x="52.6536%" y="815.50">m..</text></g><g><title>maelstrom-txn`serde_json::ser::to_writer (33 samples, 1.74%)</title><rect x="52.4564%" y="789" width="1.7433%" height="15" fill="rgb(209,183,11)" fg:x="993" fg:w="33"/><text x="52.7064%" y="799.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::Message&gt;::serialize (33 samples, 1.74%)</title><rect x="52.4564%" y="773" width="1.7433%" height="15" fill="rgb(208,55,20)" fg:x="993" fg:w="33"/><text x="52.7064%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (33 samples, 1.74%)</title><rect x="52.4564%" y="757" width="1.7433%" height="15" fill="rgb(218,39,14)" fg:x="993" fg:w="33"/><text x="52.7064%" y="767.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (33 samples, 1.74%)</title><rect x="52.4564%" y="741" width="1.7433%" height="15" fill="rgb(216,169,33)" fg:x="993" fg:w="33"/><text x="52.7064%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (29 samples, 1.53%)</title><rect x="52.6677%" y="725" width="1.5320%" height="15" fill="rgb(233,80,24)" fg:x="997" fg:w="29"/><text x="52.9177%" y="735.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::MessageBody&gt;::serialize (29 samples, 1.53%)</title><rect x="52.6677%" y="709" width="1.5320%" height="15" fill="rgb(213,179,31)" fg:x="997" fg:w="29"/><text x="52.9177%" y="719.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (28 samples, 1.48%)</title><rect x="52.7205%" y="693" width="1.4791%" height="15" fill="rgb(209,19,5)" fg:x="998" fg:w="28"/><text x="52.9705%" y="703.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::MessageExtra&gt;::serialize (28 samples, 1.48%)</title><rect x="52.7205%" y="677" width="1.4791%" height="15" fill="rgb(219,18,35)" fg:x="998" fg:w="28"/><text x="52.9705%" y="687.50"></text></g><g><title>maelstrom-txn`serde::__private::ser::serialize_tagged_newtype (28 samples, 1.48%)</title><rect x="52.7205%" y="661" width="1.4791%" height="15" fill="rgb(209,169,16)" fg:x="998" fg:w="28"/><text x="52.9705%" y="671.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::KvWriteExtra&gt;::serialize (28 samples, 1.48%)</title><rect x="52.7205%" y="645" width="1.4791%" height="15" fill="rgb(245,90,51)" fg:x="998" fg:w="28"/><text x="52.9705%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::ser::TaggedSerializer&lt;S&gt; as serde::ser::Serializer&gt;::serialize_struct (2 samples, 0.11%)</title><rect x="54.0940%" y="629" width="0.1057%" height="15" fill="rgb(220,99,45)" fg:x="1024" fg:w="2"/><text x="54.3440%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::ser::FlatMapSerializeStruct&lt;M&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.11%)</title><rect x="54.0940%" y="613" width="0.1057%" height="15" fill="rgb(249,89,25)" fg:x="1024" fg:w="2"/><text x="54.3440%" y="623.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (2 samples, 0.11%)</title><rect x="54.0940%" y="597" width="0.1057%" height="15" fill="rgb(239,193,0)" fg:x="1024" fg:w="2"/><text x="54.3440%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.11%)</title><rect x="54.0940%" y="581" width="0.1057%" height="15" fill="rgb(231,126,1)" fg:x="1024" fg:w="2"/><text x="54.3440%" y="591.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (2 samples, 0.11%)</title><rect x="54.0940%" y="565" width="0.1057%" height="15" fill="rgb(243,166,3)" fg:x="1024" fg:w="2"/><text x="54.3440%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.11%)</title><rect x="54.0940%" y="549" width="0.1057%" height="15" fill="rgb(223,22,34)" fg:x="1024" fg:w="2"/><text x="54.3440%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.11%)</title><rect x="54.0940%" y="533" width="0.1057%" height="15" fill="rgb(251,52,51)" fg:x="1024" fg:w="2"/><text x="54.3440%" y="543.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (2 samples, 0.11%)</title><rect x="54.0940%" y="517" width="0.1057%" height="15" fill="rgb(221,165,28)" fg:x="1024" fg:w="2"/><text x="54.3440%" y="527.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::end_string (2 samples, 0.11%)</title><rect x="54.0940%" y="501" width="0.1057%" height="15" fill="rgb(218,121,47)" fg:x="1024" fg:w="2"/><text x="54.3440%" y="511.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.11%)</title><rect x="54.0940%" y="485" width="0.1057%" height="15" fill="rgb(209,120,9)" fg:x="1024" fg:w="2"/><text x="54.3440%" y="495.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.11%)</title><rect x="54.0940%" y="469" width="0.1057%" height="15" fill="rgb(236,68,12)" fg:x="1024" fg:w="2"/><text x="54.3440%" y="479.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.11%)</title><rect x="54.0940%" y="453" width="0.1057%" height="15" fill="rgb(225,194,26)" fg:x="1024" fg:w="2"/><text x="54.3440%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.11%)</title><rect x="54.0940%" y="437" width="0.1057%" height="15" fill="rgb(231,84,39)" fg:x="1024" fg:w="2"/><text x="54.3440%" y="447.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.05%)</title><rect x="54.1469%" y="421" width="0.0528%" height="15" fill="rgb(210,11,45)" fg:x="1025" fg:w="1"/><text x="54.3969%" y="431.50"></text></g><g><title>maelstrom-txn`std::io::stdio::_eprint (4 samples, 0.21%)</title><rect x="54.1997%" y="821" width="0.2113%" height="15" fill="rgb(224,54,52)" fg:x="1026" fg:w="4"/><text x="54.4497%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (4 samples, 0.21%)</title><rect x="54.1997%" y="805" width="0.2113%" height="15" fill="rgb(238,102,14)" fg:x="1026" fg:w="4"/><text x="54.4497%" y="815.50"></text></g><g><title>maelstrom-txn`core::fmt::write (4 samples, 0.21%)</title><rect x="54.1997%" y="789" width="0.2113%" height="15" fill="rgb(243,160,52)" fg:x="1026" fg:w="4"/><text x="54.4497%" y="799.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (4 samples, 0.21%)</title><rect x="54.1997%" y="773" width="0.2113%" height="15" fill="rgb(216,114,19)" fg:x="1026" fg:w="4"/><text x="54.4497%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`write (4 samples, 0.21%)</title><rect x="54.1997%" y="757" width="0.2113%" height="15" fill="rgb(244,166,37)" fg:x="1026" fg:w="4"/><text x="54.4497%" y="767.50"></text></g><g><title>maelstrom-txn`maelstrom_node::node::Node::sync_rpc (60 samples, 3.17%)</title><rect x="51.2942%" y="837" width="3.1696%" height="15" fill="rgb(246,29,44)" fg:x="971" fg:w="60"/><text x="51.5442%" y="847.50">mae..</text></g><g><title>maelstrom-txn`std::io::stdio::_print (1 samples, 0.05%)</title><rect x="54.4110%" y="821" width="0.0528%" height="15" fill="rgb(215,56,53)" fg:x="1030" fg:w="1"/><text x="54.6610%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.05%)</title><rect x="54.4110%" y="805" width="0.0528%" height="15" fill="rgb(217,60,2)" fg:x="1030" fg:w="1"/><text x="54.6610%" y="815.50"></text></g><g><title>maelstrom-txn`core::fmt::write (1 samples, 0.05%)</title><rect x="54.4110%" y="789" width="0.0528%" height="15" fill="rgb(207,26,24)" fg:x="1030" fg:w="1"/><text x="54.6610%" y="799.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="54.4110%" y="773" width="0.0528%" height="15" fill="rgb(252,210,15)" fg:x="1030" fg:w="1"/><text x="54.6610%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.05%)</title><rect x="54.4110%" y="757" width="0.0528%" height="15" fill="rgb(253,209,26)" fg:x="1030" fg:w="1"/><text x="54.6610%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.05%)</title><rect x="54.4110%" y="741" width="0.0528%" height="15" fill="rgb(238,170,14)" fg:x="1030" fg:w="1"/><text x="54.6610%" y="751.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,alloc::string::String&gt;&gt; (1 samples, 0.05%)</title><rect x="54.4638%" y="821" width="0.0528%" height="15" fill="rgb(216,178,15)" fg:x="1031" fg:w="1"/><text x="54.7138%" y="831.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;usize,alloc::string::String,std::hash::random::RandomState&gt;&gt; (1 samples, 0.05%)</title><rect x="54.4638%" y="805" width="0.0528%" height="15" fill="rgb(250,197,2)" fg:x="1031" fg:w="1"/><text x="54.7138%" y="815.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(usize,alloc::string::String)&gt;&gt; (1 samples, 0.05%)</title><rect x="54.4638%" y="789" width="0.0528%" height="15" fill="rgb(212,70,42)" fg:x="1031" fg:w="1"/><text x="54.7138%" y="799.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="54.4638%" y="773" width="0.0528%" height="15" fill="rgb(227,213,9)" fg:x="1031" fg:w="1"/><text x="54.7138%" y="783.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.05%)</title><rect x="54.4638%" y="757" width="0.0528%" height="15" fill="rgb(245,99,25)" fg:x="1031" fg:w="1"/><text x="54.7138%" y="767.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::TableLayout::calculate_layout_for (1 samples, 0.05%)</title><rect x="54.4638%" y="741" width="0.0528%" height="15" fill="rgb(250,82,29)" fg:x="1031" fg:w="1"/><text x="54.7138%" y="751.50"></text></g><g><title>maelstrom-txn`alloc::str::_&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.05%)</title><rect x="54.6223%" y="645" width="0.0528%" height="15" fill="rgb(241,226,54)" fg:x="1034" fg:w="1"/><text x="54.8723%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.05%)</title><rect x="54.6223%" y="629" width="0.0528%" height="15" fill="rgb(221,99,41)" fg:x="1034" fg:w="1"/><text x="54.8723%" y="639.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.05%)</title><rect x="54.6223%" y="613" width="0.0528%" height="15" fill="rgb(213,90,21)" fg:x="1034" fg:w="1"/><text x="54.8723%" y="623.50"></text></g><g><title>maelstrom-txn`core::ub_checks::is_nonoverlapping::runtime (1 samples, 0.05%)</title><rect x="54.6223%" y="597" width="0.0528%" height="15" fill="rgb(205,208,24)" fg:x="1034" fg:w="1"/><text x="54.8723%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.11%)</title><rect x="54.6223%" y="709" width="0.1057%" height="15" fill="rgb(246,31,12)" fg:x="1034" fg:w="2"/><text x="54.8723%" y="719.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.11%)</title><rect x="54.6223%" y="693" width="0.1057%" height="15" fill="rgb(213,154,6)" fg:x="1034" fg:w="2"/><text x="54.8723%" y="703.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for usize&gt;::serialize (2 samples, 0.11%)</title><rect x="54.6223%" y="677" width="0.1057%" height="15" fill="rgb(222,163,29)" fg:x="1034" fg:w="2"/><text x="54.8723%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::ser::MapKeySerializer as serde::ser::Serializer&gt;::serialize_u64 (2 samples, 0.11%)</title><rect x="54.6223%" y="661" width="0.1057%" height="15" fill="rgb(227,201,8)" fg:x="1034" fg:w="2"/><text x="54.8723%" y="671.50"></text></g><g><title>maelstrom-txn`itoa::Buffer::format (1 samples, 0.05%)</title><rect x="54.6751%" y="645" width="0.0528%" height="15" fill="rgb(233,9,32)" fg:x="1035" fg:w="1"/><text x="54.9251%" y="655.50"></text></g><g><title>maelstrom-txn`itoa::_&lt;impl itoa::private::Sealed for u64&gt;::write (1 samples, 0.05%)</title><rect x="54.6751%" y="629" width="0.0528%" height="15" fill="rgb(217,54,24)" fg:x="1035" fg:w="1"/><text x="54.9251%" y="639.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.05%)</title><rect x="54.6751%" y="613" width="0.0528%" height="15" fill="rgb(235,192,0)" fg:x="1035" fg:w="1"/><text x="54.9251%" y="623.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (3 samples, 0.16%)</title><rect x="54.7279%" y="661" width="0.1585%" height="15" fill="rgb(235,45,9)" fg:x="1036" fg:w="3"/><text x="54.9779%" y="671.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (3 samples, 0.16%)</title><rect x="54.7279%" y="645" width="0.1585%" height="15" fill="rgb(246,42,40)" fg:x="1036" fg:w="3"/><text x="54.9779%" y="655.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (3 samples, 0.16%)</title><rect x="54.7279%" y="629" width="0.1585%" height="15" fill="rgb(248,111,24)" fg:x="1036" fg:w="3"/><text x="54.9779%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (2 samples, 0.11%)</title><rect x="54.7808%" y="613" width="0.1057%" height="15" fill="rgb(249,65,22)" fg:x="1037" fg:w="2"/><text x="55.0308%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (2 samples, 0.11%)</title><rect x="54.7808%" y="597" width="0.1057%" height="15" fill="rgb(238,111,51)" fg:x="1037" fg:w="2"/><text x="55.0308%" y="607.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (2 samples, 0.11%)</title><rect x="54.7808%" y="581" width="0.1057%" height="15" fill="rgb(250,118,22)" fg:x="1037" fg:w="2"/><text x="55.0308%" y="591.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert::_{{closure}} (1 samples, 0.05%)</title><rect x="54.8864%" y="629" width="0.0528%" height="15" fill="rgb(234,84,26)" fg:x="1039" fg:w="1"/><text x="55.1364%" y="639.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::mem::replace (1 samples, 0.05%)</title><rect x="54.8864%" y="613" width="0.0528%" height="15" fill="rgb(243,172,12)" fg:x="1039" fg:w="1"/><text x="55.1364%" y="623.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::mem::take_mut::_{{closure}} (1 samples, 0.05%)</title><rect x="54.8864%" y="597" width="0.0528%" height="15" fill="rgb(236,150,49)" fg:x="1039" fg:w="1"/><text x="55.1364%" y="607.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level::_{{closure}} (1 samples, 0.05%)</title><rect x="54.8864%" y="581" width="0.0528%" height="15" fill="rgb(225,197,26)" fg:x="1039" fg:w="1"/><text x="55.1364%" y="591.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal&gt;::new_internal (1 samples, 0.05%)</title><rect x="54.8864%" y="565" width="0.0528%" height="15" fill="rgb(214,17,42)" fg:x="1039" fg:w="1"/><text x="55.1364%" y="575.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal&gt;::from_new_internal (1 samples, 0.05%)</title><rect x="54.8864%" y="549" width="0.0528%" height="15" fill="rgb(224,165,40)" fg:x="1039" fg:w="1"/><text x="55.1364%" y="559.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::correct_parent_link (1 samples, 0.05%)</title><rect x="54.8864%" y="533" width="0.0528%" height="15" fill="rgb(246,100,4)" fg:x="1039" fg:w="1"/><text x="55.1364%" y="543.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (1 samples, 0.05%)</title><rect x="54.9392%" y="613" width="0.0528%" height="15" fill="rgb(222,103,0)" fg:x="1040" fg:w="1"/><text x="55.1892%" y="623.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::slice_insert (1 samples, 0.05%)</title><rect x="54.9392%" y="597" width="0.0528%" height="15" fill="rgb(227,189,26)" fg:x="1040" fg:w="1"/><text x="55.1892%" y="607.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy::precondition_check (1 samples, 0.05%)</title><rect x="54.9392%" y="581" width="0.0528%" height="15" fill="rgb(214,202,17)" fg:x="1040" fg:w="1"/><text x="55.1892%" y="591.50"></text></g><g><title>maelstrom-txn`serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (6 samples, 0.32%)</title><rect x="54.7279%" y="693" width="0.3170%" height="15" fill="rgb(229,111,3)" fg:x="1036" fg:w="6"/><text x="54.9779%" y="703.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.32%)</title><rect x="54.7279%" y="677" width="0.3170%" height="15" fill="rgb(229,172,15)" fg:x="1036" fg:w="6"/><text x="54.9779%" y="687.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.16%)</title><rect x="54.8864%" y="661" width="0.1585%" height="15" fill="rgb(230,224,35)" fg:x="1039" fg:w="3"/><text x="55.1364%" y="671.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.16%)</title><rect x="54.8864%" y="645" width="0.1585%" height="15" fill="rgb(251,141,6)" fg:x="1039" fg:w="3"/><text x="55.1364%" y="655.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (2 samples, 0.11%)</title><rect x="54.9392%" y="629" width="0.1057%" height="15" fill="rgb(225,208,6)" fg:x="1040" fg:w="2"/><text x="55.1892%" y="639.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (1 samples, 0.05%)</title><rect x="54.9921%" y="613" width="0.0528%" height="15" fill="rgb(246,181,16)" fg:x="1041" fg:w="1"/><text x="55.2421%" y="623.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1 samples, 0.05%)</title><rect x="54.9921%" y="597" width="0.0528%" height="15" fill="rgb(227,129,36)" fg:x="1041" fg:w="1"/><text x="55.2421%" y="607.50"></text></g><g><title>maelstrom-txn`alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 0.05%)</title><rect x="54.9921%" y="581" width="0.0528%" height="15" fill="rgb(248,117,24)" fg:x="1041" fg:w="1"/><text x="55.2421%" y="591.50"></text></g><g><title>maelstrom-txn`alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1 samples, 0.05%)</title><rect x="54.9921%" y="565" width="0.0528%" height="15" fill="rgb(214,185,35)" fg:x="1041" fg:w="1"/><text x="55.2421%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="54.9921%" y="549" width="0.0528%" height="15" fill="rgb(236,150,34)" fg:x="1041" fg:w="1"/><text x="55.2421%" y="559.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="54.9921%" y="533" width="0.0528%" height="15" fill="rgb(243,228,27)" fg:x="1041" fg:w="1"/><text x="55.2421%" y="543.50"></text></g><g><title>maelstrom-txn`alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="54.9921%" y="517" width="0.0528%" height="15" fill="rgb(245,77,44)" fg:x="1041" fg:w="1"/><text x="55.2421%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="54.9921%" y="501" width="0.0528%" height="15" fill="rgb(235,214,42)" fg:x="1041" fg:w="1"/><text x="55.2421%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="54.9921%" y="485" width="0.0528%" height="15" fill="rgb(221,74,3)" fg:x="1041" fg:w="1"/><text x="55.2421%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.05%)</title><rect x="54.9921%" y="469" width="0.0528%" height="15" fill="rgb(206,121,29)" fg:x="1041" fg:w="1"/><text x="55.2421%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="55.0449%" y="549" width="0.0528%" height="15" fill="rgb(249,131,53)" fg:x="1042" fg:w="1"/><text x="55.2949%" y="559.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="55.0449%" y="533" width="0.0528%" height="15" fill="rgb(236,170,29)" fg:x="1042" fg:w="1"/><text x="55.2949%" y="543.50"></text></g><g><title>maelstrom-txn`alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="55.0449%" y="517" width="0.0528%" height="15" fill="rgb(247,96,15)" fg:x="1042" fg:w="1"/><text x="55.2949%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.05%)</title><rect x="55.0449%" y="501" width="0.0528%" height="15" fill="rgb(211,210,7)" fg:x="1042" fg:w="1"/><text x="55.2949%" y="511.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::try_for_each (11 samples, 0.58%)</title><rect x="54.5695%" y="789" width="0.5811%" height="15" fill="rgb(240,88,50)" fg:x="1033" fg:w="11"/><text x="54.8195%" y="799.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.58%)</title><rect x="54.5695%" y="773" width="0.5811%" height="15" fill="rgb(209,229,26)" fg:x="1033" fg:w="11"/><text x="54.8195%" y="783.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (11 samples, 0.58%)</title><rect x="54.5695%" y="757" width="0.5811%" height="15" fill="rgb(210,68,23)" fg:x="1033" fg:w="11"/><text x="54.8195%" y="767.50"></text></g><g><title>maelstrom-txn`serde::ser::Serializer::collect_map::_{{closure}} (11 samples, 0.58%)</title><rect x="54.5695%" y="741" width="0.5811%" height="15" fill="rgb(229,180,13)" fg:x="1033" fg:w="11"/><text x="54.8195%" y="751.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (11 samples, 0.58%)</title><rect x="54.5695%" y="725" width="0.5811%" height="15" fill="rgb(236,53,44)" fg:x="1033" fg:w="11"/><text x="54.8195%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.42%)</title><rect x="54.7279%" y="709" width="0.4226%" height="15" fill="rgb(244,214,29)" fg:x="1036" fg:w="8"/><text x="54.9779%" y="719.50"></text></g><g><title>maelstrom-txn`serde_json::value::to_value (2 samples, 0.11%)</title><rect x="55.0449%" y="693" width="0.1057%" height="15" fill="rgb(220,75,29)" fg:x="1042" fg:w="2"/><text x="55.2949%" y="703.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.11%)</title><rect x="55.0449%" y="677" width="0.1057%" height="15" fill="rgb(214,183,37)" fg:x="1042" fg:w="2"/><text x="55.2949%" y="687.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.11%)</title><rect x="55.0449%" y="661" width="0.1057%" height="15" fill="rgb(239,117,29)" fg:x="1042" fg:w="2"/><text x="55.2949%" y="671.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (2 samples, 0.11%)</title><rect x="55.0449%" y="645" width="0.1057%" height="15" fill="rgb(237,171,35)" fg:x="1042" fg:w="2"/><text x="55.2949%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.11%)</title><rect x="55.0449%" y="629" width="0.1057%" height="15" fill="rgb(229,178,53)" fg:x="1042" fg:w="2"/><text x="55.2949%" y="639.50"></text></g><g><title>maelstrom-txn`alloc::str::_&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.11%)</title><rect x="55.0449%" y="613" width="0.1057%" height="15" fill="rgb(210,102,19)" fg:x="1042" fg:w="2"/><text x="55.2949%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.11%)</title><rect x="55.0449%" y="597" width="0.1057%" height="15" fill="rgb(235,127,22)" fg:x="1042" fg:w="2"/><text x="55.2949%" y="607.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2 samples, 0.11%)</title><rect x="55.0449%" y="581" width="0.1057%" height="15" fill="rgb(244,31,31)" fg:x="1042" fg:w="2"/><text x="55.2949%" y="591.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2 samples, 0.11%)</title><rect x="55.0449%" y="565" width="0.1057%" height="15" fill="rgb(231,43,21)" fg:x="1042" fg:w="2"/><text x="55.2949%" y="575.50"></text></g><g><title>maelstrom-txn`core::alloc::layout::Layout::repeat (1 samples, 0.05%)</title><rect x="55.0977%" y="549" width="0.0528%" height="15" fill="rgb(217,131,35)" fg:x="1043" fg:w="1"/><text x="55.3477%" y="559.50"></text></g><g><title>maelstrom-txn`serde_json::value::to_value (14 samples, 0.74%)</title><rect x="54.4638%" y="837" width="0.7396%" height="15" fill="rgb(221,149,4)" fg:x="1031" fg:w="14"/><text x="54.7138%" y="847.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (13 samples, 0.69%)</title><rect x="54.5166%" y="821" width="0.6867%" height="15" fill="rgb(232,170,28)" fg:x="1032" fg:w="13"/><text x="54.7666%" y="831.50"></text></g><g><title>maelstrom-txn`serde::ser::Serializer::collect_map (13 samples, 0.69%)</title><rect x="54.5166%" y="805" width="0.6867%" height="15" fill="rgb(238,56,10)" fg:x="1032" fg:w="13"/><text x="54.7666%" y="815.50"></text></g><g><title>maelstrom-txn`serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::new (1 samples, 0.05%)</title><rect x="55.1506%" y="789" width="0.0528%" height="15" fill="rgb(235,196,14)" fg:x="1044" fg:w="1"/><text x="55.4006%" y="799.50"></text></g><g><title>maelstrom-txn`&lt;&amp;T as core::fmt::Debug&gt;::fmt (8 samples, 0.42%)</title><rect x="55.2034%" y="709" width="0.4226%" height="15" fill="rgb(216,45,48)" fg:x="1045" fg:w="8"/><text x="55.4534%" y="719.50"></text></g><g><title>maelstrom-txn`core::fmt::num::_&lt;impl core::fmt::Debug for usize&gt;::fmt (8 samples, 0.42%)</title><rect x="55.2034%" y="693" width="0.4226%" height="15" fill="rgb(238,213,17)" fg:x="1045" fg:w="8"/><text x="55.4534%" y="703.50"></text></g><g><title>maelstrom-txn`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (8 samples, 0.42%)</title><rect x="55.2034%" y="677" width="0.4226%" height="15" fill="rgb(212,13,2)" fg:x="1045" fg:w="8"/><text x="55.4534%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (8 samples, 0.42%)</title><rect x="55.2034%" y="661" width="0.4226%" height="15" fill="rgb(240,114,20)" fg:x="1045" fg:w="8"/><text x="55.4534%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (8 samples, 0.42%)</title><rect x="55.2034%" y="645" width="0.4226%" height="15" fill="rgb(228,41,40)" fg:x="1045" fg:w="8"/><text x="55.4534%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`write (8 samples, 0.42%)</title><rect x="55.2034%" y="629" width="0.4226%" height="15" fill="rgb(244,132,35)" fg:x="1045" fg:w="8"/><text x="55.4534%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`write (11 samples, 0.58%)</title><rect x="55.6260%" y="677" width="0.5811%" height="15" fill="rgb(253,189,4)" fg:x="1053" fg:w="11"/><text x="55.8760%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (12 samples, 0.63%)</title><rect x="55.6260%" y="709" width="0.6339%" height="15" fill="rgb(224,37,19)" fg:x="1053" fg:w="12"/><text x="55.8760%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (12 samples, 0.63%)</title><rect x="55.6260%" y="693" width="0.6339%" height="15" fill="rgb(235,223,18)" fg:x="1053" fg:w="12"/><text x="55.8760%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (1 samples, 0.05%)</title><rect x="56.2071%" y="677" width="0.0528%" height="15" fill="rgb(235,163,25)" fg:x="1064" fg:w="1"/><text x="56.4571%" y="687.50"></text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::entry (21 samples, 1.11%)</title><rect x="55.2034%" y="741" width="1.1094%" height="15" fill="rgb(217,145,28)" fg:x="1045" fg:w="21"/><text x="55.4534%" y="751.50"></text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::key (21 samples, 1.11%)</title><rect x="55.2034%" y="725" width="1.1094%" height="15" fill="rgb(223,223,32)" fg:x="1045" fg:w="21"/><text x="55.4534%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="56.2599%" y="709" width="0.0528%" height="15" fill="rgb(227,189,39)" fg:x="1065" fg:w="1"/><text x="56.5099%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.05%)</title><rect x="56.2599%" y="693" width="0.0528%" height="15" fill="rgb(248,10,22)" fg:x="1065" fg:w="1"/><text x="56.5099%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (5 samples, 0.26%)</title><rect x="56.3127%" y="677" width="0.2641%" height="15" fill="rgb(248,46,39)" fg:x="1066" fg:w="5"/><text x="56.5627%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (5 samples, 0.26%)</title><rect x="56.3127%" y="661" width="0.2641%" height="15" fill="rgb(248,113,48)" fg:x="1066" fg:w="5"/><text x="56.5627%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`write (5 samples, 0.26%)</title><rect x="56.3127%" y="645" width="0.2641%" height="15" fill="rgb(245,16,25)" fg:x="1066" fg:w="5"/><text x="56.5627%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`write (12 samples, 0.63%)</title><rect x="56.5769%" y="661" width="0.6339%" height="15" fill="rgb(249,152,16)" fg:x="1071" fg:w="12"/><text x="56.8269%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;&amp;T as core::fmt::Debug&gt;::fmt (18 samples, 0.95%)</title><rect x="56.3127%" y="725" width="0.9509%" height="15" fill="rgb(250,16,1)" fg:x="1066" fg:w="18"/><text x="56.5627%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::fmt::Debug&gt;::fmt (18 samples, 0.95%)</title><rect x="56.3127%" y="709" width="0.9509%" height="15" fill="rgb(249,138,3)" fg:x="1066" fg:w="18"/><text x="56.5627%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;str as core::fmt::Debug&gt;::fmt (18 samples, 0.95%)</title><rect x="56.3127%" y="693" width="0.9509%" height="15" fill="rgb(227,71,41)" fg:x="1066" fg:w="18"/><text x="56.5627%" y="703.50"></text></g><g><title>maelstrom-txn`core::fmt::Write::write_char (13 samples, 0.69%)</title><rect x="56.5769%" y="677" width="0.6867%" height="15" fill="rgb(209,184,23)" fg:x="1071" fg:w="13"/><text x="56.8269%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (1 samples, 0.05%)</title><rect x="57.2108%" y="661" width="0.0528%" height="15" fill="rgb(223,215,31)" fg:x="1083" fg:w="1"/><text x="57.4608%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (7 samples, 0.37%)</title><rect x="57.2636%" y="725" width="0.3698%" height="15" fill="rgb(210,146,28)" fg:x="1084" fg:w="7"/><text x="57.5136%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (7 samples, 0.37%)</title><rect x="57.2636%" y="709" width="0.3698%" height="15" fill="rgb(209,183,41)" fg:x="1084" fg:w="7"/><text x="57.5136%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`write (6 samples, 0.32%)</title><rect x="57.3164%" y="693" width="0.3170%" height="15" fill="rgb(209,224,45)" fg:x="1085" fg:w="6"/><text x="57.5664%" y="703.50"></text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::entries (47 samples, 2.48%)</title><rect x="55.2034%" y="757" width="2.4828%" height="15" fill="rgb(224,209,51)" fg:x="1045" fg:w="47"/><text x="55.4534%" y="767.50">ma..</text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::value (26 samples, 1.37%)</title><rect x="56.3127%" y="741" width="1.3735%" height="15" fill="rgb(223,17,39)" fg:x="1066" fg:w="26"/><text x="56.5627%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="57.6334%" y="725" width="0.0528%" height="15" fill="rgb(234,204,37)" fg:x="1091" fg:w="1"/><text x="57.8834%" y="735.50"></text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::entry (1 samples, 0.05%)</title><rect x="57.6862%" y="757" width="0.0528%" height="15" fill="rgb(236,120,5)" fg:x="1092" fg:w="1"/><text x="57.9362%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;&amp;T as core::fmt::Debug&gt;::fmt (51 samples, 2.69%)</title><rect x="55.2034%" y="789" width="2.6941%" height="15" fill="rgb(248,97,27)" fg:x="1045" fg:w="51"/><text x="55.4534%" y="799.50">ma..</text></g><g><title>maelstrom-txn`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::fmt::Debug&gt;::fmt (51 samples, 2.69%)</title><rect x="55.2034%" y="773" width="2.6941%" height="15" fill="rgb(240,66,17)" fg:x="1045" fg:w="51"/><text x="55.4534%" y="783.50">ma..</text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::finish (3 samples, 0.16%)</title><rect x="57.7390%" y="757" width="0.1585%" height="15" fill="rgb(210,79,3)" fg:x="1093" fg:w="3"/><text x="57.9890%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3 samples, 0.16%)</title><rect x="57.7390%" y="741" width="0.1585%" height="15" fill="rgb(214,176,27)" fg:x="1093" fg:w="3"/><text x="57.9890%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`write (3 samples, 0.16%)</title><rect x="57.7390%" y="725" width="0.1585%" height="15" fill="rgb(235,185,3)" fg:x="1093" fg:w="3"/><text x="57.9890%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.05%)</title><rect x="57.8975%" y="789" width="0.0528%" height="15" fill="rgb(227,24,12)" fg:x="1096" fg:w="1"/><text x="58.1475%" y="799.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="57.8975%" y="773" width="0.0528%" height="15" fill="rgb(252,169,48)" fg:x="1096" fg:w="1"/><text x="58.1475%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.05%)</title><rect x="57.8975%" y="757" width="0.0528%" height="15" fill="rgb(212,65,1)" fg:x="1096" fg:w="1"/><text x="58.1475%" y="767.50"></text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Root::save_partition (134 samples, 7.08%)</title><rect x="51.0301%" y="853" width="7.0787%" height="15" fill="rgb(242,39,24)" fg:x="966" fg:w="134"/><text x="51.2801%" y="863.50">maelstrom..</text></g><g><title>maelstrom-txn`std::io::stdio::_eprint (55 samples, 2.91%)</title><rect x="55.2034%" y="837" width="2.9054%" height="15" fill="rgb(249,32,23)" fg:x="1045" fg:w="55"/><text x="55.4534%" y="847.50">ma..</text></g><g><title>maelstrom-txn`&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (55 samples, 2.91%)</title><rect x="55.2034%" y="821" width="2.9054%" height="15" fill="rgb(251,195,23)" fg:x="1045" fg:w="55"/><text x="55.4534%" y="831.50">ma..</text></g><g><title>maelstrom-txn`core::fmt::write (55 samples, 2.91%)</title><rect x="55.2034%" y="805" width="2.9054%" height="15" fill="rgb(236,174,8)" fg:x="1045" fg:w="55"/><text x="55.4534%" y="815.50">ma..</text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3 samples, 0.16%)</title><rect x="57.9503%" y="789" width="0.1585%" height="15" fill="rgb(220,197,8)" fg:x="1097" fg:w="3"/><text x="58.2003%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`write (3 samples, 0.16%)</title><rect x="57.9503%" y="773" width="0.1585%" height="15" fill="rgb(240,108,37)" fg:x="1097" fg:w="3"/><text x="58.2003%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.05%)</title><rect x="58.1088%" y="805" width="0.0528%" height="15" fill="rgb(232,176,24)" fg:x="1100" fg:w="1"/><text x="58.3588%" y="815.50"></text></g><g><title>maelstrom-txn`core::hash::BuildHasher::hash_one (2 samples, 0.11%)</title><rect x="58.1088%" y="821" width="0.1057%" height="15" fill="rgb(243,35,29)" fg:x="1100" fg:w="2"/><text x="58.3588%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.05%)</title><rect x="58.1616%" y="805" width="0.0528%" height="15" fill="rgb(210,37,18)" fg:x="1101" fg:w="1"/><text x="58.4116%" y="815.50"></text></g><g><title>maelstrom-txn`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.05%)</title><rect x="58.1616%" y="789" width="0.0528%" height="15" fill="rgb(224,184,40)" fg:x="1101" fg:w="1"/><text x="58.4116%" y="799.50"></text></g><g><title>maelstrom-txn`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.05%)</title><rect x="58.1616%" y="773" width="0.0528%" height="15" fill="rgb(236,39,29)" fg:x="1101" fg:w="1"/><text x="58.4116%" y="783.50"></text></g><g><title>maelstrom-txn`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.21%)</title><rect x="58.1088%" y="853" width="0.2113%" height="15" fill="rgb(232,48,39)" fg:x="1100" fg:w="4"/><text x="58.3588%" y="863.50"></text></g><g><title>maelstrom-txn`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.21%)</title><rect x="58.1088%" y="837" width="0.2113%" height="15" fill="rgb(236,34,42)" fg:x="1100" fg:w="4"/><text x="58.3588%" y="847.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.11%)</title><rect x="58.2145%" y="821" width="0.1057%" height="15" fill="rgb(243,106,37)" fg:x="1102" fg:w="2"/><text x="58.4645%" y="831.50"></text></g><g><title>maelstrom-txn`core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.11%)</title><rect x="58.2145%" y="805" width="0.1057%" height="15" fill="rgb(218,96,6)" fg:x="1102" fg:w="2"/><text x="58.4645%" y="815.50"></text></g><g><title>maelstrom-txn`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.05%)</title><rect x="58.3201%" y="837" width="0.0528%" height="15" fill="rgb(235,130,12)" fg:x="1104" fg:w="1"/><text x="58.5701%" y="847.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.05%)</title><rect x="58.3201%" y="821" width="0.0528%" height="15" fill="rgb(231,95,0)" fg:x="1104" fg:w="1"/><text x="58.5701%" y="831.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.05%)</title><rect x="58.3201%" y="805" width="0.0528%" height="15" fill="rgb(228,12,23)" fg:x="1104" fg:w="1"/><text x="58.5701%" y="815.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.05%)</title><rect x="58.3201%" y="789" width="0.0528%" height="15" fill="rgb(216,12,1)" fg:x="1104" fg:w="1"/><text x="58.5701%" y="799.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.05%)</title><rect x="58.3201%" y="773" width="0.0528%" height="15" fill="rgb(219,59,3)" fg:x="1104" fg:w="1"/><text x="58.5701%" y="783.50"></text></g><g><title>maelstrom-txn`core::hash::BuildHasher::hash_one (1 samples, 0.05%)</title><rect x="58.3201%" y="757" width="0.0528%" height="15" fill="rgb(215,208,46)" fg:x="1104" fg:w="1"/><text x="58.5701%" y="767.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::for_each (143 samples, 7.55%)</title><rect x="50.8716%" y="965" width="7.5541%" height="15" fill="rgb(254,224,29)" fg:x="963" fg:w="143"/><text x="51.1216%" y="975.50">maelstrom-..</text></g><g><title>maelstrom-txn`&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (143 samples, 7.55%)</title><rect x="50.8716%" y="949" width="7.5541%" height="15" fill="rgb(232,14,29)" fg:x="963" fg:w="143"/><text x="51.1216%" y="959.50">maelstrom-..</text></g><g><title>maelstrom-txn`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (143 samples, 7.55%)</title><rect x="50.8716%" y="933" width="7.5541%" height="15" fill="rgb(208,45,52)" fg:x="963" fg:w="143"/><text x="51.1216%" y="943.50">maelstrom-..</text></g><g><title>maelstrom-txn`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (143 samples, 7.55%)</title><rect x="50.8716%" y="917" width="7.5541%" height="15" fill="rgb(234,191,28)" fg:x="963" fg:w="143"/><text x="51.1216%" y="927.50">maelstrom-..</text></g><g><title>maelstrom-txn`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (143 samples, 7.55%)</title><rect x="50.8716%" y="901" width="7.5541%" height="15" fill="rgb(244,67,43)" fg:x="963" fg:w="143"/><text x="51.1216%" y="911.50">maelstrom-..</text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (143 samples, 7.55%)</title><rect x="50.8716%" y="885" width="7.5541%" height="15" fill="rgb(236,189,24)" fg:x="963" fg:w="143"/><text x="51.1216%" y="895.50">maelstrom-..</text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Root::save::_{{closure}} (142 samples, 7.50%)</title><rect x="50.9245%" y="869" width="7.5013%" height="15" fill="rgb(239,214,33)" fg:x="964" fg:w="142"/><text x="51.1745%" y="879.50">maelstrom-..</text></g><g><title>maelstrom-txn`std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (2 samples, 0.11%)</title><rect x="58.3201%" y="853" width="0.1057%" height="15" fill="rgb(226,176,41)" fg:x="1104" fg:w="2"/><text x="58.5701%" y="863.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (1 samples, 0.05%)</title><rect x="58.3730%" y="837" width="0.0528%" height="15" fill="rgb(248,47,8)" fg:x="1105" fg:w="1"/><text x="58.6230%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`read (5 samples, 0.26%)</title><rect x="58.4258%" y="933" width="0.2641%" height="15" fill="rgb(218,81,44)" fg:x="1106" fg:w="5"/><text x="58.6758%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="58.6899%" y="917" width="0.0528%" height="15" fill="rgb(213,98,6)" fg:x="1111" fg:w="1"/><text x="58.9399%" y="927.50"></text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StdinLock as std::io::BufRead&gt;::read_line (7 samples, 0.37%)</title><rect x="58.4258%" y="949" width="0.3698%" height="15" fill="rgb(222,85,22)" fg:x="1106" fg:w="7"/><text x="58.6758%" y="959.50"></text></g><g><title>maelstrom-txn`std::io::read_until (2 samples, 0.11%)</title><rect x="58.6899%" y="933" width="0.1057%" height="15" fill="rgb(239,46,39)" fg:x="1111" fg:w="2"/><text x="58.9399%" y="943.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::finish_grow (1 samples, 0.05%)</title><rect x="58.7427%" y="917" width="0.0528%" height="15" fill="rgb(237,12,29)" fg:x="1112" fg:w="1"/><text x="58.9927%" y="927.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.05%)</title><rect x="58.7956%" y="949" width="0.0528%" height="15" fill="rgb(214,77,8)" fg:x="1113" fg:w="1"/><text x="59.0456%" y="959.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="58.7956%" y="933" width="0.0528%" height="15" fill="rgb(217,168,37)" fg:x="1113" fg:w="1"/><text x="59.0456%" y="943.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="58.7956%" y="917" width="0.0528%" height="15" fill="rgb(221,217,23)" fg:x="1113" fg:w="1"/><text x="59.0456%" y="927.50"></text></g><g><title>maelstrom-txn`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="58.7956%" y="901" width="0.0528%" height="15" fill="rgb(243,229,36)" fg:x="1113" fg:w="1"/><text x="59.0456%" y="911.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1 samples, 0.05%)</title><rect x="58.7956%" y="885" width="0.0528%" height="15" fill="rgb(251,163,40)" fg:x="1113" fg:w="1"/><text x="59.0456%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="58.7956%" y="869" width="0.0528%" height="15" fill="rgb(237,222,12)" fg:x="1113" fg:w="1"/><text x="59.0456%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.05%)</title><rect x="58.7956%" y="853" width="0.0528%" height="15" fill="rgb(248,132,6)" fg:x="1113" fg:w="1"/><text x="59.0456%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.05%)</title><rect x="58.7956%" y="837" width="0.0528%" height="15" fill="rgb(227,167,50)" fg:x="1113" fg:w="1"/><text x="59.0456%" y="847.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::mem::replace (1 samples, 0.05%)</title><rect x="58.9012%" y="773" width="0.0528%" height="15" fill="rgb(242,84,37)" fg:x="1115" fg:w="1"/><text x="59.1512%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="59.0069%" y="709" width="0.0528%" height="15" fill="rgb(212,4,50)" fg:x="1117" fg:w="1"/><text x="59.2569%" y="719.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (1 samples, 0.05%)</title><rect x="59.0597%" y="709" width="0.0528%" height="15" fill="rgb(230,228,32)" fg:x="1118" fg:w="1"/><text x="59.3097%" y="719.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (8 samples, 0.42%)</title><rect x="58.8484%" y="789" width="0.4226%" height="15" fill="rgb(248,217,23)" fg:x="1114" fg:w="8"/><text x="59.0984%" y="799.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (6 samples, 0.32%)</title><rect x="58.9540%" y="773" width="0.3170%" height="15" fill="rgb(238,197,32)" fg:x="1116" fg:w="6"/><text x="59.2040%" y="783.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::mem::replace (6 samples, 0.32%)</title><rect x="58.9540%" y="757" width="0.3170%" height="15" fill="rgb(236,106,1)" fg:x="1116" fg:w="6"/><text x="59.2040%" y="767.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (5 samples, 0.26%)</title><rect x="59.0069%" y="741" width="0.2641%" height="15" fill="rgb(219,228,13)" fg:x="1117" fg:w="5"/><text x="59.2569%" y="751.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (5 samples, 0.26%)</title><rect x="59.0069%" y="725" width="0.2641%" height="15" fill="rgb(238,30,35)" fg:x="1117" fg:w="5"/><text x="59.2569%" y="735.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (3 samples, 0.16%)</title><rect x="59.1125%" y="709" width="0.1585%" height="15" fill="rgb(236,70,23)" fg:x="1119" fg:w="3"/><text x="59.3625%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.16%)</title><rect x="59.1125%" y="693" width="0.1585%" height="15" fill="rgb(249,104,48)" fg:x="1119" fg:w="3"/><text x="59.3625%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.16%)</title><rect x="59.1125%" y="677" width="0.1585%" height="15" fill="rgb(254,117,50)" fg:x="1119" fg:w="3"/><text x="59.3625%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.16%)</title><rect x="59.1125%" y="661" width="0.1585%" height="15" fill="rgb(223,152,4)" fg:x="1119" fg:w="3"/><text x="59.3625%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.05%)</title><rect x="59.2182%" y="645" width="0.0528%" height="15" fill="rgb(245,6,2)" fg:x="1121" fg:w="1"/><text x="59.4682%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.21%)</title><rect x="59.3238%" y="693" width="0.2113%" height="15" fill="rgb(249,150,24)" fg:x="1123" fg:w="4"/><text x="59.5738%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.21%)</title><rect x="59.3238%" y="677" width="0.2113%" height="15" fill="rgb(228,185,42)" fg:x="1123" fg:w="4"/><text x="59.5738%" y="687.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::string::String&gt; (6 samples, 0.32%)</title><rect x="59.3238%" y="773" width="0.3170%" height="15" fill="rgb(226,39,33)" fg:x="1123" fg:w="6"/><text x="59.5738%" y="783.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 0.32%)</title><rect x="59.3238%" y="757" width="0.3170%" height="15" fill="rgb(221,166,19)" fg:x="1123" fg:w="6"/><text x="59.5738%" y="767.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.32%)</title><rect x="59.3238%" y="741" width="0.3170%" height="15" fill="rgb(209,109,2)" fg:x="1123" fg:w="6"/><text x="59.5738%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.32%)</title><rect x="59.3238%" y="725" width="0.3170%" height="15" fill="rgb(252,216,26)" fg:x="1123" fg:w="6"/><text x="59.5738%" y="735.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6 samples, 0.32%)</title><rect x="59.3238%" y="709" width="0.3170%" height="15" fill="rgb(227,173,36)" fg:x="1123" fg:w="6"/><text x="59.5738%" y="719.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (2 samples, 0.11%)</title><rect x="59.5351%" y="693" width="0.1057%" height="15" fill="rgb(209,90,7)" fg:x="1127" fg:w="2"/><text x="59.7851%" y="703.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;maelstrom_node::messages::Message&gt; (18 samples, 0.95%)</title><rect x="58.8484%" y="949" width="0.9509%" height="15" fill="rgb(250,194,11)" fg:x="1114" fg:w="18"/><text x="59.0984%" y="959.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;maelstrom_node::messages::MessageBody&gt; (18 samples, 0.95%)</title><rect x="58.8484%" y="933" width="0.9509%" height="15" fill="rgb(220,72,50)" fg:x="1114" fg:w="18"/><text x="59.0984%" y="943.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;maelstrom_node::messages::MessageExtra&gt; (18 samples, 0.95%)</title><rect x="58.8484%" y="917" width="0.9509%" height="15" fill="rgb(222,106,48)" fg:x="1114" fg:w="18"/><text x="59.0984%" y="927.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;maelstrom_node::messages::KvCasData&gt; (18 samples, 0.95%)</title><rect x="58.8484%" y="901" width="0.9509%" height="15" fill="rgb(216,220,45)" fg:x="1114" fg:w="18"/><text x="59.0984%" y="911.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 0.95%)</title><rect x="58.8484%" y="885" width="0.9509%" height="15" fill="rgb(234,112,18)" fg:x="1114" fg:w="18"/><text x="59.0984%" y="895.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (18 samples, 0.95%)</title><rect x="58.8484%" y="869" width="0.9509%" height="15" fill="rgb(206,179,9)" fg:x="1114" fg:w="18"/><text x="59.0984%" y="879.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (18 samples, 0.95%)</title><rect x="58.8484%" y="853" width="0.9509%" height="15" fill="rgb(215,115,40)" fg:x="1114" fg:w="18"/><text x="59.0984%" y="863.50"></text></g><g><title>maelstrom-txn`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.95%)</title><rect x="58.8484%" y="837" width="0.9509%" height="15" fill="rgb(222,69,34)" fg:x="1114" fg:w="18"/><text x="59.0984%" y="847.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (18 samples, 0.95%)</title><rect x="58.8484%" y="821" width="0.9509%" height="15" fill="rgb(209,161,10)" fg:x="1114" fg:w="18"/><text x="59.0984%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.95%)</title><rect x="58.8484%" y="805" width="0.9509%" height="15" fill="rgb(217,6,38)" fg:x="1114" fg:w="18"/><text x="59.0984%" y="815.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (10 samples, 0.53%)</title><rect x="59.2710%" y="789" width="0.5283%" height="15" fill="rgb(229,229,48)" fg:x="1122" fg:w="10"/><text x="59.5210%" y="799.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.16%)</title><rect x="59.6408%" y="773" width="0.1585%" height="15" fill="rgb(225,21,28)" fg:x="1129" fg:w="3"/><text x="59.8908%" y="783.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.16%)</title><rect x="59.6408%" y="757" width="0.1585%" height="15" fill="rgb(206,33,13)" fg:x="1129" fg:w="3"/><text x="59.8908%" y="767.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.16%)</title><rect x="59.6408%" y="741" width="0.1585%" height="15" fill="rgb(242,178,17)" fg:x="1129" fg:w="3"/><text x="59.8908%" y="751.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.16%)</title><rect x="59.6408%" y="725" width="0.1585%" height="15" fill="rgb(220,162,5)" fg:x="1129" fg:w="3"/><text x="59.8908%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.16%)</title><rect x="59.6408%" y="709" width="0.1585%" height="15" fill="rgb(210,33,43)" fg:x="1129" fg:w="3"/><text x="59.8908%" y="719.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3 samples, 0.16%)</title><rect x="59.6408%" y="693" width="0.1585%" height="15" fill="rgb(216,116,54)" fg:x="1129" fg:w="3"/><text x="59.8908%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.16%)</title><rect x="59.6408%" y="677" width="0.1585%" height="15" fill="rgb(249,92,24)" fg:x="1129" fg:w="3"/><text x="59.8908%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.11%)</title><rect x="59.6936%" y="661" width="0.1057%" height="15" fill="rgb(231,189,14)" fg:x="1130" fg:w="2"/><text x="59.9436%" y="671.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;&gt; (1 samples, 0.05%)</title><rect x="59.7993%" y="933" width="0.0528%" height="15" fill="rgb(230,8,41)" fg:x="1132" fg:w="1"/><text x="60.0493%" y="943.50"></text></g><g><title>maelstrom-txn`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.05%)</title><rect x="59.9049%" y="725" width="0.0528%" height="15" fill="rgb(249,7,27)" fg:x="1134" fg:w="1"/><text x="60.1549%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="59.9049%" y="709" width="0.0528%" height="15" fill="rgb(232,86,5)" fg:x="1134" fg:w="1"/><text x="60.1549%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.21%)</title><rect x="59.8521%" y="837" width="0.2113%" height="15" fill="rgb(224,175,18)" fg:x="1133" fg:w="4"/><text x="60.1021%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (4 samples, 0.21%)</title><rect x="59.8521%" y="821" width="0.2113%" height="15" fill="rgb(220,129,12)" fg:x="1133" fg:w="4"/><text x="60.1021%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (3 samples, 0.16%)</title><rect x="59.9049%" y="805" width="0.1585%" height="15" fill="rgb(210,19,36)" fg:x="1134" fg:w="3"/><text x="60.1549%" y="815.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.16%)</title><rect x="59.9049%" y="789" width="0.1585%" height="15" fill="rgb(219,96,14)" fg:x="1134" fg:w="3"/><text x="60.1549%" y="799.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (3 samples, 0.16%)</title><rect x="59.9049%" y="773" width="0.1585%" height="15" fill="rgb(249,106,1)" fg:x="1134" fg:w="3"/><text x="60.1549%" y="783.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::parse_str_bytes (3 samples, 0.16%)</title><rect x="59.9049%" y="757" width="0.1585%" height="15" fill="rgb(249,155,20)" fg:x="1134" fg:w="3"/><text x="60.1549%" y="767.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::skip_to_escape (3 samples, 0.16%)</title><rect x="59.9049%" y="741" width="0.1585%" height="15" fill="rgb(244,168,9)" fg:x="1134" fg:w="3"/><text x="60.1549%" y="751.50"></text></g><g><title>maelstrom-txn`core::slice::_&lt;impl [T]&gt;::chunks_exact (2 samples, 0.11%)</title><rect x="59.9577%" y="725" width="0.1057%" height="15" fill="rgb(216,23,50)" fg:x="1135" fg:w="2"/><text x="60.2077%" y="735.50"></text></g><g><title>maelstrom-txn`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.05%)</title><rect x="60.0106%" y="709" width="0.0528%" height="15" fill="rgb(224,219,20)" fg:x="1136" fg:w="1"/><text x="60.2606%" y="719.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.05%)</title><rect x="60.0106%" y="693" width="0.0528%" height="15" fill="rgb(222,156,15)" fg:x="1136" fg:w="1"/><text x="60.2606%" y="703.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_key (5 samples, 0.26%)</title><rect x="59.8521%" y="869" width="0.2641%" height="15" fill="rgb(231,97,17)" fg:x="1133" fg:w="5"/><text x="60.1021%" y="879.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.26%)</title><rect x="59.8521%" y="853" width="0.2641%" height="15" fill="rgb(218,70,48)" fg:x="1133" fg:w="5"/><text x="60.1021%" y="863.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (1 samples, 0.05%)</title><rect x="60.0634%" y="837" width="0.0528%" height="15" fill="rgb(212,196,52)" fg:x="1137" fg:w="1"/><text x="60.3134%" y="847.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1 samples, 0.05%)</title><rect x="60.0634%" y="821" width="0.0528%" height="15" fill="rgb(243,203,18)" fg:x="1137" fg:w="1"/><text x="60.3134%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="60.1162%" y="709" width="0.0528%" height="15" fill="rgb(252,125,41)" fg:x="1138" fg:w="1"/><text x="60.3662%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.11%)</title><rect x="60.1162%" y="757" width="0.1057%" height="15" fill="rgb(223,180,33)" fg:x="1138" fg:w="2"/><text x="60.3662%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_map (2 samples, 0.11%)</title><rect x="60.1162%" y="741" width="0.1057%" height="15" fill="rgb(254,159,46)" fg:x="1138" fg:w="2"/><text x="60.3662%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::TaggedContentVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_map (2 samples, 0.11%)</title><rect x="60.1162%" y="725" width="0.1057%" height="15" fill="rgb(254,38,10)" fg:x="1138" fg:w="2"/><text x="60.3662%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapAccess&lt;E&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.05%)</title><rect x="60.1690%" y="709" width="0.0528%" height="15" fill="rgb(208,217,32)" fg:x="1139" fg:w="1"/><text x="60.4190%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.05%)</title><rect x="60.2219%" y="757" width="0.0528%" height="15" fill="rgb(221,120,13)" fg:x="1140" fg:w="1"/><text x="60.4719%" y="767.50"></text></g><g><title>maelstrom-txn`serde::de::value::MapDeserializer&lt;I,E&gt;::new (1 samples, 0.05%)</title><rect x="60.2219%" y="741" width="0.0528%" height="15" fill="rgb(246,54,52)" fg:x="1140" fg:w="1"/><text x="60.4719%" y="751.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageExtra&gt;::deserialize (4 samples, 0.21%)</title><rect x="60.1162%" y="773" width="0.2113%" height="15" fill="rgb(242,34,25)" fg:x="1138" fg:w="4"/><text x="60.3662%" y="783.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::ErrorExtra&gt;::deserialize (1 samples, 0.05%)</title><rect x="60.2747%" y="757" width="0.0528%" height="15" fill="rgb(247,209,9)" fg:x="1141" fg:w="1"/><text x="60.5247%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.05%)</title><rect x="60.2747%" y="741" width="0.0528%" height="15" fill="rgb(228,71,26)" fg:x="1141" fg:w="1"/><text x="60.5247%" y="751.50"></text></g><g><title>maelstrom-txn`serde::__private::de::content::visit_content_map (1 samples, 0.05%)</title><rect x="60.2747%" y="725" width="0.0528%" height="15" fill="rgb(222,145,49)" fg:x="1141" fg:w="1"/><text x="60.5247%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::ErrorExtra&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.05%)</title><rect x="60.2747%" y="709" width="0.0528%" height="15" fill="rgb(218,121,17)" fg:x="1141" fg:w="1"/><text x="60.5247%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::MapAccess&gt;::next_key (1 samples, 0.05%)</title><rect x="60.2747%" y="693" width="0.0528%" height="15" fill="rgb(244,50,7)" fg:x="1141" fg:w="1"/><text x="60.5247%" y="703.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_key (1 samples, 0.05%)</title><rect x="60.2747%" y="677" width="0.0528%" height="15" fill="rgb(246,229,37)" fg:x="1141" fg:w="1"/><text x="60.5247%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.05%)</title><rect x="60.2747%" y="661" width="0.0528%" height="15" fill="rgb(225,18,5)" fg:x="1141" fg:w="1"/><text x="60.5247%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.05%)</title><rect x="60.2747%" y="645" width="0.0528%" height="15" fill="rgb(213,204,8)" fg:x="1141" fg:w="1"/><text x="60.5247%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.05%)</title><rect x="60.2747%" y="629" width="0.0528%" height="15" fill="rgb(238,103,6)" fg:x="1141" fg:w="1"/><text x="60.5247%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.05%)</title><rect x="60.3275%" y="741" width="0.0528%" height="15" fill="rgb(222,25,35)" fg:x="1142" fg:w="1"/><text x="60.5775%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.05%)</title><rect x="60.3275%" y="725" width="0.0528%" height="15" fill="rgb(213,203,35)" fg:x="1142" fg:w="1"/><text x="60.5775%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.05%)</title><rect x="60.3275%" y="709" width="0.0528%" height="15" fill="rgb(221,79,53)" fg:x="1142" fg:w="1"/><text x="60.5775%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.05%)</title><rect x="60.3275%" y="693" width="0.0528%" height="15" fill="rgb(243,200,35)" fg:x="1142" fg:w="1"/><text x="60.5775%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.05%)</title><rect x="60.3275%" y="677" width="0.0528%" height="15" fill="rgb(248,60,25)" fg:x="1142" fg:w="1"/><text x="60.5775%" y="687.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::parse_str_bytes (1 samples, 0.05%)</title><rect x="60.3275%" y="661" width="0.0528%" height="15" fill="rgb(227,53,46)" fg:x="1142" fg:w="1"/><text x="60.5775%" y="671.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::skip_to_escape (1 samples, 0.05%)</title><rect x="60.3275%" y="645" width="0.0528%" height="15" fill="rgb(216,120,32)" fg:x="1142" fg:w="1"/><text x="60.5775%" y="655.50"></text></g><g><title>maelstrom-txn`core::slice::_&lt;impl [T]&gt;::chunks_exact (1 samples, 0.05%)</title><rect x="60.3275%" y="629" width="0.0528%" height="15" fill="rgb(220,134,1)" fg:x="1142" fg:w="1"/><text x="60.5775%" y="639.50"></text></g><g><title>maelstrom-txn`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.05%)</title><rect x="60.3275%" y="613" width="0.0528%" height="15" fill="rgb(237,168,5)" fg:x="1142" fg:w="1"/><text x="60.5775%" y="623.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.05%)</title><rect x="60.3275%" y="597" width="0.0528%" height="15" fill="rgb(231,100,33)" fg:x="1142" fg:w="1"/><text x="60.5775%" y="607.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_key (2 samples, 0.11%)</title><rect x="60.3275%" y="773" width="0.1057%" height="15" fill="rgb(236,177,47)" fg:x="1142" fg:w="2"/><text x="60.5775%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.11%)</title><rect x="60.3275%" y="757" width="0.1057%" height="15" fill="rgb(235,7,49)" fg:x="1142" fg:w="2"/><text x="60.5775%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (1 samples, 0.05%)</title><rect x="60.3803%" y="741" width="0.0528%" height="15" fill="rgb(232,119,22)" fg:x="1143" fg:w="1"/><text x="60.6303%" y="751.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.05%)</title><rect x="60.4860%" y="597" width="0.0528%" height="15" fill="rgb(254,73,53)" fg:x="1145" fg:w="1"/><text x="60.7360%" y="607.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.11%)</title><rect x="60.4860%" y="645" width="0.1057%" height="15" fill="rgb(251,35,20)" fg:x="1145" fg:w="2"/><text x="60.7360%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.11%)</title><rect x="60.4860%" y="629" width="0.1057%" height="15" fill="rgb(241,119,20)" fg:x="1145" fg:w="2"/><text x="60.7360%" y="639.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.11%)</title><rect x="60.4860%" y="613" width="0.1057%" height="15" fill="rgb(207,102,14)" fg:x="1145" fg:w="2"/><text x="60.7360%" y="623.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.05%)</title><rect x="60.5388%" y="597" width="0.0528%" height="15" fill="rgb(248,201,50)" fg:x="1146" fg:w="1"/><text x="60.7888%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="60.6445%" y="629" width="0.0528%" height="15" fill="rgb(222,185,44)" fg:x="1148" fg:w="1"/><text x="60.8945%" y="639.50"></text></g><g><title>maelstrom-txn`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.05%)</title><rect x="60.6445%" y="613" width="0.0528%" height="15" fill="rgb(218,107,18)" fg:x="1148" fg:w="1"/><text x="60.8945%" y="623.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::skip_to_escape (4 samples, 0.21%)</title><rect x="60.5917%" y="645" width="0.2113%" height="15" fill="rgb(237,177,39)" fg:x="1147" fg:w="4"/><text x="60.8417%" y="655.50"></text></g><g><title>maelstrom-txn`core::slice::_&lt;impl [T]&gt;::chunks_exact (2 samples, 0.11%)</title><rect x="60.6973%" y="629" width="0.1057%" height="15" fill="rgb(246,69,6)" fg:x="1149" fg:w="2"/><text x="60.9473%" y="639.50"></text></g><g><title>maelstrom-txn`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (2 samples, 0.11%)</title><rect x="60.6973%" y="613" width="0.1057%" height="15" fill="rgb(234,208,37)" fg:x="1149" fg:w="2"/><text x="60.9473%" y="623.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (2 samples, 0.11%)</title><rect x="60.6973%" y="597" width="0.1057%" height="15" fill="rgb(225,4,6)" fg:x="1149" fg:w="2"/><text x="60.9473%" y="607.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize (14 samples, 0.74%)</title><rect x="60.1162%" y="821" width="0.7396%" height="15" fill="rgb(233,45,0)" fg:x="1138" fg:w="14"/><text x="60.3662%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (14 samples, 0.74%)</title><rect x="60.1162%" y="805" width="0.7396%" height="15" fill="rgb(226,136,5)" fg:x="1138" fg:w="14"/><text x="60.3662%" y="815.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (14 samples, 0.74%)</title><rect x="60.1162%" y="789" width="0.7396%" height="15" fill="rgb(211,91,47)" fg:x="1138" fg:w="14"/><text x="60.3662%" y="799.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (8 samples, 0.42%)</title><rect x="60.4332%" y="773" width="0.4226%" height="15" fill="rgb(242,88,51)" fg:x="1144" fg:w="8"/><text x="60.6832%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (8 samples, 0.42%)</title><rect x="60.4332%" y="757" width="0.4226%" height="15" fill="rgb(230,91,28)" fg:x="1144" fg:w="8"/><text x="60.6832%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8 samples, 0.42%)</title><rect x="60.4332%" y="741" width="0.4226%" height="15" fill="rgb(254,186,29)" fg:x="1144" fg:w="8"/><text x="60.6832%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (8 samples, 0.42%)</title><rect x="60.4332%" y="725" width="0.4226%" height="15" fill="rgb(238,6,4)" fg:x="1144" fg:w="8"/><text x="60.6832%" y="735.50"></text></g><g><title>maelstrom-txn`serde::de::Deserializer::__deserialize_content (8 samples, 0.42%)</title><rect x="60.4332%" y="709" width="0.4226%" height="15" fill="rgb(221,151,16)" fg:x="1144" fg:w="8"/><text x="60.6832%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.42%)</title><rect x="60.4332%" y="693" width="0.4226%" height="15" fill="rgb(251,143,52)" fg:x="1144" fg:w="8"/><text x="60.6832%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (8 samples, 0.42%)</title><rect x="60.4332%" y="677" width="0.4226%" height="15" fill="rgb(206,90,15)" fg:x="1144" fg:w="8"/><text x="60.6832%" y="687.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::parse_str_bytes (8 samples, 0.42%)</title><rect x="60.4332%" y="661" width="0.4226%" height="15" fill="rgb(218,35,8)" fg:x="1144" fg:w="8"/><text x="60.6832%" y="671.50"></text></g><g><title>maelstrom-txn`serde_json::read::parse_escape (1 samples, 0.05%)</title><rect x="60.8030%" y="645" width="0.0528%" height="15" fill="rgb(239,215,6)" fg:x="1151" fg:w="1"/><text x="61.0530%" y="655.50"></text></g><g><title>maelstrom-txn`serde_json::read::next_or_eof (1 samples, 0.05%)</title><rect x="60.8030%" y="629" width="0.0528%" height="15" fill="rgb(245,116,39)" fg:x="1151" fg:w="1"/><text x="61.0530%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::next (1 samples, 0.05%)</title><rect x="60.8030%" y="613" width="0.0528%" height="15" fill="rgb(242,65,28)" fg:x="1151" fg:w="1"/><text x="61.0530%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="60.8558%" y="677" width="0.0528%" height="15" fill="rgb(252,132,53)" fg:x="1152" fg:w="1"/><text x="61.1058%" y="687.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="60.8558%" y="661" width="0.0528%" height="15" fill="rgb(224,159,50)" fg:x="1152" fg:w="1"/><text x="61.1058%" y="671.50"></text></g><g><title>maelstrom-txn`serde_json::de::from_str (22 samples, 1.16%)</title><rect x="59.7993%" y="949" width="1.1622%" height="15" fill="rgb(224,93,4)" fg:x="1132" fg:w="22"/><text x="60.0493%" y="959.50"></text></g><g><title>maelstrom-txn`serde_json::de::from_trait (21 samples, 1.11%)</title><rect x="59.8521%" y="933" width="1.1094%" height="15" fill="rgb(208,81,34)" fg:x="1133" fg:w="21"/><text x="60.1021%" y="943.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize (21 samples, 1.11%)</title><rect x="59.8521%" y="917" width="1.1094%" height="15" fill="rgb(233,92,54)" fg:x="1133" fg:w="21"/><text x="60.1021%" y="927.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (21 samples, 1.11%)</title><rect x="59.8521%" y="901" width="1.1094%" height="15" fill="rgb(237,21,14)" fg:x="1133" fg:w="21"/><text x="60.1021%" y="911.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (21 samples, 1.11%)</title><rect x="59.8521%" y="885" width="1.1094%" height="15" fill="rgb(249,128,51)" fg:x="1133" fg:w="21"/><text x="60.1021%" y="895.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (16 samples, 0.85%)</title><rect x="60.1162%" y="869" width="0.8452%" height="15" fill="rgb(223,129,24)" fg:x="1138" fg:w="16"/><text x="60.3662%" y="879.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (16 samples, 0.85%)</title><rect x="60.1162%" y="853" width="0.8452%" height="15" fill="rgb(231,168,25)" fg:x="1138" fg:w="16"/><text x="60.3662%" y="863.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (16 samples, 0.85%)</title><rect x="60.1162%" y="837" width="0.8452%" height="15" fill="rgb(224,39,20)" fg:x="1138" fg:w="16"/><text x="60.3662%" y="847.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2 samples, 0.11%)</title><rect x="60.8558%" y="821" width="0.1057%" height="15" fill="rgb(225,152,53)" fg:x="1152" fg:w="2"/><text x="61.1058%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (2 samples, 0.11%)</title><rect x="60.8558%" y="805" width="0.1057%" height="15" fill="rgb(252,17,24)" fg:x="1152" fg:w="2"/><text x="61.1058%" y="815.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (2 samples, 0.11%)</title><rect x="60.8558%" y="789" width="0.1057%" height="15" fill="rgb(250,114,30)" fg:x="1152" fg:w="2"/><text x="61.1058%" y="799.50"></text></g><g><title>maelstrom-txn`serde::de::Visitor::visit_borrowed_str (2 samples, 0.11%)</title><rect x="60.8558%" y="773" width="0.1057%" height="15" fill="rgb(229,5,4)" fg:x="1152" fg:w="2"/><text x="61.1058%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (2 samples, 0.11%)</title><rect x="60.8558%" y="757" width="0.1057%" height="15" fill="rgb(225,176,49)" fg:x="1152" fg:w="2"/><text x="61.1058%" y="767.50"></text></g><g><title>maelstrom-txn`alloc::str::_&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.11%)</title><rect x="60.8558%" y="741" width="0.1057%" height="15" fill="rgb(224,221,49)" fg:x="1152" fg:w="2"/><text x="61.1058%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.11%)</title><rect x="60.8558%" y="725" width="0.1057%" height="15" fill="rgb(253,169,27)" fg:x="1152" fg:w="2"/><text x="61.1058%" y="735.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2 samples, 0.11%)</title><rect x="60.8558%" y="709" width="0.1057%" height="15" fill="rgb(211,206,16)" fg:x="1152" fg:w="2"/><text x="61.1058%" y="719.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2 samples, 0.11%)</title><rect x="60.8558%" y="693" width="0.1057%" height="15" fill="rgb(244,87,35)" fg:x="1152" fg:w="2"/><text x="61.1058%" y="703.50"></text></g><g><title>maelstrom-txn`core::alloc::layout::Layout::repeat (1 samples, 0.05%)</title><rect x="60.9086%" y="677" width="0.0528%" height="15" fill="rgb(246,28,10)" fg:x="1153" fg:w="1"/><text x="61.1586%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="60.9614%" y="757" width="0.0528%" height="15" fill="rgb(229,12,44)" fg:x="1154" fg:w="1"/><text x="61.2114%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.11%)</title><rect x="60.9614%" y="789" width="0.1057%" height="15" fill="rgb(210,145,37)" fg:x="1154" fg:w="2"/><text x="61.2114%" y="799.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.11%)</title><rect x="60.9614%" y="773" width="0.1057%" height="15" fill="rgb(227,112,52)" fg:x="1154" fg:w="2"/><text x="61.2114%" y="783.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.05%)</title><rect x="61.0143%" y="757" width="0.0528%" height="15" fill="rgb(238,155,34)" fg:x="1155" fg:w="1"/><text x="61.2643%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_struct (3 samples, 0.16%)</title><rect x="60.9614%" y="885" width="0.1585%" height="15" fill="rgb(239,226,36)" fg:x="1154" fg:w="3"/><text x="61.2114%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_map (3 samples, 0.16%)</title><rect x="60.9614%" y="869" width="0.1585%" height="15" fill="rgb(230,16,23)" fg:x="1154" fg:w="3"/><text x="61.2114%" y="879.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_object (3 samples, 0.16%)</title><rect x="60.9614%" y="853" width="0.1585%" height="15" fill="rgb(236,171,36)" fg:x="1154" fg:w="3"/><text x="61.2114%" y="863.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (3 samples, 0.16%)</title><rect x="60.9614%" y="837" width="0.1585%" height="15" fill="rgb(221,22,14)" fg:x="1154" fg:w="3"/><text x="61.2114%" y="847.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (3 samples, 0.16%)</title><rect x="60.9614%" y="821" width="0.1585%" height="15" fill="rgb(242,43,11)" fg:x="1154" fg:w="3"/><text x="61.2114%" y="831.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.16%)</title><rect x="60.9614%" y="805" width="0.1585%" height="15" fill="rgb(232,69,23)" fg:x="1154" fg:w="3"/><text x="61.2114%" y="815.50"></text></g><g><title>maelstrom-txn`core::ptr::const_ptr::_&lt;impl *const T&gt;::sub_ptr::precondition_check (1 samples, 0.05%)</title><rect x="61.0671%" y="789" width="0.0528%" height="15" fill="rgb(216,180,54)" fg:x="1156" fg:w="1"/><text x="61.3171%" y="799.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::end_string (1 samples, 0.05%)</title><rect x="61.1199%" y="773" width="0.0528%" height="15" fill="rgb(216,5,24)" fg:x="1157" fg:w="1"/><text x="61.3699%" y="783.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="61.1199%" y="757" width="0.0528%" height="15" fill="rgb(225,89,9)" fg:x="1157" fg:w="1"/><text x="61.3699%" y="767.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="61.1199%" y="741" width="0.0528%" height="15" fill="rgb(243,75,33)" fg:x="1157" fg:w="1"/><text x="61.3699%" y="751.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="61.1199%" y="725" width="0.0528%" height="15" fill="rgb(247,141,45)" fg:x="1157" fg:w="1"/><text x="61.3699%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="61.1199%" y="709" width="0.0528%" height="15" fill="rgb(232,177,36)" fg:x="1157" fg:w="1"/><text x="61.3699%" y="719.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="61.1199%" y="693" width="0.0528%" height="15" fill="rgb(219,125,36)" fg:x="1157" fg:w="1"/><text x="61.3699%" y="703.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.05%)</title><rect x="61.1199%" y="677" width="0.0528%" height="15" fill="rgb(227,94,9)" fg:x="1157" fg:w="1"/><text x="61.3699%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="61.1727%" y="757" width="0.0528%" height="15" fill="rgb(240,34,52)" fg:x="1158" fg:w="1"/><text x="61.4227%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="61.1727%" y="741" width="0.0528%" height="15" fill="rgb(216,45,12)" fg:x="1158" fg:w="1"/><text x="61.4227%" y="751.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::enumerate (1 samples, 0.05%)</title><rect x="61.2256%" y="757" width="0.0528%" height="15" fill="rgb(246,21,19)" fg:x="1159" fg:w="1"/><text x="61.4756%" y="767.50"></text></g><g><title>maelstrom-txn`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.05%)</title><rect x="61.2784%" y="757" width="0.0528%" height="15" fill="rgb(213,98,42)" fg:x="1160" fg:w="1"/><text x="61.5284%" y="767.50"></text></g><g><title>maelstrom-txn`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.05%)</title><rect x="61.2784%" y="741" width="0.0528%" height="15" fill="rgb(250,136,47)" fg:x="1160" fg:w="1"/><text x="61.5284%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (5 samples, 0.26%)</title><rect x="61.1199%" y="853" width="0.2641%" height="15" fill="rgb(251,124,27)" fg:x="1157" fg:w="5"/><text x="61.3699%" y="863.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (5 samples, 0.26%)</title><rect x="61.1199%" y="837" width="0.2641%" height="15" fill="rgb(229,180,14)" fg:x="1157" fg:w="5"/><text x="61.3699%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (5 samples, 0.26%)</title><rect x="61.1199%" y="821" width="0.2641%" height="15" fill="rgb(245,216,25)" fg:x="1157" fg:w="5"/><text x="61.3699%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (5 samples, 0.26%)</title><rect x="61.1199%" y="805" width="0.2641%" height="15" fill="rgb(251,43,5)" fg:x="1157" fg:w="5"/><text x="61.3699%" y="815.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (5 samples, 0.26%)</title><rect x="61.1199%" y="789" width="0.2641%" height="15" fill="rgb(250,128,24)" fg:x="1157" fg:w="5"/><text x="61.3699%" y="799.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (4 samples, 0.21%)</title><rect x="61.1727%" y="773" width="0.2113%" height="15" fill="rgb(217,117,27)" fg:x="1158" fg:w="4"/><text x="61.4227%" y="783.50"></text></g><g><title>maelstrom-txn`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.05%)</title><rect x="61.3312%" y="757" width="0.0528%" height="15" fill="rgb(245,147,4)" fg:x="1161" fg:w="1"/><text x="61.5812%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.11%)</title><rect x="61.3840%" y="805" width="0.1057%" height="15" fill="rgb(242,201,35)" fg:x="1162" fg:w="2"/><text x="61.6340%" y="815.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (2 samples, 0.11%)</title><rect x="61.3840%" y="789" width="0.1057%" height="15" fill="rgb(218,181,1)" fg:x="1162" fg:w="2"/><text x="61.6340%" y="799.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.11%)</title><rect x="61.3840%" y="773" width="0.1057%" height="15" fill="rgb(222,6,29)" fg:x="1162" fg:w="2"/><text x="61.6340%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.11%)</title><rect x="61.3840%" y="757" width="0.1057%" height="15" fill="rgb(208,186,3)" fg:x="1162" fg:w="2"/><text x="61.6340%" y="767.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (2 samples, 0.11%)</title><rect x="61.3840%" y="741" width="0.1057%" height="15" fill="rgb(216,36,26)" fg:x="1162" fg:w="2"/><text x="61.6340%" y="751.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (2 samples, 0.11%)</title><rect x="61.3840%" y="725" width="0.1057%" height="15" fill="rgb(248,201,23)" fg:x="1162" fg:w="2"/><text x="61.6340%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.11%)</title><rect x="61.3840%" y="709" width="0.1057%" height="15" fill="rgb(251,170,31)" fg:x="1162" fg:w="2"/><text x="61.6340%" y="719.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (3 samples, 0.16%)</title><rect x="61.3840%" y="821" width="0.1585%" height="15" fill="rgb(207,110,25)" fg:x="1162" fg:w="3"/><text x="61.6340%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.05%)</title><rect x="61.4897%" y="805" width="0.0528%" height="15" fill="rgb(250,54,15)" fg:x="1164" fg:w="1"/><text x="61.7397%" y="815.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_string (1 samples, 0.05%)</title><rect x="61.5425%" y="645" width="0.0528%" height="15" fill="rgb(227,68,33)" fg:x="1165" fg:w="1"/><text x="61.7925%" y="655.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="61.5425%" y="629" width="0.0528%" height="15" fill="rgb(238,34,41)" fg:x="1165" fg:w="1"/><text x="61.7925%" y="639.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (4 samples, 0.21%)</title><rect x="61.5425%" y="709" width="0.2113%" height="15" fill="rgb(220,11,15)" fg:x="1165" fg:w="4"/><text x="61.7925%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (4 samples, 0.21%)</title><rect x="61.5425%" y="693" width="0.2113%" height="15" fill="rgb(246,111,35)" fg:x="1165" fg:w="4"/><text x="61.7925%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (4 samples, 0.21%)</title><rect x="61.5425%" y="677" width="0.2113%" height="15" fill="rgb(209,88,53)" fg:x="1165" fg:w="4"/><text x="61.7925%" y="687.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (4 samples, 0.21%)</title><rect x="61.5425%" y="661" width="0.2113%" height="15" fill="rgb(231,185,47)" fg:x="1165" fg:w="4"/><text x="61.7925%" y="671.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (3 samples, 0.16%)</title><rect x="61.5954%" y="645" width="0.1585%" height="15" fill="rgb(233,154,1)" fg:x="1166" fg:w="3"/><text x="61.8454%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.11%)</title><rect x="61.6482%" y="629" width="0.1057%" height="15" fill="rgb(225,15,46)" fg:x="1167" fg:w="2"/><text x="61.8982%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="61.7010%" y="613" width="0.0528%" height="15" fill="rgb(211,135,41)" fg:x="1168" fg:w="1"/><text x="61.9510%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (5 samples, 0.26%)</title><rect x="61.5425%" y="725" width="0.2641%" height="15" fill="rgb(208,54,0)" fg:x="1165" fg:w="5"/><text x="61.7925%" y="735.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_object_key (1 samples, 0.05%)</title><rect x="61.7538%" y="709" width="0.0528%" height="15" fill="rgb(244,136,14)" fg:x="1169" fg:w="1"/><text x="62.0038%" y="719.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="61.7538%" y="693" width="0.0528%" height="15" fill="rgb(241,56,14)" fg:x="1169" fg:w="1"/><text x="62.0038%" y="703.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="61.7538%" y="677" width="0.0528%" height="15" fill="rgb(205,80,24)" fg:x="1169" fg:w="1"/><text x="62.0038%" y="687.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="61.7538%" y="661" width="0.0528%" height="15" fill="rgb(220,57,4)" fg:x="1169" fg:w="1"/><text x="62.0038%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="61.7538%" y="645" width="0.0528%" height="15" fill="rgb(226,193,50)" fg:x="1169" fg:w="1"/><text x="62.0038%" y="655.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="61.7538%" y="629" width="0.0528%" height="15" fill="rgb(231,168,22)" fg:x="1169" fg:w="1"/><text x="62.0038%" y="639.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.05%)</title><rect x="61.7538%" y="613" width="0.0528%" height="15" fill="rgb(254,215,14)" fg:x="1169" fg:w="1"/><text x="62.0038%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::map::Iter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="61.8067%" y="709" width="0.0528%" height="15" fill="rgb(211,115,16)" fg:x="1170" fg:w="1"/><text x="62.0567%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.05%)</title><rect x="62.0180%" y="693" width="0.0528%" height="15" fill="rgb(236,210,16)" fg:x="1174" fg:w="1"/><text x="62.2680%" y="703.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (1 samples, 0.05%)</title><rect x="62.0180%" y="677" width="0.0528%" height="15" fill="rgb(221,94,12)" fg:x="1174" fg:w="1"/><text x="62.2680%" y="687.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_string (1 samples, 0.05%)</title><rect x="62.0180%" y="661" width="0.0528%" height="15" fill="rgb(235,218,49)" fg:x="1174" fg:w="1"/><text x="62.2680%" y="671.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="62.0180%" y="645" width="0.0528%" height="15" fill="rgb(217,114,14)" fg:x="1174" fg:w="1"/><text x="62.2680%" y="655.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="62.0180%" y="629" width="0.0528%" height="15" fill="rgb(216,145,22)" fg:x="1174" fg:w="1"/><text x="62.2680%" y="639.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="62.0180%" y="613" width="0.0528%" height="15" fill="rgb(217,112,39)" fg:x="1174" fg:w="1"/><text x="62.2680%" y="623.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (2 samples, 0.11%)</title><rect x="62.1236%" y="629" width="0.1057%" height="15" fill="rgb(225,85,32)" fg:x="1176" fg:w="2"/><text x="62.3736%" y="639.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (1 samples, 0.05%)</title><rect x="62.1764%" y="613" width="0.0528%" height="15" fill="rgb(245,209,47)" fg:x="1177" fg:w="1"/><text x="62.4264%" y="623.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (1 samples, 0.05%)</title><rect x="62.2293%" y="629" width="0.0528%" height="15" fill="rgb(218,220,15)" fg:x="1178" fg:w="1"/><text x="62.4793%" y="639.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::mem::replace (5 samples, 0.26%)</title><rect x="62.0708%" y="661" width="0.2641%" height="15" fill="rgb(222,202,31)" fg:x="1175" fg:w="5"/><text x="62.3208%" y="671.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (4 samples, 0.21%)</title><rect x="62.1236%" y="645" width="0.2113%" height="15" fill="rgb(243,203,4)" fg:x="1176" fg:w="4"/><text x="62.3736%" y="655.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (1 samples, 0.05%)</title><rect x="62.2821%" y="629" width="0.0528%" height="15" fill="rgb(237,92,17)" fg:x="1179" fg:w="1"/><text x="62.5321%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::map::Iter as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.37%)</title><rect x="62.0708%" y="693" width="0.3698%" height="15" fill="rgb(231,119,7)" fg:x="1175" fg:w="7"/><text x="62.3208%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.37%)</title><rect x="62.0708%" y="677" width="0.3698%" height="15" fill="rgb(237,82,41)" fg:x="1175" fg:w="7"/><text x="62.3208%" y="687.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::init_front (2 samples, 0.11%)</title><rect x="62.3349%" y="661" width="0.1057%" height="15" fill="rgb(226,81,48)" fg:x="1180" fg:w="2"/><text x="62.5849%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.05%)</title><rect x="62.6519%" y="661" width="0.0528%" height="15" fill="rgb(234,70,51)" fg:x="1186" fg:w="1"/><text x="62.9019%" y="671.50"></text></g><g><title>maelstrom-txn`core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.05%)</title><rect x="62.7047%" y="661" width="0.0528%" height="15" fill="rgb(251,86,4)" fg:x="1187" fg:w="1"/><text x="62.9547%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (6 samples, 0.32%)</title><rect x="62.7575%" y="645" width="0.3170%" height="15" fill="rgb(244,144,28)" fg:x="1188" fg:w="6"/><text x="63.0075%" y="655.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (5 samples, 0.26%)</title><rect x="62.8104%" y="629" width="0.2641%" height="15" fill="rgb(232,161,39)" fg:x="1189" fg:w="5"/><text x="63.0604%" y="639.50"></text></g><g><title>maelstrom-txn`core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.05%)</title><rect x="63.0745%" y="613" width="0.0528%" height="15" fill="rgb(247,34,51)" fg:x="1194" fg:w="1"/><text x="63.3245%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="63.2330%" y="501" width="0.0528%" height="15" fill="rgb(225,132,2)" fg:x="1197" fg:w="1"/><text x="63.4830%" y="511.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.16%)</title><rect x="63.2330%" y="517" width="0.1585%" height="15" fill="rgb(209,159,44)" fg:x="1197" fg:w="3"/><text x="63.4830%" y="527.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (2 samples, 0.11%)</title><rect x="63.2858%" y="501" width="0.1057%" height="15" fill="rgb(251,214,1)" fg:x="1198" fg:w="2"/><text x="63.5358%" y="511.50"></text></g><g><title>maelstrom-txn`core::ub_checks::is_nonoverlapping::runtime (2 samples, 0.11%)</title><rect x="63.2858%" y="485" width="0.1057%" height="15" fill="rgb(247,84,47)" fg:x="1198" fg:w="2"/><text x="63.5358%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.32%)</title><rect x="63.1801%" y="533" width="0.3170%" height="15" fill="rgb(240,111,43)" fg:x="1196" fg:w="6"/><text x="63.4301%" y="543.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (2 samples, 0.11%)</title><rect x="63.3914%" y="517" width="0.1057%" height="15" fill="rgb(215,214,35)" fg:x="1200" fg:w="2"/><text x="63.6414%" y="527.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_string (8 samples, 0.42%)</title><rect x="63.1801%" y="597" width="0.4226%" height="15" fill="rgb(248,207,23)" fg:x="1196" fg:w="8"/><text x="63.4301%" y="607.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (8 samples, 0.42%)</title><rect x="63.1801%" y="581" width="0.4226%" height="15" fill="rgb(214,186,4)" fg:x="1196" fg:w="8"/><text x="63.4301%" y="591.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (8 samples, 0.42%)</title><rect x="63.1801%" y="565" width="0.4226%" height="15" fill="rgb(220,133,22)" fg:x="1196" fg:w="8"/><text x="63.4301%" y="575.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.42%)</title><rect x="63.1801%" y="549" width="0.4226%" height="15" fill="rgb(239,134,19)" fg:x="1196" fg:w="8"/><text x="63.4301%" y="559.50"></text></g><g><title>maelstrom-txn`core::ptr::const_ptr::_&lt;impl *const T&gt;::sub_ptr::precondition_check (2 samples, 0.11%)</title><rect x="63.4971%" y="533" width="0.1057%" height="15" fill="rgb(250,140,9)" fg:x="1202" fg:w="2"/><text x="63.7471%" y="543.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.11%)</title><rect x="63.6027%" y="517" width="0.1057%" height="15" fill="rgb(225,59,14)" fg:x="1204" fg:w="2"/><text x="63.8527%" y="527.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (2 samples, 0.11%)</title><rect x="63.6027%" y="501" width="0.1057%" height="15" fill="rgb(214,152,51)" fg:x="1204" fg:w="2"/><text x="63.8527%" y="511.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::end_string (6 samples, 0.32%)</title><rect x="63.6027%" y="597" width="0.3170%" height="15" fill="rgb(251,227,43)" fg:x="1204" fg:w="6"/><text x="63.8527%" y="607.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (6 samples, 0.32%)</title><rect x="63.6027%" y="581" width="0.3170%" height="15" fill="rgb(241,96,17)" fg:x="1204" fg:w="6"/><text x="63.8527%" y="591.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (6 samples, 0.32%)</title><rect x="63.6027%" y="565" width="0.3170%" height="15" fill="rgb(234,198,43)" fg:x="1204" fg:w="6"/><text x="63.8527%" y="575.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.32%)</title><rect x="63.6027%" y="549" width="0.3170%" height="15" fill="rgb(220,108,29)" fg:x="1204" fg:w="6"/><text x="63.8527%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.32%)</title><rect x="63.6027%" y="533" width="0.3170%" height="15" fill="rgb(226,163,33)" fg:x="1204" fg:w="6"/><text x="63.8527%" y="543.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (4 samples, 0.21%)</title><rect x="63.7084%" y="517" width="0.2113%" height="15" fill="rgb(205,194,45)" fg:x="1206" fg:w="4"/><text x="63.9584%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.11%)</title><rect x="64.2367%" y="581" width="0.1057%" height="15" fill="rgb(206,143,44)" fg:x="1216" fg:w="2"/><text x="64.4867%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.11%)</title><rect x="64.2367%" y="565" width="0.1057%" height="15" fill="rgb(236,136,36)" fg:x="1216" fg:w="2"/><text x="64.4867%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.11%)</title><rect x="64.4480%" y="485" width="0.1057%" height="15" fill="rgb(249,172,42)" fg:x="1220" fg:w="2"/><text x="64.6980%" y="495.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.05%)</title><rect x="64.5536%" y="485" width="0.0528%" height="15" fill="rgb(216,139,23)" fg:x="1222" fg:w="1"/><text x="64.8036%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.11%)</title><rect x="64.6064%" y="421" width="0.1057%" height="15" fill="rgb(207,166,20)" fg:x="1223" fg:w="2"/><text x="64.8564%" y="431.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::grow_impl (2 samples, 0.11%)</title><rect x="64.6064%" y="405" width="0.1057%" height="15" fill="rgb(210,209,22)" fg:x="1223" fg:w="2"/><text x="64.8564%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.05%)</title><rect x="64.6593%" y="389" width="0.0528%" height="15" fill="rgb(232,118,20)" fg:x="1224" fg:w="1"/><text x="64.9093%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.05%)</title><rect x="64.6593%" y="373" width="0.0528%" height="15" fill="rgb(238,113,42)" fg:x="1224" fg:w="1"/><text x="64.9093%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.05%)</title><rect x="64.6593%" y="357" width="0.0528%" height="15" fill="rgb(231,42,5)" fg:x="1224" fg:w="1"/><text x="64.9093%" y="367.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (38 samples, 2.01%)</title><rect x="62.7575%" y="661" width="2.0074%" height="15" fill="rgb(243,166,24)" fg:x="1188" fg:w="38"/><text x="63.0075%" y="671.50">m..</text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (32 samples, 1.69%)</title><rect x="63.0745%" y="645" width="1.6904%" height="15" fill="rgb(237,226,12)" fg:x="1194" fg:w="32"/><text x="63.3245%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (32 samples, 1.69%)</title><rect x="63.0745%" y="629" width="1.6904%" height="15" fill="rgb(229,133,24)" fg:x="1194" fg:w="32"/><text x="63.3245%" y="639.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (31 samples, 1.64%)</title><rect x="63.1273%" y="613" width="1.6376%" height="15" fill="rgb(238,33,43)" fg:x="1195" fg:w="31"/><text x="63.3773%" y="623.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (16 samples, 0.85%)</title><rect x="63.9197%" y="597" width="0.8452%" height="15" fill="rgb(227,59,38)" fg:x="1210" fg:w="16"/><text x="64.1697%" y="607.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_string_fragment (8 samples, 0.42%)</title><rect x="64.3423%" y="581" width="0.4226%" height="15" fill="rgb(230,97,0)" fg:x="1218" fg:w="8"/><text x="64.5923%" y="591.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (7 samples, 0.37%)</title><rect x="64.3951%" y="565" width="0.3698%" height="15" fill="rgb(250,173,50)" fg:x="1219" fg:w="7"/><text x="64.6451%" y="575.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (7 samples, 0.37%)</title><rect x="64.3951%" y="549" width="0.3698%" height="15" fill="rgb(240,15,50)" fg:x="1219" fg:w="7"/><text x="64.6451%" y="559.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.37%)</title><rect x="64.3951%" y="533" width="0.3698%" height="15" fill="rgb(221,93,22)" fg:x="1219" fg:w="7"/><text x="64.6451%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.37%)</title><rect x="64.3951%" y="517" width="0.3698%" height="15" fill="rgb(245,180,53)" fg:x="1219" fg:w="7"/><text x="64.6451%" y="527.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.32%)</title><rect x="64.4480%" y="501" width="0.3170%" height="15" fill="rgb(231,88,51)" fg:x="1220" fg:w="6"/><text x="64.6980%" y="511.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.16%)</title><rect x="64.6064%" y="485" width="0.1585%" height="15" fill="rgb(240,58,21)" fg:x="1223" fg:w="3"/><text x="64.8564%" y="495.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (3 samples, 0.16%)</title><rect x="64.6064%" y="469" width="0.1585%" height="15" fill="rgb(237,21,10)" fg:x="1223" fg:w="3"/><text x="64.8564%" y="479.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3 samples, 0.16%)</title><rect x="64.6064%" y="453" width="0.1585%" height="15" fill="rgb(218,43,11)" fg:x="1223" fg:w="3"/><text x="64.8564%" y="463.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::finish_grow (3 samples, 0.16%)</title><rect x="64.6064%" y="437" width="0.1585%" height="15" fill="rgb(218,221,29)" fg:x="1223" fg:w="3"/><text x="64.8564%" y="447.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::grow_impl (1 samples, 0.05%)</title><rect x="64.7121%" y="421" width="0.0528%" height="15" fill="rgb(214,118,42)" fg:x="1225" fg:w="1"/><text x="64.9621%" y="431.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.26%)</title><rect x="64.8177%" y="581" width="0.2641%" height="15" fill="rgb(251,200,26)" fg:x="1227" fg:w="5"/><text x="65.0677%" y="591.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (4 samples, 0.21%)</title><rect x="64.8706%" y="565" width="0.2113%" height="15" fill="rgb(237,101,39)" fg:x="1228" fg:w="4"/><text x="65.1206%" y="575.50"></text></g><g><title>maelstrom-txn`core::ub_checks::is_nonoverlapping::runtime (1 samples, 0.05%)</title><rect x="65.0291%" y="549" width="0.0528%" height="15" fill="rgb(251,117,11)" fg:x="1231" fg:w="1"/><text x="65.2791%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.58%)</title><rect x="64.7649%" y="597" width="0.5811%" height="15" fill="rgb(216,223,23)" fg:x="1226" fg:w="11"/><text x="65.0149%" y="607.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (5 samples, 0.26%)</title><rect x="65.0819%" y="581" width="0.2641%" height="15" fill="rgb(251,54,12)" fg:x="1232" fg:w="5"/><text x="65.3319%" y="591.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_object_key (13 samples, 0.69%)</title><rect x="64.7649%" y="661" width="0.6867%" height="15" fill="rgb(254,176,54)" fg:x="1226" fg:w="13"/><text x="65.0149%" y="671.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (13 samples, 0.69%)</title><rect x="64.7649%" y="645" width="0.6867%" height="15" fill="rgb(210,32,8)" fg:x="1226" fg:w="13"/><text x="65.0149%" y="655.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (13 samples, 0.69%)</title><rect x="64.7649%" y="629" width="0.6867%" height="15" fill="rgb(235,52,38)" fg:x="1226" fg:w="13"/><text x="65.0149%" y="639.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (13 samples, 0.69%)</title><rect x="64.7649%" y="613" width="0.6867%" height="15" fill="rgb(231,4,44)" fg:x="1226" fg:w="13"/><text x="65.0149%" y="623.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (2 samples, 0.11%)</title><rect x="65.3460%" y="597" width="0.1057%" height="15" fill="rgb(249,2,32)" fg:x="1237" fg:w="2"/><text x="65.5960%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (58 samples, 3.06%)</title><rect x="62.4406%" y="677" width="3.0639%" height="15" fill="rgb(224,65,26)" fg:x="1182" fg:w="58"/><text x="62.6906%" y="687.50">mae..</text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::end_object_key (1 samples, 0.05%)</title><rect x="65.4517%" y="661" width="0.0528%" height="15" fill="rgb(250,73,40)" fg:x="1239" fg:w="1"/><text x="65.7017%" y="671.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="65.5573%" y="629" width="0.0528%" height="15" fill="rgb(253,177,16)" fg:x="1241" fg:w="1"/><text x="65.8073%" y="639.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="65.6630%" y="565" width="0.0528%" height="15" fill="rgb(217,32,34)" fg:x="1243" fg:w="1"/><text x="65.9130%" y="575.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.05%)</title><rect x="65.7158%" y="565" width="0.0528%" height="15" fill="rgb(212,7,10)" fg:x="1244" fg:w="1"/><text x="65.9658%" y="575.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.16%)</title><rect x="65.6630%" y="581" width="0.1585%" height="15" fill="rgb(245,89,8)" fg:x="1243" fg:w="3"/><text x="65.9130%" y="591.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.05%)</title><rect x="65.7686%" y="565" width="0.0528%" height="15" fill="rgb(237,16,53)" fg:x="1245" fg:w="1"/><text x="66.0186%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.37%)</title><rect x="65.6101%" y="597" width="0.3698%" height="15" fill="rgb(250,204,30)" fg:x="1242" fg:w="7"/><text x="65.8601%" y="607.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (3 samples, 0.16%)</title><rect x="65.8214%" y="581" width="0.1585%" height="15" fill="rgb(208,77,27)" fg:x="1246" fg:w="3"/><text x="66.0714%" y="591.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_object_value (9 samples, 0.48%)</title><rect x="65.5573%" y="661" width="0.4754%" height="15" fill="rgb(250,204,28)" fg:x="1241" fg:w="9"/><text x="65.8073%" y="671.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (9 samples, 0.48%)</title><rect x="65.5573%" y="645" width="0.4754%" height="15" fill="rgb(244,63,21)" fg:x="1241" fg:w="9"/><text x="65.8073%" y="655.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (8 samples, 0.42%)</title><rect x="65.6101%" y="629" width="0.4226%" height="15" fill="rgb(236,85,44)" fg:x="1242" fg:w="8"/><text x="65.8601%" y="639.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.42%)</title><rect x="65.6101%" y="613" width="0.4226%" height="15" fill="rgb(215,98,4)" fg:x="1242" fg:w="8"/><text x="65.8601%" y="623.50"></text></g><g><title>maelstrom-txn`core::ptr::const_ptr::_&lt;impl *const T&gt;::sub_ptr::precondition_check (1 samples, 0.05%)</title><rect x="65.9799%" y="597" width="0.0528%" height="15" fill="rgb(235,38,11)" fg:x="1249" fg:w="1"/><text x="66.2299%" y="607.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::end_string (1 samples, 0.05%)</title><rect x="66.0856%" y="629" width="0.0528%" height="15" fill="rgb(254,186,25)" fg:x="1251" fg:w="1"/><text x="66.3356%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.11%)</title><rect x="66.1384%" y="613" width="0.1057%" height="15" fill="rgb(225,55,31)" fg:x="1252" fg:w="2"/><text x="66.3884%" y="623.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.05%)</title><rect x="66.3497%" y="517" width="0.0528%" height="15" fill="rgb(211,15,21)" fg:x="1256" fg:w="1"/><text x="66.5997%" y="527.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.21%)</title><rect x="66.2969%" y="533" width="0.2113%" height="15" fill="rgb(215,187,41)" fg:x="1255" fg:w="4"/><text x="66.5469%" y="543.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (2 samples, 0.11%)</title><rect x="66.4025%" y="517" width="0.1057%" height="15" fill="rgb(248,69,32)" fg:x="1257" fg:w="2"/><text x="66.6525%" y="527.50"></text></g><g><title>maelstrom-txn`core::ub_checks::is_nonoverlapping::runtime (2 samples, 0.11%)</title><rect x="66.4025%" y="501" width="0.1057%" height="15" fill="rgb(252,102,52)" fg:x="1257" fg:w="2"/><text x="66.6525%" y="511.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_string (6 samples, 0.32%)</title><rect x="66.2441%" y="613" width="0.3170%" height="15" fill="rgb(253,140,32)" fg:x="1254" fg:w="6"/><text x="66.4941%" y="623.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (6 samples, 0.32%)</title><rect x="66.2441%" y="597" width="0.3170%" height="15" fill="rgb(216,56,42)" fg:x="1254" fg:w="6"/><text x="66.4941%" y="607.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (6 samples, 0.32%)</title><rect x="66.2441%" y="581" width="0.3170%" height="15" fill="rgb(216,184,14)" fg:x="1254" fg:w="6"/><text x="66.4941%" y="591.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.32%)</title><rect x="66.2441%" y="565" width="0.3170%" height="15" fill="rgb(237,187,27)" fg:x="1254" fg:w="6"/><text x="66.4941%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.32%)</title><rect x="66.2441%" y="549" width="0.3170%" height="15" fill="rgb(219,65,3)" fg:x="1254" fg:w="6"/><text x="66.4941%" y="559.50"></text></g><g><title>maelstrom-txn`core::ptr::const_ptr::_&lt;impl *const T&gt;::sub_ptr::precondition_check (1 samples, 0.05%)</title><rect x="66.5082%" y="533" width="0.0528%" height="15" fill="rgb(245,83,25)" fg:x="1259" fg:w="1"/><text x="66.7582%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="66.6667%" y="517" width="0.0528%" height="15" fill="rgb(214,205,45)" fg:x="1262" fg:w="1"/><text x="66.9167%" y="527.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.21%)</title><rect x="66.6667%" y="533" width="0.2113%" height="15" fill="rgb(241,20,18)" fg:x="1262" fg:w="4"/><text x="66.9167%" y="543.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (3 samples, 0.16%)</title><rect x="66.7195%" y="517" width="0.1585%" height="15" fill="rgb(232,163,23)" fg:x="1263" fg:w="3"/><text x="66.9695%" y="527.50"></text></g><g><title>maelstrom-txn`core::ub_checks::is_nonoverlapping::runtime (1 samples, 0.05%)</title><rect x="66.8251%" y="501" width="0.0528%" height="15" fill="rgb(214,5,46)" fg:x="1265" fg:w="1"/><text x="67.0751%" y="511.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::end_string (7 samples, 0.37%)</title><rect x="66.5610%" y="613" width="0.3698%" height="15" fill="rgb(229,78,17)" fg:x="1260" fg:w="7"/><text x="66.8110%" y="623.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (6 samples, 0.32%)</title><rect x="66.6138%" y="597" width="0.3170%" height="15" fill="rgb(248,89,10)" fg:x="1261" fg:w="6"/><text x="66.8638%" y="607.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (6 samples, 0.32%)</title><rect x="66.6138%" y="581" width="0.3170%" height="15" fill="rgb(248,54,15)" fg:x="1261" fg:w="6"/><text x="66.8638%" y="591.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.32%)</title><rect x="66.6138%" y="565" width="0.3170%" height="15" fill="rgb(223,116,6)" fg:x="1261" fg:w="6"/><text x="66.8638%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.32%)</title><rect x="66.6138%" y="549" width="0.3170%" height="15" fill="rgb(205,125,38)" fg:x="1261" fg:w="6"/><text x="66.8638%" y="559.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.05%)</title><rect x="66.8780%" y="533" width="0.0528%" height="15" fill="rgb(251,78,38)" fg:x="1266" fg:w="1"/><text x="67.1280%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.58%)</title><rect x="67.6175%" y="597" width="0.5811%" height="15" fill="rgb(253,78,28)" fg:x="1280" fg:w="11"/><text x="67.8675%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.32%)</title><rect x="67.8817%" y="581" width="0.3170%" height="15" fill="rgb(209,120,3)" fg:x="1285" fg:w="6"/><text x="68.1317%" y="591.50"></text></g><g><title>maelstrom-txn`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.05%)</title><rect x="68.1986%" y="597" width="0.0528%" height="15" fill="rgb(238,229,9)" fg:x="1291" fg:w="1"/><text x="68.4486%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`szone_good_size (1 samples, 0.05%)</title><rect x="68.5684%" y="373" width="0.0528%" height="15" fill="rgb(253,159,18)" fg:x="1298" fg:w="1"/><text x="68.8184%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_size (1 samples, 0.05%)</title><rect x="68.6212%" y="357" width="0.0528%" height="15" fill="rgb(244,42,34)" fg:x="1299" fg:w="1"/><text x="68.8712%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (3 samples, 0.16%)</title><rect x="68.5684%" y="405" width="0.1585%" height="15" fill="rgb(224,8,7)" fg:x="1298" fg:w="3"/><text x="68.8184%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (3 samples, 0.16%)</title><rect x="68.5684%" y="389" width="0.1585%" height="15" fill="rgb(210,201,45)" fg:x="1298" fg:w="3"/><text x="68.8184%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.11%)</title><rect x="68.6212%" y="373" width="0.1057%" height="15" fill="rgb(252,185,21)" fg:x="1299" fg:w="2"/><text x="68.8712%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="68.6741%" y="357" width="0.0528%" height="15" fill="rgb(223,131,1)" fg:x="1300" fg:w="1"/><text x="68.9241%" y="367.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::finish_grow (4 samples, 0.21%)</title><rect x="68.5684%" y="453" width="0.2113%" height="15" fill="rgb(245,141,16)" fg:x="1298" fg:w="4"/><text x="68.8184%" y="463.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.21%)</title><rect x="68.5684%" y="437" width="0.2113%" height="15" fill="rgb(229,55,45)" fg:x="1298" fg:w="4"/><text x="68.8184%" y="447.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::grow_impl (4 samples, 0.21%)</title><rect x="68.5684%" y="421" width="0.2113%" height="15" fill="rgb(208,92,15)" fg:x="1298" fg:w="4"/><text x="68.8184%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.05%)</title><rect x="68.7269%" y="405" width="0.0528%" height="15" fill="rgb(234,185,47)" fg:x="1301" fg:w="1"/><text x="68.9769%" y="415.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.42%)</title><rect x="68.4099%" y="501" width="0.4226%" height="15" fill="rgb(253,104,50)" fg:x="1295" fg:w="8"/><text x="68.6599%" y="511.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (6 samples, 0.32%)</title><rect x="68.5156%" y="485" width="0.3170%" height="15" fill="rgb(205,70,7)" fg:x="1297" fg:w="6"/><text x="68.7656%" y="495.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (6 samples, 0.32%)</title><rect x="68.5156%" y="469" width="0.3170%" height="15" fill="rgb(240,178,43)" fg:x="1297" fg:w="6"/><text x="68.7656%" y="479.50"></text></g><g><title>maelstrom-txn`core::num::_&lt;impl usize&gt;::unchecked_mul::precondition_check (1 samples, 0.05%)</title><rect x="68.7797%" y="453" width="0.0528%" height="15" fill="rgb(214,112,2)" fg:x="1302" fg:w="1"/><text x="69.0297%" y="463.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (10 samples, 0.53%)</title><rect x="68.4099%" y="517" width="0.5283%" height="15" fill="rgb(206,46,17)" fg:x="1295" fg:w="10"/><text x="68.6599%" y="527.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (2 samples, 0.11%)</title><rect x="68.8325%" y="501" width="0.1057%" height="15" fill="rgb(225,220,16)" fg:x="1303" fg:w="2"/><text x="69.0825%" y="511.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (55 samples, 2.91%)</title><rect x="66.0856%" y="645" width="2.9054%" height="15" fill="rgb(238,65,40)" fg:x="1251" fg:w="55"/><text x="66.3356%" y="655.50">ma..</text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (54 samples, 2.85%)</title><rect x="66.1384%" y="629" width="2.8526%" height="15" fill="rgb(230,151,21)" fg:x="1252" fg:w="54"/><text x="66.3884%" y="639.50">ma..</text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (39 samples, 2.06%)</title><rect x="66.9308%" y="613" width="2.0602%" height="15" fill="rgb(218,58,49)" fg:x="1267" fg:w="39"/><text x="67.1808%" y="623.50">m..</text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_string_fragment (14 samples, 0.74%)</title><rect x="68.2515%" y="597" width="0.7396%" height="15" fill="rgb(219,179,14)" fg:x="1292" fg:w="14"/><text x="68.5015%" y="607.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (14 samples, 0.74%)</title><rect x="68.2515%" y="581" width="0.7396%" height="15" fill="rgb(223,72,1)" fg:x="1292" fg:w="14"/><text x="68.5015%" y="591.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (14 samples, 0.74%)</title><rect x="68.2515%" y="565" width="0.7396%" height="15" fill="rgb(238,126,10)" fg:x="1292" fg:w="14"/><text x="68.5015%" y="575.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (14 samples, 0.74%)</title><rect x="68.2515%" y="549" width="0.7396%" height="15" fill="rgb(224,206,38)" fg:x="1292" fg:w="14"/><text x="68.5015%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.69%)</title><rect x="68.3043%" y="533" width="0.6867%" height="15" fill="rgb(212,201,54)" fg:x="1293" fg:w="13"/><text x="68.5543%" y="543.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.05%)</title><rect x="68.9382%" y="517" width="0.0528%" height="15" fill="rgb(218,154,48)" fg:x="1305" fg:w="1"/><text x="69.1882%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::ser::FlatMapSerializeStruct&lt;M&gt; as serde::ser::SerializeStruct&gt;::serialize_field (144 samples, 7.61%)</title><rect x="61.5425%" y="757" width="7.6070%" height="15" fill="rgb(232,93,24)" fg:x="1165" fg:w="144"/><text x="61.7925%" y="767.50">maelstrom-..</text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (144 samples, 7.61%)</title><rect x="61.5425%" y="741" width="7.6070%" height="15" fill="rgb(245,30,21)" fg:x="1165" fg:w="144"/><text x="61.7925%" y="751.50">maelstrom-..</text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (139 samples, 7.34%)</title><rect x="61.8067%" y="725" width="7.3428%" height="15" fill="rgb(242,148,29)" fg:x="1170" fg:w="139"/><text x="62.0567%" y="735.50">maelstrom-..</text></g><g><title>maelstrom-txn`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (138 samples, 7.29%)</title><rect x="61.8595%" y="709" width="7.2900%" height="15" fill="rgb(244,153,54)" fg:x="1171" fg:w="138"/><text x="62.1095%" y="719.50">maelstrom-..</text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (127 samples, 6.71%)</title><rect x="62.4406%" y="693" width="6.7089%" height="15" fill="rgb(252,87,22)" fg:x="1182" fg:w="127"/><text x="62.6906%" y="703.50">maelstrom..</text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (69 samples, 3.65%)</title><rect x="65.5045%" y="677" width="3.6450%" height="15" fill="rgb(210,51,29)" fg:x="1240" fg:w="69"/><text x="65.7545%" y="687.50">mael..</text></g><g><title>maelstrom-txn`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (59 samples, 3.12%)</title><rect x="66.0328%" y="661" width="3.1167%" height="15" fill="rgb(242,136,47)" fg:x="1250" fg:w="59"/><text x="66.2828%" y="671.50">mae..</text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (3 samples, 0.16%)</title><rect x="68.9910%" y="645" width="0.1585%" height="15" fill="rgb(238,68,4)" fg:x="1306" fg:w="3"/><text x="69.2410%" y="655.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (3 samples, 0.16%)</title><rect x="68.9910%" y="629" width="0.1585%" height="15" fill="rgb(242,161,30)" fg:x="1306" fg:w="3"/><text x="69.2410%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.05%)</title><rect x="69.1495%" y="709" width="0.0528%" height="15" fill="rgb(218,58,44)" fg:x="1309" fg:w="1"/><text x="69.3995%" y="719.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.05%)</title><rect x="69.1495%" y="693" width="0.0528%" height="15" fill="rgb(252,125,32)" fg:x="1309" fg:w="1"/><text x="69.3995%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.05%)</title><rect x="69.1495%" y="677" width="0.0528%" height="15" fill="rgb(219,178,0)" fg:x="1309" fg:w="1"/><text x="69.3995%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.05%)</title><rect x="69.1495%" y="661" width="0.0528%" height="15" fill="rgb(213,152,7)" fg:x="1309" fg:w="1"/><text x="69.3995%" y="671.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (1 samples, 0.05%)</title><rect x="69.1495%" y="645" width="0.0528%" height="15" fill="rgb(249,109,34)" fg:x="1309" fg:w="1"/><text x="69.3995%" y="655.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (1 samples, 0.05%)</title><rect x="69.1495%" y="629" width="0.0528%" height="15" fill="rgb(232,96,21)" fg:x="1309" fg:w="1"/><text x="69.3995%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="69.1495%" y="613" width="0.0528%" height="15" fill="rgb(228,27,39)" fg:x="1309" fg:w="1"/><text x="69.3995%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="69.1495%" y="597" width="0.0528%" height="15" fill="rgb(211,182,52)" fg:x="1309" fg:w="1"/><text x="69.3995%" y="607.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_string (157 samples, 8.29%)</title><rect x="60.9614%" y="949" width="8.2937%" height="15" fill="rgb(234,178,38)" fg:x="1154" fg:w="157"/><text x="61.2114%" y="959.50">maelstrom-tx..</text></g><g><title>maelstrom-txn`serde_json::ser::to_vec (157 samples, 8.29%)</title><rect x="60.9614%" y="933" width="8.2937%" height="15" fill="rgb(221,111,3)" fg:x="1154" fg:w="157"/><text x="61.2114%" y="943.50">maelstrom-tx..</text></g><g><title>maelstrom-txn`serde_json::ser::to_writer (157 samples, 8.29%)</title><rect x="60.9614%" y="917" width="8.2937%" height="15" fill="rgb(228,175,21)" fg:x="1154" fg:w="157"/><text x="61.2114%" y="927.50">maelstrom-tx..</text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::Message&gt;::serialize (157 samples, 8.29%)</title><rect x="60.9614%" y="901" width="8.2937%" height="15" fill="rgb(228,174,43)" fg:x="1154" fg:w="157"/><text x="61.2114%" y="911.50">maelstrom-tx..</text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (154 samples, 8.14%)</title><rect x="61.1199%" y="885" width="8.1352%" height="15" fill="rgb(211,191,0)" fg:x="1157" fg:w="154"/><text x="61.3699%" y="895.50">maelstrom-t..</text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (154 samples, 8.14%)</title><rect x="61.1199%" y="869" width="8.1352%" height="15" fill="rgb(253,117,3)" fg:x="1157" fg:w="154"/><text x="61.3699%" y="879.50">maelstrom-t..</text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (149 samples, 7.87%)</title><rect x="61.3840%" y="853" width="7.8711%" height="15" fill="rgb(241,127,19)" fg:x="1162" fg:w="149"/><text x="61.6340%" y="863.50">maelstrom-t..</text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::MessageBody&gt;::serialize (149 samples, 7.87%)</title><rect x="61.3840%" y="837" width="7.8711%" height="15" fill="rgb(218,103,12)" fg:x="1162" fg:w="149"/><text x="61.6340%" y="847.50">maelstrom-t..</text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (146 samples, 7.71%)</title><rect x="61.5425%" y="821" width="7.7126%" height="15" fill="rgb(236,214,43)" fg:x="1165" fg:w="146"/><text x="61.7925%" y="831.50">maelstrom-t..</text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::MessageExtra&gt;::serialize (146 samples, 7.71%)</title><rect x="61.5425%" y="805" width="7.7126%" height="15" fill="rgb(244,144,19)" fg:x="1165" fg:w="146"/><text x="61.7925%" y="815.50">maelstrom-t..</text></g><g><title>maelstrom-txn`serde::__private::ser::serialize_tagged_newtype (146 samples, 7.71%)</title><rect x="61.5425%" y="789" width="7.7126%" height="15" fill="rgb(246,188,10)" fg:x="1165" fg:w="146"/><text x="61.7925%" y="799.50">maelstrom-t..</text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::KvCasData&gt;::serialize (146 samples, 7.71%)</title><rect x="61.5425%" y="773" width="7.7126%" height="15" fill="rgb(212,193,33)" fg:x="1165" fg:w="146"/><text x="61.7925%" y="783.50">maelstrom-t..</text></g><g><title>maelstrom-txn`&lt;serde::__private::ser::TaggedSerializer&lt;S&gt; as serde::ser::Serializer&gt;::serialize_struct (2 samples, 0.11%)</title><rect x="69.1495%" y="757" width="0.1057%" height="15" fill="rgb(241,51,29)" fg:x="1309" fg:w="2"/><text x="69.3995%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::ser::FlatMapSerializeStruct&lt;M&gt; as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.11%)</title><rect x="69.1495%" y="741" width="0.1057%" height="15" fill="rgb(211,58,19)" fg:x="1309" fg:w="2"/><text x="69.3995%" y="751.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (2 samples, 0.11%)</title><rect x="69.1495%" y="725" width="0.1057%" height="15" fill="rgb(229,111,26)" fg:x="1309" fg:w="2"/><text x="69.3995%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.05%)</title><rect x="69.2023%" y="709" width="0.0528%" height="15" fill="rgb(213,115,40)" fg:x="1310" fg:w="1"/><text x="69.4523%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.11%)</title><rect x="69.2552%" y="885" width="0.1057%" height="15" fill="rgb(209,56,44)" fg:x="1311" fg:w="2"/><text x="69.5052%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`write (2 samples, 0.11%)</title><rect x="69.2552%" y="869" width="0.1057%" height="15" fill="rgb(230,108,32)" fg:x="1311" fg:w="2"/><text x="69.5052%" y="879.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::fmt::Display&gt;::fmt (3 samples, 0.16%)</title><rect x="69.2552%" y="901" width="0.1585%" height="15" fill="rgb(216,165,31)" fg:x="1311" fg:w="3"/><text x="69.5052%" y="911.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.05%)</title><rect x="69.3608%" y="885" width="0.0528%" height="15" fill="rgb(218,122,21)" fg:x="1313" fg:w="1"/><text x="69.6108%" y="895.50"></text></g><g><title>maelstrom-txn`core::fmt::write (8 samples, 0.42%)</title><rect x="69.2552%" y="917" width="0.4226%" height="15" fill="rgb(223,224,47)" fg:x="1311" fg:w="8"/><text x="69.5052%" y="927.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (5 samples, 0.26%)</title><rect x="69.4136%" y="901" width="0.2641%" height="15" fill="rgb(238,102,44)" fg:x="1314" fg:w="5"/><text x="69.6636%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`write (5 samples, 0.26%)</title><rect x="69.4136%" y="885" width="0.2641%" height="15" fill="rgb(236,46,40)" fg:x="1314" fg:w="5"/><text x="69.6636%" y="895.50"></text></g><g><title>maelstrom-txn`std::io::stdio::_eprint (9 samples, 0.48%)</title><rect x="69.2552%" y="949" width="0.4754%" height="15" fill="rgb(247,202,50)" fg:x="1311" fg:w="9"/><text x="69.5052%" y="959.50"></text></g><g><title>maelstrom-txn`&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (9 samples, 0.48%)</title><rect x="69.2552%" y="933" width="0.4754%" height="15" fill="rgb(209,99,20)" fg:x="1311" fg:w="9"/><text x="69.5052%" y="943.50"></text></g><g><title>maelstrom-txn`std::io::stdio::Stderr::lock (1 samples, 0.05%)</title><rect x="69.6778%" y="917" width="0.0528%" height="15" fill="rgb(252,27,34)" fg:x="1319" fg:w="1"/><text x="69.9278%" y="927.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.05%)</title><rect x="69.6778%" y="901" width="0.0528%" height="15" fill="rgb(215,206,23)" fg:x="1319" fg:w="1"/><text x="69.9278%" y="911.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::fmt::Display&gt;::fmt (2 samples, 0.11%)</title><rect x="69.7306%" y="901" width="0.1057%" height="15" fill="rgb(212,135,36)" fg:x="1320" fg:w="2"/><text x="69.9806%" y="911.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.11%)</title><rect x="69.7306%" y="885" width="0.1057%" height="15" fill="rgb(240,189,1)" fg:x="1320" fg:w="2"/><text x="69.9806%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (2 samples, 0.11%)</title><rect x="69.7306%" y="869" width="0.1057%" height="15" fill="rgb(242,56,20)" fg:x="1320" fg:w="2"/><text x="69.9806%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`write (2 samples, 0.11%)</title><rect x="69.7306%" y="853" width="0.1057%" height="15" fill="rgb(247,132,33)" fg:x="1320" fg:w="2"/><text x="69.9806%" y="863.50"></text></g><g><title>maelstrom-txn`maelstrom_node::node::Node::sync_rpc (217 samples, 11.46%)</title><rect x="58.4258%" y="965" width="11.4633%" height="15" fill="rgb(208,149,11)" fg:x="1106" fg:w="217"/><text x="58.6758%" y="975.50">maelstrom-txn`mae..</text></g><g><title>maelstrom-txn`std::io::stdio::_print (3 samples, 0.16%)</title><rect x="69.7306%" y="949" width="0.1585%" height="15" fill="rgb(211,33,11)" fg:x="1320" fg:w="3"/><text x="69.9806%" y="959.50"></text></g><g><title>maelstrom-txn`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (3 samples, 0.16%)</title><rect x="69.7306%" y="933" width="0.1585%" height="15" fill="rgb(221,29,38)" fg:x="1320" fg:w="3"/><text x="69.9806%" y="943.50"></text></g><g><title>maelstrom-txn`core::fmt::write (3 samples, 0.16%)</title><rect x="69.7306%" y="917" width="0.1585%" height="15" fill="rgb(206,182,49)" fg:x="1320" fg:w="3"/><text x="69.9806%" y="927.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="69.8362%" y="901" width="0.0528%" height="15" fill="rgb(216,140,1)" fg:x="1322" fg:w="1"/><text x="70.0862%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.05%)</title><rect x="69.8362%" y="885" width="0.0528%" height="15" fill="rgb(232,57,40)" fg:x="1322" fg:w="1"/><text x="70.0862%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="69.8891%" y="869" width="0.0528%" height="15" fill="rgb(224,186,18)" fg:x="1323" fg:w="1"/><text x="70.1391%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.05%)</title><rect x="69.8891%" y="853" width="0.0528%" height="15" fill="rgb(215,121,11)" fg:x="1323" fg:w="1"/><text x="70.1391%" y="863.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;(usize,alloc::string::String)&gt; (3 samples, 0.16%)</title><rect x="69.9419%" y="853" width="0.1585%" height="15" fill="rgb(245,147,10)" fg:x="1324" fg:w="3"/><text x="70.1919%" y="863.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.16%)</title><rect x="69.9419%" y="837" width="0.1585%" height="15" fill="rgb(238,153,13)" fg:x="1324" fg:w="3"/><text x="70.1919%" y="847.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.16%)</title><rect x="69.9419%" y="821" width="0.1585%" height="15" fill="rgb(233,108,0)" fg:x="1324" fg:w="3"/><text x="70.1919%" y="831.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.16%)</title><rect x="69.9419%" y="805" width="0.1585%" height="15" fill="rgb(212,157,17)" fg:x="1324" fg:w="3"/><text x="70.1919%" y="815.50"></text></g><g><title>maelstrom-txn`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.16%)</title><rect x="69.9419%" y="789" width="0.1585%" height="15" fill="rgb(225,213,38)" fg:x="1324" fg:w="3"/><text x="70.1919%" y="799.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3 samples, 0.16%)</title><rect x="69.9419%" y="773" width="0.1585%" height="15" fill="rgb(248,16,11)" fg:x="1324" fg:w="3"/><text x="70.1919%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.16%)</title><rect x="69.9419%" y="757" width="0.1585%" height="15" fill="rgb(241,33,4)" fg:x="1324" fg:w="3"/><text x="70.1919%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.16%)</title><rect x="69.9419%" y="741" width="0.1585%" height="15" fill="rgb(222,26,43)" fg:x="1324" fg:w="3"/><text x="70.1919%" y="751.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,alloc::string::String&gt;&gt; (5 samples, 0.26%)</title><rect x="69.8891%" y="949" width="0.2641%" height="15" fill="rgb(243,29,36)" fg:x="1323" fg:w="5"/><text x="70.1391%" y="959.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;usize,alloc::string::String,std::hash::random::RandomState&gt;&gt; (5 samples, 0.26%)</title><rect x="69.8891%" y="933" width="0.2641%" height="15" fill="rgb(241,9,27)" fg:x="1323" fg:w="5"/><text x="70.1391%" y="943.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(usize,alloc::string::String)&gt;&gt; (5 samples, 0.26%)</title><rect x="69.8891%" y="917" width="0.2641%" height="15" fill="rgb(205,117,26)" fg:x="1323" fg:w="5"/><text x="70.1391%" y="927.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.26%)</title><rect x="69.8891%" y="901" width="0.2641%" height="15" fill="rgb(209,80,39)" fg:x="1323" fg:w="5"/><text x="70.1391%" y="911.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::drop_inner_table (5 samples, 0.26%)</title><rect x="69.8891%" y="885" width="0.2641%" height="15" fill="rgb(239,155,6)" fg:x="1323" fg:w="5"/><text x="70.1391%" y="895.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawTableInner::drop_elements (4 samples, 0.21%)</title><rect x="69.9419%" y="869" width="0.2113%" height="15" fill="rgb(212,104,12)" fg:x="1324" fg:w="4"/><text x="70.1919%" y="879.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.05%)</title><rect x="70.1004%" y="853" width="0.0528%" height="15" fill="rgb(234,204,3)" fg:x="1327" fg:w="1"/><text x="70.3504%" y="863.50"></text></g><g><title>maelstrom-txn`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.05%)</title><rect x="70.1532%" y="901" width="0.0528%" height="15" fill="rgb(251,218,7)" fg:x="1328" fg:w="1"/><text x="70.4032%" y="911.50"></text></g><g><title>maelstrom-txn`&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="70.2060%" y="885" width="0.0528%" height="15" fill="rgb(221,81,32)" fg:x="1329" fg:w="1"/><text x="70.4560%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.16%)</title><rect x="70.3645%" y="709" width="0.1585%" height="15" fill="rgb(214,152,26)" fg:x="1332" fg:w="3"/><text x="70.6145%" y="719.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::alloc_impl (3 samples, 0.16%)</title><rect x="70.3645%" y="693" width="0.1585%" height="15" fill="rgb(223,22,3)" fg:x="1332" fg:w="3"/><text x="70.6145%" y="703.50"></text></g><g><title>maelstrom-txn`alloc::alloc::alloc (2 samples, 0.11%)</title><rect x="70.4173%" y="677" width="0.1057%" height="15" fill="rgb(207,174,7)" fg:x="1333" fg:w="2"/><text x="70.6673%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.11%)</title><rect x="70.4173%" y="661" width="0.1057%" height="15" fill="rgb(224,19,52)" fg:x="1333" fg:w="2"/><text x="70.6673%" y="671.50"></text></g><g><title>maelstrom-txn`alloc::str::_&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (5 samples, 0.26%)</title><rect x="70.3117%" y="773" width="0.2641%" height="15" fill="rgb(228,24,14)" fg:x="1331" fg:w="5"/><text x="70.5617%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.26%)</title><rect x="70.3117%" y="757" width="0.2641%" height="15" fill="rgb(230,153,43)" fg:x="1331" fg:w="5"/><text x="70.5617%" y="767.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4 samples, 0.21%)</title><rect x="70.3645%" y="741" width="0.2113%" height="15" fill="rgb(231,106,12)" fg:x="1332" fg:w="4"/><text x="70.6145%" y="751.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4 samples, 0.21%)</title><rect x="70.3645%" y="725" width="0.2113%" height="15" fill="rgb(215,92,2)" fg:x="1332" fg:w="4"/><text x="70.6145%" y="735.50"></text></g><g><title>maelstrom-txn`core::alloc::layout::Layout::repeat (1 samples, 0.05%)</title><rect x="70.5230%" y="709" width="0.0528%" height="15" fill="rgb(249,143,25)" fg:x="1335" fg:w="1"/><text x="70.7730%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_key (10 samples, 0.53%)</title><rect x="70.2588%" y="837" width="0.5283%" height="15" fill="rgb(252,7,35)" fg:x="1330" fg:w="10"/><text x="70.5088%" y="847.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.53%)</title><rect x="70.2588%" y="821" width="0.5283%" height="15" fill="rgb(216,69,40)" fg:x="1330" fg:w="10"/><text x="70.5088%" y="831.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for usize&gt;::serialize (10 samples, 0.53%)</title><rect x="70.2588%" y="805" width="0.5283%" height="15" fill="rgb(240,36,33)" fg:x="1330" fg:w="10"/><text x="70.5088%" y="815.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::ser::MapKeySerializer as serde::ser::Serializer&gt;::serialize_u64 (10 samples, 0.53%)</title><rect x="70.2588%" y="789" width="0.5283%" height="15" fill="rgb(231,128,14)" fg:x="1330" fg:w="10"/><text x="70.5088%" y="799.50"></text></g><g><title>maelstrom-txn`itoa::Buffer::format (4 samples, 0.21%)</title><rect x="70.5758%" y="773" width="0.2113%" height="15" fill="rgb(245,143,14)" fg:x="1336" fg:w="4"/><text x="70.8258%" y="783.50"></text></g><g><title>maelstrom-txn`itoa::_&lt;impl itoa::private::Sealed for u64&gt;::write (4 samples, 0.21%)</title><rect x="70.5758%" y="757" width="0.2113%" height="15" fill="rgb(222,130,28)" fg:x="1336" fg:w="4"/><text x="70.8258%" y="767.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.05%)</title><rect x="70.7343%" y="741" width="0.0528%" height="15" fill="rgb(212,10,48)" fg:x="1339" fg:w="1"/><text x="70.9843%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="70.9984%" y="773" width="0.0528%" height="15" fill="rgb(254,118,45)" fg:x="1344" fg:w="1"/><text x="71.2484%" y="783.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.05%)</title><rect x="71.0512%" y="773" width="0.0528%" height="15" fill="rgb(228,6,45)" fg:x="1345" fg:w="1"/><text x="71.3012%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (1 samples, 0.05%)</title><rect x="71.5267%" y="741" width="0.0528%" height="15" fill="rgb(241,18,35)" fg:x="1354" fg:w="1"/><text x="71.7767%" y="751.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memcmp (1 samples, 0.05%)</title><rect x="71.6323%" y="709" width="0.0528%" height="15" fill="rgb(227,214,53)" fg:x="1356" fg:w="1"/><text x="71.8823%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (2 samples, 0.11%)</title><rect x="71.6852%" y="709" width="0.1057%" height="15" fill="rgb(224,107,51)" fg:x="1357" fg:w="2"/><text x="71.9352%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (2 samples, 0.11%)</title><rect x="71.6852%" y="693" width="0.1057%" height="15" fill="rgb(248,60,28)" fg:x="1357" fg:w="2"/><text x="71.9352%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (13 samples, 0.69%)</title><rect x="71.5795%" y="725" width="0.6867%" height="15" fill="rgb(249,101,23)" fg:x="1355" fg:w="13"/><text x="71.8295%" y="735.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (9 samples, 0.48%)</title><rect x="71.7908%" y="709" width="0.4754%" height="15" fill="rgb(228,51,19)" fg:x="1359" fg:w="9"/><text x="72.0408%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (14 samples, 0.74%)</title><rect x="71.5795%" y="741" width="0.7396%" height="15" fill="rgb(213,20,6)" fg:x="1355" fg:w="14"/><text x="71.8295%" y="751.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.05%)</title><rect x="72.2662%" y="725" width="0.0528%" height="15" fill="rgb(212,124,10)" fg:x="1368" fg:w="1"/><text x="72.5162%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.26%)</title><rect x="72.3191%" y="741" width="0.2641%" height="15" fill="rgb(248,3,40)" fg:x="1369" fg:w="5"/><text x="72.5691%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.16%)</title><rect x="72.4247%" y="725" width="0.1585%" height="15" fill="rgb(223,178,23)" fg:x="1371" fg:w="3"/><text x="72.6747%" y="735.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (36 samples, 1.90%)</title><rect x="70.8928%" y="789" width="1.9017%" height="15" fill="rgb(240,132,45)" fg:x="1342" fg:w="36"/><text x="71.1428%" y="799.50">m..</text></g><g><title>maelstrom-txn`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (32 samples, 1.69%)</title><rect x="71.1041%" y="773" width="1.6904%" height="15" fill="rgb(245,164,36)" fg:x="1346" fg:w="32"/><text x="71.3541%" y="783.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (30 samples, 1.58%)</title><rect x="71.2097%" y="757" width="1.5848%" height="15" fill="rgb(231,188,53)" fg:x="1348" fg:w="30"/><text x="71.4597%" y="767.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (4 samples, 0.21%)</title><rect x="72.5832%" y="741" width="0.2113%" height="15" fill="rgb(237,198,39)" fg:x="1374" fg:w="4"/><text x="72.8332%" y="751.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert::_{{closure}} (1 samples, 0.05%)</title><rect x="72.9530%" y="757" width="0.0528%" height="15" fill="rgb(223,120,35)" fg:x="1381" fg:w="1"/><text x="73.2030%" y="767.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;::push (1 samples, 0.05%)</title><rect x="72.9530%" y="741" width="0.0528%" height="15" fill="rgb(253,107,49)" fg:x="1381" fg:w="1"/><text x="73.2030%" y="751.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::correct_parent_link (1 samples, 0.05%)</title><rect x="72.9530%" y="725" width="0.0528%" height="15" fill="rgb(216,44,31)" fg:x="1381" fg:w="1"/><text x="73.2030%" y="735.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (1 samples, 0.05%)</title><rect x="72.9530%" y="709" width="0.0528%" height="15" fill="rgb(253,87,21)" fg:x="1381" fg:w="1"/><text x="73.2030%" y="719.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (1 samples, 0.05%)</title><rect x="73.0058%" y="757" width="0.0528%" height="15" fill="rgb(226,18,2)" fg:x="1382" fg:w="1"/><text x="73.2558%" y="767.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (1 samples, 0.05%)</title><rect x="73.0058%" y="741" width="0.0528%" height="15" fill="rgb(216,8,46)" fg:x="1382" fg:w="1"/><text x="73.2558%" y="751.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (10 samples, 0.53%)</title><rect x="73.1643%" y="741" width="0.5283%" height="15" fill="rgb(226,140,39)" fg:x="1385" fg:w="10"/><text x="73.4143%" y="751.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::slice_insert (6 samples, 0.32%)</title><rect x="73.3756%" y="725" width="0.3170%" height="15" fill="rgb(221,194,54)" fg:x="1389" fg:w="6"/><text x="73.6256%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.11%)</title><rect x="73.5869%" y="709" width="0.1057%" height="15" fill="rgb(213,92,11)" fg:x="1393" fg:w="2"/><text x="73.8369%" y="719.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (18 samples, 0.95%)</title><rect x="72.7945%" y="789" width="0.9509%" height="15" fill="rgb(229,162,46)" fg:x="1378" fg:w="18"/><text x="73.0445%" y="799.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (17 samples, 0.90%)</title><rect x="72.8473%" y="773" width="0.8980%" height="15" fill="rgb(214,111,36)" fg:x="1379" fg:w="17"/><text x="73.0973%" y="783.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (13 samples, 0.69%)</title><rect x="73.0586%" y="757" width="0.6867%" height="15" fill="rgb(207,6,21)" fg:x="1383" fg:w="13"/><text x="73.3086%" y="767.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (1 samples, 0.05%)</title><rect x="73.6926%" y="741" width="0.0528%" height="15" fill="rgb(213,127,38)" fg:x="1395" fg:w="1"/><text x="73.9426%" y="751.50"></text></g><g><title>maelstrom-txn`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::split_leaf_data (1 samples, 0.05%)</title><rect x="73.6926%" y="725" width="0.0528%" height="15" fill="rgb(238,118,32)" fg:x="1395" fg:w="1"/><text x="73.9426%" y="735.50"></text></g><g><title>maelstrom-txn`serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (56 samples, 2.96%)</title><rect x="70.8399%" y="821" width="2.9583%" height="15" fill="rgb(240,139,39)" fg:x="1341" fg:w="56"/><text x="71.0899%" y="831.50">mae..</text></g><g><title>maelstrom-txn`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (55 samples, 2.91%)</title><rect x="70.8928%" y="805" width="2.9054%" height="15" fill="rgb(235,10,37)" fg:x="1342" fg:w="55"/><text x="71.1428%" y="815.50">ma..</text></g><g><title>maelstrom-txn`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.05%)</title><rect x="73.7454%" y="789" width="0.0528%" height="15" fill="rgb(249,171,38)" fg:x="1396" fg:w="1"/><text x="73.9954%" y="799.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (4 samples, 0.21%)</title><rect x="73.7982%" y="757" width="0.2113%" height="15" fill="rgb(242,144,32)" fg:x="1397" fg:w="4"/><text x="74.0482%" y="767.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (3 samples, 0.16%)</title><rect x="73.8510%" y="741" width="0.1585%" height="15" fill="rgb(217,117,21)" fg:x="1398" fg:w="3"/><text x="74.1010%" y="751.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::alloc_impl (2 samples, 0.11%)</title><rect x="74.1680%" y="661" width="0.1057%" height="15" fill="rgb(249,87,1)" fg:x="1404" fg:w="2"/><text x="74.4180%" y="671.50"></text></g><g><title>maelstrom-txn`alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="74.2208%" y="645" width="0.0528%" height="15" fill="rgb(248,196,48)" fg:x="1405" fg:w="1"/><text x="74.4708%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.05%)</title><rect x="74.2208%" y="629" width="0.0528%" height="15" fill="rgb(251,206,33)" fg:x="1405" fg:w="1"/><text x="74.4708%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.16%)</title><rect x="74.1680%" y="677" width="0.1585%" height="15" fill="rgb(232,141,28)" fg:x="1404" fg:w="3"/><text x="74.4180%" y="687.50"></text></g><g><title>maelstrom-txn`alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="74.2736%" y="661" width="0.0528%" height="15" fill="rgb(209,167,14)" fg:x="1406" fg:w="1"/><text x="74.5236%" y="671.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (7 samples, 0.37%)</title><rect x="74.0623%" y="709" width="0.3698%" height="15" fill="rgb(225,11,50)" fg:x="1402" fg:w="7"/><text x="74.3123%" y="719.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (7 samples, 0.37%)</title><rect x="74.0623%" y="693" width="0.3698%" height="15" fill="rgb(209,50,20)" fg:x="1402" fg:w="7"/><text x="74.3123%" y="703.50"></text></g><g><title>maelstrom-txn`core::alloc::layout::Layout::repeat (2 samples, 0.11%)</title><rect x="74.3265%" y="677" width="0.1057%" height="15" fill="rgb(212,17,46)" fg:x="1407" fg:w="2"/><text x="74.5765%" y="687.50"></text></g><g><title>maelstrom-txn`serde_json::value::to_value (87 samples, 4.60%)</title><rect x="69.8891%" y="965" width="4.5959%" height="15" fill="rgb(216,101,39)" fg:x="1323" fg:w="87"/><text x="70.1391%" y="975.50">maels..</text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (82 samples, 4.33%)</title><rect x="70.1532%" y="949" width="4.3317%" height="15" fill="rgb(212,228,48)" fg:x="1328" fg:w="82"/><text x="70.4032%" y="959.50">maels..</text></g><g><title>maelstrom-txn`serde::ser::Serializer::collect_map (82 samples, 4.33%)</title><rect x="70.1532%" y="933" width="4.3317%" height="15" fill="rgb(250,6,50)" fg:x="1328" fg:w="82"/><text x="70.4032%" y="943.50">maels..</text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::try_for_each (82 samples, 4.33%)</title><rect x="70.1532%" y="917" width="4.3317%" height="15" fill="rgb(250,160,48)" fg:x="1328" fg:w="82"/><text x="70.4032%" y="927.50">maels..</text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::try_fold (81 samples, 4.28%)</title><rect x="70.2060%" y="901" width="4.2789%" height="15" fill="rgb(244,216,33)" fg:x="1329" fg:w="81"/><text x="70.4560%" y="911.50">maels..</text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (80 samples, 4.23%)</title><rect x="70.2588%" y="885" width="4.2261%" height="15" fill="rgb(207,157,5)" fg:x="1330" fg:w="80"/><text x="70.5088%" y="895.50">maels..</text></g><g><title>maelstrom-txn`serde::ser::Serializer::collect_map::_{{closure}} (80 samples, 4.23%)</title><rect x="70.2588%" y="869" width="4.2261%" height="15" fill="rgb(228,199,8)" fg:x="1330" fg:w="80"/><text x="70.5088%" y="879.50">maels..</text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (80 samples, 4.23%)</title><rect x="70.2588%" y="853" width="4.2261%" height="15" fill="rgb(227,80,20)" fg:x="1330" fg:w="80"/><text x="70.5088%" y="863.50">maels..</text></g><g><title>maelstrom-txn`&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (70 samples, 3.70%)</title><rect x="70.7871%" y="837" width="3.6978%" height="15" fill="rgb(222,9,33)" fg:x="1340" fg:w="70"/><text x="71.0371%" y="847.50">mael..</text></g><g><title>maelstrom-txn`serde_json::value::to_value (13 samples, 0.69%)</title><rect x="73.7982%" y="821" width="0.6867%" height="15" fill="rgb(239,44,28)" fg:x="1397" fg:w="13"/><text x="74.0482%" y="831.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 0.69%)</title><rect x="73.7982%" y="805" width="0.6867%" height="15" fill="rgb(249,187,43)" fg:x="1397" fg:w="13"/><text x="74.0482%" y="815.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 0.69%)</title><rect x="73.7982%" y="789" width="0.6867%" height="15" fill="rgb(216,141,28)" fg:x="1397" fg:w="13"/><text x="74.0482%" y="799.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (13 samples, 0.69%)</title><rect x="73.7982%" y="773" width="0.6867%" height="15" fill="rgb(230,154,53)" fg:x="1397" fg:w="13"/><text x="74.0482%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_str (9 samples, 0.48%)</title><rect x="74.0095%" y="757" width="0.4754%" height="15" fill="rgb(227,82,4)" fg:x="1401" fg:w="9"/><text x="74.2595%" y="767.50"></text></g><g><title>maelstrom-txn`alloc::str::_&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (9 samples, 0.48%)</title><rect x="74.0095%" y="741" width="0.4754%" height="15" fill="rgb(220,107,16)" fg:x="1401" fg:w="9"/><text x="74.2595%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.48%)</title><rect x="74.0095%" y="725" width="0.4754%" height="15" fill="rgb(207,187,2)" fg:x="1401" fg:w="9"/><text x="74.2595%" y="735.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.05%)</title><rect x="74.4321%" y="709" width="0.0528%" height="15" fill="rgb(210,162,52)" fg:x="1409" fg:w="1"/><text x="74.6821%" y="719.50"></text></g><g><title>maelstrom-txn`std::collections::hash::map::HashMap&lt;K,V&gt;::new (1 samples, 0.05%)</title><rect x="74.4849%" y="965" width="0.0528%" height="15" fill="rgb(217,216,49)" fg:x="1410" fg:w="1"/><text x="74.7349%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="74.4849%" y="949" width="0.0528%" height="15" fill="rgb(218,146,49)" fg:x="1410" fg:w="1"/><text x="74.7349%" y="959.50"></text></g><g><title>maelstrom-txn`core::fmt::Formatter::debug_map (1 samples, 0.05%)</title><rect x="74.5378%" y="885" width="0.0528%" height="15" fill="rgb(216,55,40)" fg:x="1411" fg:w="1"/><text x="74.7878%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="74.5378%" y="869" width="0.0528%" height="15" fill="rgb(208,196,21)" fg:x="1411" fg:w="1"/><text x="74.7878%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.05%)</title><rect x="74.5378%" y="853" width="0.0528%" height="15" fill="rgb(242,117,42)" fg:x="1411" fg:w="1"/><text x="74.7878%" y="863.50"></text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="74.6434%" y="837" width="0.0528%" height="15" fill="rgb(210,11,23)" fg:x="1413" fg:w="1"/><text x="74.8934%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="74.6434%" y="821" width="0.0528%" height="15" fill="rgb(217,110,2)" fg:x="1413" fg:w="1"/><text x="74.8934%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.05%)</title><rect x="74.6434%" y="805" width="0.0528%" height="15" fill="rgb(229,77,54)" fg:x="1413" fg:w="1"/><text x="74.8934%" y="815.50"></text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::entry (3 samples, 0.16%)</title><rect x="74.6434%" y="869" width="0.1585%" height="15" fill="rgb(218,53,16)" fg:x="1413" fg:w="3"/><text x="74.8934%" y="879.50"></text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::key (3 samples, 0.16%)</title><rect x="74.6434%" y="853" width="0.1585%" height="15" fill="rgb(215,38,13)" fg:x="1413" fg:w="3"/><text x="74.8934%" y="863.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.11%)</title><rect x="74.6962%" y="837" width="0.1057%" height="15" fill="rgb(235,42,18)" fg:x="1414" fg:w="2"/><text x="74.9462%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`write (2 samples, 0.11%)</title><rect x="74.6962%" y="821" width="0.1057%" height="15" fill="rgb(219,66,54)" fg:x="1414" fg:w="2"/><text x="74.9462%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;&amp;T as core::fmt::Debug&gt;::fmt (7 samples, 0.37%)</title><rect x="74.5378%" y="917" width="0.3698%" height="15" fill="rgb(222,205,4)" fg:x="1411" fg:w="7"/><text x="74.7878%" y="927.50"></text></g><g><title>maelstrom-txn`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::fmt::Debug&gt;::fmt (7 samples, 0.37%)</title><rect x="74.5378%" y="901" width="0.3698%" height="15" fill="rgb(227,213,46)" fg:x="1411" fg:w="7"/><text x="74.7878%" y="911.50"></text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::entries (6 samples, 0.32%)</title><rect x="74.5906%" y="885" width="0.3170%" height="15" fill="rgb(250,145,42)" fg:x="1412" fg:w="6"/><text x="74.8406%" y="895.50"></text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::value (2 samples, 0.11%)</title><rect x="74.8019%" y="869" width="0.1057%" height="15" fill="rgb(219,15,2)" fg:x="1416" fg:w="2"/><text x="75.0519%" y="879.50"></text></g><g><title>maelstrom-txn`&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.11%)</title><rect x="74.8019%" y="853" width="0.1057%" height="15" fill="rgb(231,181,52)" fg:x="1416" fg:w="2"/><text x="75.0519%" y="863.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::fmt::Debug&gt;::fmt (2 samples, 0.11%)</title><rect x="74.8019%" y="837" width="0.1057%" height="15" fill="rgb(235,1,42)" fg:x="1416" fg:w="2"/><text x="75.0519%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;str as core::fmt::Debug&gt;::fmt (2 samples, 0.11%)</title><rect x="74.8019%" y="821" width="0.1057%" height="15" fill="rgb(249,88,27)" fg:x="1416" fg:w="2"/><text x="75.0519%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (2 samples, 0.11%)</title><rect x="74.8019%" y="805" width="0.1057%" height="15" fill="rgb(235,145,16)" fg:x="1416" fg:w="2"/><text x="75.0519%" y="815.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.11%)</title><rect x="74.8019%" y="789" width="0.1057%" height="15" fill="rgb(237,114,19)" fg:x="1416" fg:w="2"/><text x="75.0519%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`write (2 samples, 0.11%)</title><rect x="74.8019%" y="773" width="0.1057%" height="15" fill="rgb(238,51,50)" fg:x="1416" fg:w="2"/><text x="75.0519%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.11%)</title><rect x="74.9604%" y="885" width="0.1057%" height="15" fill="rgb(205,194,25)" fg:x="1419" fg:w="2"/><text x="75.2104%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.11%)</title><rect x="74.9604%" y="869" width="0.1057%" height="15" fill="rgb(215,203,17)" fg:x="1419" fg:w="2"/><text x="75.2104%" y="879.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.05%)</title><rect x="75.0132%" y="853" width="0.0528%" height="15" fill="rgb(233,112,49)" fg:x="1420" fg:w="1"/><text x="75.2632%" y="863.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (68 samples, 3.59%)</title><rect x="75.3830%" y="789" width="3.5922%" height="15" fill="rgb(241,130,26)" fg:x="1427" fg:w="68"/><text x="75.6330%" y="799.50">mael..</text></g><g><title>libsystem_kernel.dylib`write (68 samples, 3.59%)</title><rect x="75.3830%" y="773" width="3.5922%" height="15" fill="rgb(252,223,19)" fg:x="1427" fg:w="68"/><text x="75.6330%" y="783.50">libs..</text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (72 samples, 3.80%)</title><rect x="75.2245%" y="805" width="3.8035%" height="15" fill="rgb(211,95,25)" fg:x="1424" fg:w="72"/><text x="75.4745%" y="815.50">mael..</text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (1 samples, 0.05%)</title><rect x="78.9752%" y="789" width="0.0528%" height="15" fill="rgb(251,182,27)" fg:x="1495" fg:w="1"/><text x="79.2252%" y="799.50"></text></g><g><title>maelstrom-txn`core::fmt::Formatter::pad_integral (1 samples, 0.05%)</title><rect x="79.0280%" y="805" width="0.0528%" height="15" fill="rgb(238,24,4)" fg:x="1496" fg:w="1"/><text x="79.2780%" y="815.50"></text></g><g><title>maelstrom-txn`core::fmt::num::_&lt;impl core::fmt::Debug for usize&gt;::fmt (77 samples, 4.07%)</title><rect x="75.0660%" y="837" width="4.0676%" height="15" fill="rgb(224,220,25)" fg:x="1421" fg:w="77"/><text x="75.3160%" y="847.50">mael..</text></g><g><title>maelstrom-txn`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (76 samples, 4.01%)</title><rect x="75.1189%" y="821" width="4.0148%" height="15" fill="rgb(239,133,26)" fg:x="1422" fg:w="76"/><text x="75.3689%" y="831.50">mael..</text></g><g><title>maelstrom-txn`core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.05%)</title><rect x="79.0808%" y="805" width="0.0528%" height="15" fill="rgb(211,94,48)" fg:x="1497" fg:w="1"/><text x="79.3308%" y="815.50"></text></g><g><title>maelstrom-txn`&lt;&amp;T as core::fmt::Debug&gt;::fmt (78 samples, 4.12%)</title><rect x="75.0660%" y="853" width="4.1204%" height="15" fill="rgb(239,87,6)" fg:x="1421" fg:w="78"/><text x="75.3160%" y="863.50">mael..</text></g><g><title>maelstrom-txn`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.05%)</title><rect x="79.1337%" y="837" width="0.0528%" height="15" fill="rgb(227,62,0)" fg:x="1498" fg:w="1"/><text x="79.3837%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`write (43 samples, 2.27%)</title><rect x="79.3450%" y="821" width="2.2715%" height="15" fill="rgb(211,226,4)" fg:x="1502" fg:w="43"/><text x="79.5950%" y="831.50">l..</text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::entry (125 samples, 6.60%)</title><rect x="75.0660%" y="885" width="6.6033%" height="15" fill="rgb(253,38,52)" fg:x="1421" fg:w="125"/><text x="75.3160%" y="895.50">maelstrom..</text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::key (125 samples, 6.60%)</title><rect x="75.0660%" y="869" width="6.6033%" height="15" fill="rgb(229,126,40)" fg:x="1421" fg:w="125"/><text x="75.3160%" y="879.50">maelstrom..</text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (47 samples, 2.48%)</title><rect x="79.1865%" y="853" width="2.4828%" height="15" fill="rgb(229,165,44)" fg:x="1499" fg:w="47"/><text x="79.4365%" y="863.50">ma..</text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (45 samples, 2.38%)</title><rect x="79.2921%" y="837" width="2.3772%" height="15" fill="rgb(247,95,47)" fg:x="1501" fg:w="45"/><text x="79.5421%" y="847.50">ma..</text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (1 samples, 0.05%)</title><rect x="81.6165%" y="821" width="0.0528%" height="15" fill="rgb(216,140,30)" fg:x="1545" fg:w="1"/><text x="81.8665%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (43 samples, 2.27%)</title><rect x="81.9334%" y="821" width="2.2715%" height="15" fill="rgb(246,214,8)" fg:x="1551" fg:w="43"/><text x="82.1834%" y="831.50">m..</text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (37 samples, 1.95%)</title><rect x="82.2504%" y="805" width="1.9546%" height="15" fill="rgb(227,224,15)" fg:x="1557" fg:w="37"/><text x="82.5004%" y="815.50">m..</text></g><g><title>libsystem_kernel.dylib`write (37 samples, 1.95%)</title><rect x="82.2504%" y="789" width="1.9546%" height="15" fill="rgb(233,175,4)" fg:x="1557" fg:w="37"/><text x="82.5004%" y="799.50">l..</text></g><g><title>maelstrom-txn`&lt;str as core::fmt::Debug&gt;::fmt (112 samples, 5.92%)</title><rect x="81.7750%" y="837" width="5.9165%" height="15" fill="rgb(221,66,45)" fg:x="1548" fg:w="112"/><text x="82.0250%" y="847.50">maelstro..</text></g><g><title>maelstrom-txn`core::fmt::Write::write_char (66 samples, 3.49%)</title><rect x="84.2050%" y="821" width="3.4865%" height="15" fill="rgb(221,178,18)" fg:x="1594" fg:w="66"/><text x="84.4550%" y="831.50">mae..</text></g><g><title>libsystem_kernel.dylib`write (65 samples, 3.43%)</title><rect x="84.2578%" y="805" width="3.4337%" height="15" fill="rgb(213,81,29)" fg:x="1595" fg:w="65"/><text x="84.5078%" y="815.50">lib..</text></g><g><title>maelstrom-txn`&lt;&amp;T as core::fmt::Debug&gt;::fmt (114 samples, 6.02%)</title><rect x="81.7750%" y="869" width="6.0222%" height="15" fill="rgb(220,89,49)" fg:x="1548" fg:w="114"/><text x="82.0250%" y="879.50">maelstro..</text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::fmt::Debug&gt;::fmt (114 samples, 6.02%)</title><rect x="81.7750%" y="853" width="6.0222%" height="15" fill="rgb(227,60,33)" fg:x="1548" fg:w="114"/><text x="82.0250%" y="863.50">maelstro..</text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (2 samples, 0.11%)</title><rect x="87.6915%" y="837" width="0.1057%" height="15" fill="rgb(205,113,12)" fg:x="1660" fg:w="2"/><text x="87.9415%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`write (26 samples, 1.37%)</title><rect x="88.0085%" y="837" width="1.3735%" height="15" fill="rgb(211,32,1)" fg:x="1666" fg:w="26"/><text x="88.2585%" y="847.50"></text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::entries (275 samples, 14.53%)</title><rect x="74.9604%" y="901" width="14.5272%" height="15" fill="rgb(246,2,12)" fg:x="1419" fg:w="275"/><text x="75.2104%" y="911.50">maelstrom-txn`core::fm..</text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::value (148 samples, 7.82%)</title><rect x="81.6693%" y="885" width="7.8183%" height="15" fill="rgb(243,37,27)" fg:x="1546" fg:w="148"/><text x="81.9193%" y="895.50">maelstrom-t..</text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (32 samples, 1.69%)</title><rect x="87.7971%" y="869" width="1.6904%" height="15" fill="rgb(248,211,31)" fg:x="1662" fg:w="32"/><text x="88.0471%" y="879.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (28 samples, 1.48%)</title><rect x="88.0085%" y="853" width="1.4791%" height="15" fill="rgb(242,146,47)" fg:x="1666" fg:w="28"/><text x="88.2585%" y="863.50"></text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (2 samples, 0.11%)</title><rect x="89.3819%" y="837" width="0.1057%" height="15" fill="rgb(206,70,20)" fg:x="1692" fg:w="2"/><text x="89.6319%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::fmt::Debug&gt;::fmt (277 samples, 14.63%)</title><rect x="74.9076%" y="917" width="14.6329%" height="15" fill="rgb(215,10,51)" fg:x="1418" fg:w="277"/><text x="75.1576%" y="927.50">maelstrom-txn`&lt;std::co..</text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::finish (1 samples, 0.05%)</title><rect x="89.4876%" y="901" width="0.0528%" height="15" fill="rgb(243,178,53)" fg:x="1694" fg:w="1"/><text x="89.7376%" y="911.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="89.4876%" y="885" width="0.0528%" height="15" fill="rgb(233,221,20)" fg:x="1694" fg:w="1"/><text x="89.7376%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.05%)</title><rect x="89.4876%" y="869" width="0.0528%" height="15" fill="rgb(218,95,35)" fg:x="1694" fg:w="1"/><text x="89.7376%" y="879.50"></text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Root::save (750 samples, 39.62%)</title><rect x="50.1849%" y="981" width="39.6197%" height="15" fill="rgb(229,13,5)" fg:x="950" fg:w="750"/><text x="50.4349%" y="991.50">maelstrom-txn`maelstrom_node::transactor2::Root::save</text></g><g><title>maelstrom-txn`std::io::stdio::_eprint (289 samples, 15.27%)</title><rect x="74.5378%" y="965" width="15.2668%" height="15" fill="rgb(252,164,30)" fg:x="1411" fg:w="289"/><text x="74.7878%" y="975.50">maelstrom-txn`std::io::..</text></g><g><title>maelstrom-txn`&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (289 samples, 15.27%)</title><rect x="74.5378%" y="949" width="15.2668%" height="15" fill="rgb(232,68,36)" fg:x="1411" fg:w="289"/><text x="74.7878%" y="959.50">maelstrom-txn`&lt;&amp;std::io..</text></g><g><title>maelstrom-txn`core::fmt::write (289 samples, 15.27%)</title><rect x="74.5378%" y="933" width="15.2668%" height="15" fill="rgb(219,59,54)" fg:x="1411" fg:w="289"/><text x="74.7878%" y="943.50">maelstrom-txn`core::fmt..</text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (5 samples, 0.26%)</title><rect x="89.5404%" y="917" width="0.2641%" height="15" fill="rgb(250,92,33)" fg:x="1695" fg:w="5"/><text x="89.7904%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`write (5 samples, 0.26%)</title><rect x="89.5404%" y="901" width="0.2641%" height="15" fill="rgb(229,162,54)" fg:x="1695" fg:w="5"/><text x="89.7904%" y="911.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.05%)</title><rect x="89.8045%" y="949" width="0.0528%" height="15" fill="rgb(244,114,52)" fg:x="1700" fg:w="1"/><text x="90.0545%" y="959.50"></text></g><g><title>maelstrom-txn`core::fmt::Formatter::debug_map (2 samples, 0.11%)</title><rect x="89.8574%" y="917" width="0.1057%" height="15" fill="rgb(212,211,43)" fg:x="1701" fg:w="2"/><text x="90.1074%" y="927.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="89.9102%" y="901" width="0.0528%" height="15" fill="rgb(226,147,8)" fg:x="1702" fg:w="1"/><text x="90.1602%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.05%)</title><rect x="89.9102%" y="885" width="0.0528%" height="15" fill="rgb(226,23,13)" fg:x="1702" fg:w="1"/><text x="90.1602%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;&amp;T as core::fmt::Debug&gt;::fmt (11 samples, 0.58%)</title><rect x="89.9630%" y="869" width="0.5811%" height="15" fill="rgb(240,63,4)" fg:x="1703" fg:w="11"/><text x="90.2130%" y="879.50"></text></g><g><title>maelstrom-txn`core::fmt::num::_&lt;impl core::fmt::Debug for usize&gt;::fmt (11 samples, 0.58%)</title><rect x="89.9630%" y="853" width="0.5811%" height="15" fill="rgb(221,1,32)" fg:x="1703" fg:w="11"/><text x="90.2130%" y="863.50"></text></g><g><title>maelstrom-txn`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (11 samples, 0.58%)</title><rect x="89.9630%" y="837" width="0.5811%" height="15" fill="rgb(242,117,10)" fg:x="1703" fg:w="11"/><text x="90.2130%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (11 samples, 0.58%)</title><rect x="89.9630%" y="821" width="0.5811%" height="15" fill="rgb(249,172,44)" fg:x="1703" fg:w="11"/><text x="90.2130%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (10 samples, 0.53%)</title><rect x="90.0158%" y="805" width="0.5283%" height="15" fill="rgb(244,46,45)" fg:x="1704" fg:w="10"/><text x="90.2658%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`write (10 samples, 0.53%)</title><rect x="90.0158%" y="789" width="0.5283%" height="15" fill="rgb(206,43,17)" fg:x="1704" fg:w="10"/><text x="90.2658%" y="799.50"></text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::entry (16 samples, 0.85%)</title><rect x="89.9630%" y="901" width="0.8452%" height="15" fill="rgb(239,218,39)" fg:x="1703" fg:w="16"/><text x="90.2130%" y="911.50"></text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::key (16 samples, 0.85%)</title><rect x="89.9630%" y="885" width="0.8452%" height="15" fill="rgb(208,169,54)" fg:x="1703" fg:w="16"/><text x="90.2130%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (5 samples, 0.26%)</title><rect x="90.5441%" y="869" width="0.2641%" height="15" fill="rgb(247,25,42)" fg:x="1714" fg:w="5"/><text x="90.7941%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`write (5 samples, 0.26%)</title><rect x="90.5441%" y="853" width="0.2641%" height="15" fill="rgb(226,23,31)" fg:x="1714" fg:w="5"/><text x="90.7941%" y="863.50"></text></g><g><title>maelstrom-txn`core::fmt::Formatter::debug_list (4 samples, 0.21%)</title><rect x="90.8082%" y="837" width="0.2113%" height="15" fill="rgb(247,16,28)" fg:x="1719" fg:w="4"/><text x="91.0582%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (4 samples, 0.21%)</title><rect x="90.8082%" y="821" width="0.2113%" height="15" fill="rgb(231,147,38)" fg:x="1719" fg:w="4"/><text x="91.0582%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.11%)</title><rect x="90.9139%" y="805" width="0.1057%" height="15" fill="rgb(253,81,48)" fg:x="1721" fg:w="2"/><text x="91.1639%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`write (2 samples, 0.11%)</title><rect x="90.9139%" y="789" width="0.1057%" height="15" fill="rgb(249,222,43)" fg:x="1721" fg:w="2"/><text x="91.1639%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`write (70 samples, 3.70%)</title><rect x="91.5478%" y="709" width="3.6978%" height="15" fill="rgb(221,3,27)" fg:x="1733" fg:w="70"/><text x="91.7978%" y="719.50">libs..</text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (79 samples, 4.17%)</title><rect x="91.1780%" y="757" width="4.1733%" height="15" fill="rgb(228,180,5)" fg:x="1726" fg:w="79"/><text x="91.4280%" y="767.50">maels..</text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (79 samples, 4.17%)</title><rect x="91.1780%" y="741" width="4.1733%" height="15" fill="rgb(227,131,42)" fg:x="1726" fg:w="79"/><text x="91.4280%" y="751.50">maels..</text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (73 samples, 3.86%)</title><rect x="91.4950%" y="725" width="3.8563%" height="15" fill="rgb(212,3,39)" fg:x="1732" fg:w="73"/><text x="91.7450%" y="735.50">mael..</text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (2 samples, 0.11%)</title><rect x="95.2456%" y="709" width="0.1057%" height="15" fill="rgb(226,45,5)" fg:x="1803" fg:w="2"/><text x="95.4956%" y="719.50"></text></g><g><title>maelstrom-txn`core::fmt::num::_&lt;impl core::fmt::Debug for usize&gt;::fmt (81 samples, 4.28%)</title><rect x="91.1252%" y="789" width="4.2789%" height="15" fill="rgb(215,167,45)" fg:x="1725" fg:w="81"/><text x="91.3752%" y="799.50">maels..</text></g><g><title>maelstrom-txn`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (81 samples, 4.28%)</title><rect x="91.1252%" y="773" width="4.2789%" height="15" fill="rgb(250,218,53)" fg:x="1725" fg:w="81"/><text x="91.3752%" y="783.50">maels..</text></g><g><title>maelstrom-txn`core::fmt::Formatter::pad_integral (1 samples, 0.05%)</title><rect x="95.3513%" y="757" width="0.0528%" height="15" fill="rgb(207,140,0)" fg:x="1805" fg:w="1"/><text x="95.6013%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;&amp;T as core::fmt::Debug&gt;::fmt (82 samples, 4.33%)</title><rect x="91.1252%" y="805" width="4.3317%" height="15" fill="rgb(238,133,51)" fg:x="1725" fg:w="82"/><text x="91.3752%" y="815.50">maels..</text></g><g><title>maelstrom-txn`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.05%)</title><rect x="95.4041%" y="789" width="0.0528%" height="15" fill="rgb(218,203,53)" fg:x="1806" fg:w="1"/><text x="95.6541%" y="799.50"></text></g><g><title>maelstrom-txn`core::fmt::builders::DebugList::entries (105 samples, 5.55%)</title><rect x="91.0195%" y="837" width="5.5468%" height="15" fill="rgb(226,184,25)" fg:x="1723" fg:w="105"/><text x="91.2695%" y="847.50">maelstr..</text></g><g><title>maelstrom-txn`core::fmt::builders::DebugSet::entry (105 samples, 5.55%)</title><rect x="91.0195%" y="821" width="5.5468%" height="15" fill="rgb(231,121,21)" fg:x="1723" fg:w="105"/><text x="91.2695%" y="831.50">maelstr..</text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (21 samples, 1.11%)</title><rect x="95.4569%" y="805" width="1.1094%" height="15" fill="rgb(251,14,34)" fg:x="1807" fg:w="21"/><text x="95.7069%" y="815.50"></text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (17 samples, 0.90%)</title><rect x="95.6683%" y="789" width="0.8980%" height="15" fill="rgb(249,193,11)" fg:x="1811" fg:w="17"/><text x="95.9183%" y="799.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (17 samples, 0.90%)</title><rect x="95.6683%" y="773" width="0.8980%" height="15" fill="rgb(220,172,37)" fg:x="1811" fg:w="17"/><text x="95.9183%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`write (16 samples, 0.85%)</title><rect x="95.7211%" y="757" width="0.8452%" height="15" fill="rgb(231,229,43)" fg:x="1812" fg:w="16"/><text x="95.9711%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;&amp;T as core::fmt::Debug&gt;::fmt (115 samples, 6.08%)</title><rect x="90.8082%" y="885" width="6.0750%" height="15" fill="rgb(250,161,5)" fg:x="1719" fg:w="115"/><text x="91.0582%" y="895.50">maelstro..</text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as core::fmt::Debug&gt;::fmt (115 samples, 6.08%)</title><rect x="90.8082%" y="869" width="6.0750%" height="15" fill="rgb(218,225,18)" fg:x="1719" fg:w="115"/><text x="91.0582%" y="879.50">maelstro..</text></g><g><title>maelstrom-txn`&lt;[T] as core::fmt::Debug&gt;::fmt (115 samples, 6.08%)</title><rect x="90.8082%" y="853" width="6.0750%" height="15" fill="rgb(245,45,42)" fg:x="1719" fg:w="115"/><text x="91.0582%" y="863.50">maelstro..</text></g><g><title>maelstrom-txn`core::fmt::builders::DebugList::finish (6 samples, 0.32%)</title><rect x="96.5663%" y="837" width="0.3170%" height="15" fill="rgb(211,115,1)" fg:x="1828" fg:w="6"/><text x="96.8163%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (6 samples, 0.32%)</title><rect x="96.5663%" y="821" width="0.3170%" height="15" fill="rgb(248,133,52)" fg:x="1828" fg:w="6"/><text x="96.8163%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (6 samples, 0.32%)</title><rect x="96.5663%" y="805" width="0.3170%" height="15" fill="rgb(238,100,21)" fg:x="1828" fg:w="6"/><text x="96.8163%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`write (6 samples, 0.32%)</title><rect x="96.5663%" y="789" width="0.3170%" height="15" fill="rgb(247,144,11)" fg:x="1828" fg:w="6"/><text x="96.8163%" y="799.50"></text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::entries (132 samples, 6.97%)</title><rect x="89.9630%" y="917" width="6.9731%" height="15" fill="rgb(206,164,16)" fg:x="1703" fg:w="132"/><text x="90.2130%" y="927.50">maelstrom..</text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::value (116 samples, 6.13%)</title><rect x="90.8082%" y="901" width="6.1278%" height="15" fill="rgb(222,34,3)" fg:x="1719" fg:w="116"/><text x="91.0582%" y="911.50">maelstro..</text></g><g><title>maelstrom-txn`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="96.8833%" y="885" width="0.0528%" height="15" fill="rgb(248,82,4)" fg:x="1834" fg:w="1"/><text x="97.1333%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="96.8833%" y="869" width="0.0528%" height="15" fill="rgb(228,81,46)" fg:x="1834" fg:w="1"/><text x="97.1333%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.05%)</title><rect x="96.8833%" y="853" width="0.0528%" height="15" fill="rgb(227,67,47)" fg:x="1834" fg:w="1"/><text x="97.1333%" y="863.50"></text></g><g><title>maelstrom-txn`core::fmt::builders::DebugMap::entry (1 samples, 0.05%)</title><rect x="96.9361%" y="917" width="0.0528%" height="15" fill="rgb(215,93,53)" fg:x="1835" fg:w="1"/><text x="97.1861%" y="927.50"></text></g><g><title>maelstrom-txn`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::fmt::Debug&gt;::fmt (136 samples, 7.18%)</title><rect x="89.8574%" y="933" width="7.1844%" height="15" fill="rgb(248,194,39)" fg:x="1701" fg:w="136"/><text x="90.1074%" y="943.50">maelstrom-..</text></g><g><title>maelstrom-txn`hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1 samples, 0.05%)</title><rect x="96.9889%" y="917" width="0.0528%" height="15" fill="rgb(215,5,19)" fg:x="1836" fg:w="1"/><text x="97.2389%" y="927.50"></text></g><g><title>maelstrom-txn`hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.05%)</title><rect x="96.9889%" y="901" width="0.0528%" height="15" fill="rgb(226,215,51)" fg:x="1836" fg:w="1"/><text x="97.2389%" y="911.50"></text></g><g><title>maelstrom-txn`core::fmt::Formatter::debug_set (1 samples, 0.05%)</title><rect x="97.0417%" y="917" width="0.0528%" height="15" fill="rgb(225,56,26)" fg:x="1837" fg:w="1"/><text x="97.2917%" y="927.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="97.0417%" y="901" width="0.0528%" height="15" fill="rgb(222,75,29)" fg:x="1837" fg:w="1"/><text x="97.2917%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.05%)</title><rect x="97.0417%" y="885" width="0.0528%" height="15" fill="rgb(236,139,6)" fg:x="1837" fg:w="1"/><text x="97.2917%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::fmt::Debug&gt;::fmt (2 samples, 0.11%)</title><rect x="97.0417%" y="933" width="0.1057%" height="15" fill="rgb(223,137,36)" fg:x="1837" fg:w="2"/><text x="97.2917%" y="943.50"></text></g><g><title>maelstrom-txn`core::fmt::builders::DebugSet::entries (1 samples, 0.05%)</title><rect x="97.0946%" y="917" width="0.0528%" height="15" fill="rgb(226,99,2)" fg:x="1838" fg:w="1"/><text x="97.3446%" y="927.50"></text></g><g><title>maelstrom-txn`core::fmt::builders::DebugSet::entry (1 samples, 0.05%)</title><rect x="97.0946%" y="901" width="0.0528%" height="15" fill="rgb(206,133,23)" fg:x="1838" fg:w="1"/><text x="97.3446%" y="911.50"></text></g><g><title>maelstrom-txn`&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.05%)</title><rect x="97.0946%" y="885" width="0.0528%" height="15" fill="rgb(243,173,15)" fg:x="1838" fg:w="1"/><text x="97.3446%" y="895.50"></text></g><g><title>maelstrom-txn`core::fmt::num::_&lt;impl core::fmt::Debug for usize&gt;::fmt (1 samples, 0.05%)</title><rect x="97.0946%" y="869" width="0.0528%" height="15" fill="rgb(228,69,28)" fg:x="1838" fg:w="1"/><text x="97.3446%" y="879.50"></text></g><g><title>maelstrom-txn`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.05%)</title><rect x="97.0946%" y="853" width="0.0528%" height="15" fill="rgb(212,51,22)" fg:x="1838" fg:w="1"/><text x="97.3446%" y="863.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="97.0946%" y="837" width="0.0528%" height="15" fill="rgb(227,113,0)" fg:x="1838" fg:w="1"/><text x="97.3446%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.05%)</title><rect x="97.0946%" y="821" width="0.0528%" height="15" fill="rgb(252,84,27)" fg:x="1838" fg:w="1"/><text x="97.3446%" y="831.50"></text></g><g><title>maelstrom-txn`maelstrom_node::node::Node::handle_message (1,841 samples, 97.25%)</title><rect x="0.2641%" y="1029" width="97.2530%" height="15" fill="rgb(223,145,39)" fg:x="5" fg:w="1841"/><text x="0.5141%" y="1039.50">maelstrom-txn`maelstrom_node::node::Node::handle_message</text></g><g><title>maelstrom-txn`&lt;maelstrom_node::message_handlers::TxnHandler as maelstrom_node::message_handlers::MessageHandler&gt;::handle (1,840 samples, 97.20%)</title><rect x="0.3170%" y="1013" width="97.2002%" height="15" fill="rgb(239,219,30)" fg:x="6" fg:w="1840"/><text x="0.5670%" y="1023.50">maelstrom-txn`&lt;maelstrom_node::message_handlers::TxnHandler as maelstrom_node::message_handlers::MessageHandler&gt;::handle</text></g><g><title>maelstrom-txn`maelstrom_node::transactor2::Transactor::transact (1,840 samples, 97.20%)</title><rect x="0.3170%" y="997" width="97.2002%" height="15" fill="rgb(224,196,39)" fg:x="6" fg:w="1840"/><text x="0.5670%" y="1007.50">maelstrom-txn`maelstrom_node::transactor2::Transactor::transact</text></g><g><title>maelstrom-txn`std::io::stdio::_eprint (146 samples, 7.71%)</title><rect x="89.8045%" y="981" width="7.7126%" height="15" fill="rgb(205,35,43)" fg:x="1700" fg:w="146"/><text x="90.0545%" y="991.50">maelstrom-t..</text></g><g><title>maelstrom-txn`&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (146 samples, 7.71%)</title><rect x="89.8045%" y="965" width="7.7126%" height="15" fill="rgb(228,201,21)" fg:x="1700" fg:w="146"/><text x="90.0545%" y="975.50">maelstrom-t..</text></g><g><title>maelstrom-txn`core::fmt::write (145 samples, 7.66%)</title><rect x="89.8574%" y="949" width="7.6598%" height="15" fill="rgb(237,118,16)" fg:x="1701" fg:w="145"/><text x="90.1074%" y="959.50">maelstrom-..</text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (7 samples, 0.37%)</title><rect x="97.1474%" y="933" width="0.3698%" height="15" fill="rgb(241,17,19)" fg:x="1839" fg:w="7"/><text x="97.3974%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`write (7 samples, 0.37%)</title><rect x="97.1474%" y="917" width="0.3698%" height="15" fill="rgb(214,10,25)" fg:x="1839" fg:w="7"/><text x="97.3974%" y="927.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.05%)</title><rect x="97.5172%" y="1013" width="0.0528%" height="15" fill="rgb(238,37,29)" fg:x="1846" fg:w="1"/><text x="97.7672%" y="1023.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="97.5172%" y="997" width="0.0528%" height="15" fill="rgb(253,83,25)" fg:x="1846" fg:w="1"/><text x="97.7672%" y="1007.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="97.5172%" y="981" width="0.0528%" height="15" fill="rgb(234,192,12)" fg:x="1846" fg:w="1"/><text x="97.7672%" y="991.50"></text></g><g><title>maelstrom-txn`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="97.5172%" y="965" width="0.0528%" height="15" fill="rgb(241,216,45)" fg:x="1846" fg:w="1"/><text x="97.7672%" y="975.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1 samples, 0.05%)</title><rect x="97.5172%" y="949" width="0.0528%" height="15" fill="rgb(242,22,33)" fg:x="1846" fg:w="1"/><text x="97.7672%" y="959.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.11%)</title><rect x="97.5700%" y="981" width="0.1057%" height="15" fill="rgb(231,105,49)" fg:x="1847" fg:w="2"/><text x="97.8200%" y="991.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2 samples, 0.11%)</title><rect x="97.5700%" y="965" width="0.1057%" height="15" fill="rgb(218,204,15)" fg:x="1847" fg:w="2"/><text x="97.8200%" y="975.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2 samples, 0.11%)</title><rect x="97.5700%" y="949" width="0.1057%" height="15" fill="rgb(235,138,41)" fg:x="1847" fg:w="2"/><text x="97.8200%" y="959.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.11%)</title><rect x="97.5700%" y="933" width="0.1057%" height="15" fill="rgb(246,0,9)" fg:x="1847" fg:w="2"/><text x="97.8200%" y="943.50"></text></g><g><title>maelstrom-txn`alloc::alloc::Global::alloc_impl (2 samples, 0.11%)</title><rect x="97.5700%" y="917" width="0.1057%" height="15" fill="rgb(210,74,4)" fg:x="1847" fg:w="2"/><text x="97.8200%" y="927.50"></text></g><g><title>maelstrom-txn`alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="97.6228%" y="901" width="0.0528%" height="15" fill="rgb(250,60,41)" fg:x="1848" fg:w="1"/><text x="97.8728%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.05%)</title><rect x="97.6228%" y="885" width="0.0528%" height="15" fill="rgb(220,115,12)" fg:x="1848" fg:w="1"/><text x="97.8728%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.05%)</title><rect x="97.6756%" y="949" width="0.0528%" height="15" fill="rgb(237,100,13)" fg:x="1849" fg:w="1"/><text x="97.9256%" y="959.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.05%)</title><rect x="97.6756%" y="933" width="0.0528%" height="15" fill="rgb(213,55,26)" fg:x="1849" fg:w="1"/><text x="97.9256%" y="943.50"></text></g><g><title>maelstrom-txn`&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.05%)</title><rect x="97.6756%" y="917" width="0.0528%" height="15" fill="rgb(216,17,4)" fg:x="1849" fg:w="1"/><text x="97.9256%" y="927.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.11%)</title><rect x="97.7285%" y="917" width="0.1057%" height="15" fill="rgb(220,153,47)" fg:x="1850" fg:w="2"/><text x="97.9785%" y="927.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (2 samples, 0.11%)</title><rect x="97.7285%" y="901" width="0.1057%" height="15" fill="rgb(215,131,9)" fg:x="1850" fg:w="2"/><text x="97.9785%" y="911.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.11%)</title><rect x="97.7285%" y="885" width="0.1057%" height="15" fill="rgb(233,46,42)" fg:x="1850" fg:w="2"/><text x="97.9785%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.11%)</title><rect x="97.7285%" y="869" width="0.1057%" height="15" fill="rgb(226,86,7)" fg:x="1850" fg:w="2"/><text x="97.9785%" y="879.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (2 samples, 0.11%)</title><rect x="97.7285%" y="853" width="0.1057%" height="15" fill="rgb(239,226,21)" fg:x="1850" fg:w="2"/><text x="97.9785%" y="863.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (2 samples, 0.11%)</title><rect x="97.7285%" y="837" width="0.1057%" height="15" fill="rgb(244,137,22)" fg:x="1850" fg:w="2"/><text x="97.9785%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="97.7813%" y="821" width="0.0528%" height="15" fill="rgb(211,139,35)" fg:x="1851" fg:w="1"/><text x="98.0313%" y="831.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_string (1 samples, 0.05%)</title><rect x="97.8341%" y="789" width="0.0528%" height="15" fill="rgb(214,62,50)" fg:x="1852" fg:w="1"/><text x="98.0841%" y="799.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="97.8341%" y="773" width="0.0528%" height="15" fill="rgb(212,113,44)" fg:x="1852" fg:w="1"/><text x="98.0841%" y="783.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="97.8341%" y="757" width="0.0528%" height="15" fill="rgb(226,150,43)" fg:x="1852" fg:w="1"/><text x="98.0841%" y="767.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="97.8341%" y="741" width="0.0528%" height="15" fill="rgb(250,71,37)" fg:x="1852" fg:w="1"/><text x="98.0841%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="97.8341%" y="725" width="0.0528%" height="15" fill="rgb(219,76,19)" fg:x="1852" fg:w="1"/><text x="98.0841%" y="735.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="97.8341%" y="709" width="0.0528%" height="15" fill="rgb(250,39,11)" fg:x="1852" fg:w="1"/><text x="98.0841%" y="719.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.05%)</title><rect x="97.8341%" y="693" width="0.0528%" height="15" fill="rgb(230,64,31)" fg:x="1852" fg:w="1"/><text x="98.0841%" y="703.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::end_string (1 samples, 0.05%)</title><rect x="97.8870%" y="789" width="0.0528%" height="15" fill="rgb(208,222,23)" fg:x="1853" fg:w="1"/><text x="98.1370%" y="799.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="97.8870%" y="773" width="0.0528%" height="15" fill="rgb(227,125,18)" fg:x="1853" fg:w="1"/><text x="98.1370%" y="783.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="97.8870%" y="757" width="0.0528%" height="15" fill="rgb(234,210,9)" fg:x="1853" fg:w="1"/><text x="98.1370%" y="767.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="97.8870%" y="741" width="0.0528%" height="15" fill="rgb(217,127,24)" fg:x="1853" fg:w="1"/><text x="98.1370%" y="751.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (3 samples, 0.16%)</title><rect x="97.8341%" y="885" width="0.1585%" height="15" fill="rgb(239,141,48)" fg:x="1852" fg:w="3"/><text x="98.0841%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (3 samples, 0.16%)</title><rect x="97.8341%" y="869" width="0.1585%" height="15" fill="rgb(227,109,8)" fg:x="1852" fg:w="3"/><text x="98.0841%" y="879.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (3 samples, 0.16%)</title><rect x="97.8341%" y="853" width="0.1585%" height="15" fill="rgb(235,184,23)" fg:x="1852" fg:w="3"/><text x="98.0841%" y="863.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (3 samples, 0.16%)</title><rect x="97.8341%" y="837" width="0.1585%" height="15" fill="rgb(227,226,48)" fg:x="1852" fg:w="3"/><text x="98.0841%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (3 samples, 0.16%)</title><rect x="97.8341%" y="821" width="0.1585%" height="15" fill="rgb(206,150,11)" fg:x="1852" fg:w="3"/><text x="98.0841%" y="831.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (3 samples, 0.16%)</title><rect x="97.8341%" y="805" width="0.1585%" height="15" fill="rgb(254,2,33)" fg:x="1852" fg:w="3"/><text x="98.0841%" y="815.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (1 samples, 0.05%)</title><rect x="97.9398%" y="789" width="0.0528%" height="15" fill="rgb(243,160,20)" fg:x="1854" fg:w="1"/><text x="98.1898%" y="799.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="97.9398%" y="773" width="0.0528%" height="15" fill="rgb(218,208,30)" fg:x="1854" fg:w="1"/><text x="98.1898%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="97.9398%" y="757" width="0.0528%" height="15" fill="rgb(224,120,49)" fg:x="1854" fg:w="1"/><text x="98.1898%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.05%)</title><rect x="98.0454%" y="789" width="0.0528%" height="15" fill="rgb(246,12,2)" fg:x="1856" fg:w="1"/><text x="98.2954%" y="799.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.05%)</title><rect x="98.0454%" y="773" width="0.0528%" height="15" fill="rgb(236,117,3)" fg:x="1856" fg:w="1"/><text x="98.2954%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.05%)</title><rect x="98.0454%" y="757" width="0.0528%" height="15" fill="rgb(216,128,52)" fg:x="1856" fg:w="1"/><text x="98.2954%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.05%)</title><rect x="98.0454%" y="741" width="0.0528%" height="15" fill="rgb(246,145,19)" fg:x="1856" fg:w="1"/><text x="98.2954%" y="751.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (1 samples, 0.05%)</title><rect x="98.0454%" y="725" width="0.0528%" height="15" fill="rgb(222,11,46)" fg:x="1856" fg:w="1"/><text x="98.2954%" y="735.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::begin_string (1 samples, 0.05%)</title><rect x="98.0454%" y="709" width="0.0528%" height="15" fill="rgb(245,82,36)" fg:x="1856" fg:w="1"/><text x="98.2954%" y="719.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="98.0454%" y="693" width="0.0528%" height="15" fill="rgb(250,73,51)" fg:x="1856" fg:w="1"/><text x="98.2954%" y="703.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="98.0454%" y="677" width="0.0528%" height="15" fill="rgb(221,189,23)" fg:x="1856" fg:w="1"/><text x="98.2954%" y="687.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="98.0454%" y="661" width="0.0528%" height="15" fill="rgb(210,33,7)" fg:x="1856" fg:w="1"/><text x="98.2954%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="98.0454%" y="645" width="0.0528%" height="15" fill="rgb(210,107,22)" fg:x="1856" fg:w="1"/><text x="98.2954%" y="655.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="98.0454%" y="629" width="0.0528%" height="15" fill="rgb(222,116,37)" fg:x="1856" fg:w="1"/><text x="98.2954%" y="639.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.05%)</title><rect x="98.0454%" y="613" width="0.0528%" height="15" fill="rgb(254,17,48)" fg:x="1856" fg:w="1"/><text x="98.2954%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeTupleStruct&gt;::end (1 samples, 0.05%)</title><rect x="98.0983%" y="629" width="0.0528%" height="15" fill="rgb(224,36,32)" fg:x="1857" fg:w="1"/><text x="98.3483%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::end (1 samples, 0.05%)</title><rect x="98.0983%" y="613" width="0.0528%" height="15" fill="rgb(232,90,46)" fg:x="1857" fg:w="1"/><text x="98.3483%" y="623.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::end_array (1 samples, 0.05%)</title><rect x="98.0983%" y="597" width="0.0528%" height="15" fill="rgb(241,66,40)" fg:x="1857" fg:w="1"/><text x="98.3483%" y="607.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="98.0983%" y="581" width="0.0528%" height="15" fill="rgb(249,184,29)" fg:x="1857" fg:w="1"/><text x="98.3483%" y="591.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="98.0983%" y="565" width="0.0528%" height="15" fill="rgb(231,181,1)" fg:x="1857" fg:w="1"/><text x="98.3483%" y="575.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="98.0983%" y="549" width="0.0528%" height="15" fill="rgb(224,94,2)" fg:x="1857" fg:w="1"/><text x="98.3483%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="98.0983%" y="533" width="0.0528%" height="15" fill="rgb(229,170,15)" fg:x="1857" fg:w="1"/><text x="98.3483%" y="543.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="98.0983%" y="517" width="0.0528%" height="15" fill="rgb(240,127,35)" fg:x="1857" fg:w="1"/><text x="98.3483%" y="527.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.05%)</title><rect x="98.0983%" y="501" width="0.0528%" height="15" fill="rgb(248,196,34)" fg:x="1857" fg:w="1"/><text x="98.3483%" y="511.50"></text></g><g><title>maelstrom-txn`itoa::Buffer::format (1 samples, 0.05%)</title><rect x="98.1511%" y="373" width="0.0528%" height="15" fill="rgb(236,137,7)" fg:x="1858" fg:w="1"/><text x="98.4011%" y="383.50"></text></g><g><title>maelstrom-txn`itoa::_&lt;impl itoa::private::Sealed for u64&gt;::write (1 samples, 0.05%)</title><rect x="98.1511%" y="357" width="0.0528%" height="15" fill="rgb(235,127,16)" fg:x="1858" fg:w="1"/><text x="98.4011%" y="367.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::QueryValue&gt;::serialize (4 samples, 0.21%)</title><rect x="98.1511%" y="597" width="0.2113%" height="15" fill="rgb(250,192,54)" fg:x="1858" fg:w="4"/><text x="98.4011%" y="607.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for core::option::Option&lt;T&gt;&gt;::serialize (4 samples, 0.21%)</title><rect x="98.1511%" y="581" width="0.2113%" height="15" fill="rgb(218,98,20)" fg:x="1858" fg:w="4"/><text x="98.4011%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_some (4 samples, 0.21%)</title><rect x="98.1511%" y="565" width="0.2113%" height="15" fill="rgb(230,176,47)" fg:x="1858" fg:w="4"/><text x="98.4011%" y="575.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (4 samples, 0.21%)</title><rect x="98.1511%" y="549" width="0.2113%" height="15" fill="rgb(244,2,33)" fg:x="1858" fg:w="4"/><text x="98.4011%" y="559.50"></text></g><g><title>maelstrom-txn`serde::ser::Serializer::collect_seq (4 samples, 0.21%)</title><rect x="98.1511%" y="533" width="0.2113%" height="15" fill="rgb(231,100,17)" fg:x="1858" fg:w="4"/><text x="98.4011%" y="543.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::try_for_each (4 samples, 0.21%)</title><rect x="98.1511%" y="517" width="0.2113%" height="15" fill="rgb(245,23,12)" fg:x="1858" fg:w="4"/><text x="98.4011%" y="527.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.21%)</title><rect x="98.1511%" y="501" width="0.2113%" height="15" fill="rgb(249,55,22)" fg:x="1858" fg:w="4"/><text x="98.4011%" y="511.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (4 samples, 0.21%)</title><rect x="98.1511%" y="485" width="0.2113%" height="15" fill="rgb(207,134,9)" fg:x="1858" fg:w="4"/><text x="98.4011%" y="495.50"></text></g><g><title>maelstrom-txn`serde::ser::Serializer::collect_seq::_{{closure}} (4 samples, 0.21%)</title><rect x="98.1511%" y="469" width="0.2113%" height="15" fill="rgb(218,134,0)" fg:x="1858" fg:w="4"/><text x="98.4011%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (4 samples, 0.21%)</title><rect x="98.1511%" y="453" width="0.2113%" height="15" fill="rgb(213,212,33)" fg:x="1858" fg:w="4"/><text x="98.4011%" y="463.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.21%)</title><rect x="98.1511%" y="437" width="0.2113%" height="15" fill="rgb(252,106,18)" fg:x="1858" fg:w="4"/><text x="98.4011%" y="447.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for usize&gt;::serialize (4 samples, 0.21%)</title><rect x="98.1511%" y="421" width="0.2113%" height="15" fill="rgb(208,126,42)" fg:x="1858" fg:w="4"/><text x="98.4011%" y="431.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_u64 (4 samples, 0.21%)</title><rect x="98.1511%" y="405" width="0.2113%" height="15" fill="rgb(246,175,29)" fg:x="1858" fg:w="4"/><text x="98.4011%" y="415.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_u64 (4 samples, 0.21%)</title><rect x="98.1511%" y="389" width="0.2113%" height="15" fill="rgb(215,13,50)" fg:x="1858" fg:w="4"/><text x="98.4011%" y="399.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (3 samples, 0.16%)</title><rect x="98.2039%" y="373" width="0.1585%" height="15" fill="rgb(216,172,15)" fg:x="1859" fg:w="3"/><text x="98.4539%" y="383.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (3 samples, 0.16%)</title><rect x="98.2039%" y="357" width="0.1585%" height="15" fill="rgb(212,103,13)" fg:x="1859" fg:w="3"/><text x="98.4539%" y="367.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.11%)</title><rect x="98.2567%" y="341" width="0.1057%" height="15" fill="rgb(231,171,36)" fg:x="1860" fg:w="2"/><text x="98.5067%" y="351.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.11%)</title><rect x="98.2567%" y="325" width="0.1057%" height="15" fill="rgb(250,123,20)" fg:x="1860" fg:w="2"/><text x="98.5067%" y="335.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.11%)</title><rect x="98.2567%" y="309" width="0.1057%" height="15" fill="rgb(212,53,50)" fg:x="1860" fg:w="2"/><text x="98.5067%" y="319.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (2 samples, 0.11%)</title><rect x="98.2567%" y="293" width="0.1057%" height="15" fill="rgb(243,54,12)" fg:x="1860" fg:w="2"/><text x="98.5067%" y="303.50"></text></g><g><title>maelstrom-txn`core::ub_checks::is_nonoverlapping::runtime (1 samples, 0.05%)</title><rect x="98.3096%" y="277" width="0.0528%" height="15" fill="rgb(234,101,34)" fg:x="1861" fg:w="1"/><text x="98.5596%" y="287.50"></text></g><g><title>maelstrom-txn`serde::ser::Serializer::collect_seq (6 samples, 0.32%)</title><rect x="98.0983%" y="757" width="0.3170%" height="15" fill="rgb(254,67,22)" fg:x="1857" fg:w="6"/><text x="98.3483%" y="767.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::try_for_each (6 samples, 0.32%)</title><rect x="98.0983%" y="741" width="0.3170%" height="15" fill="rgb(250,35,47)" fg:x="1857" fg:w="6"/><text x="98.3483%" y="751.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.32%)</title><rect x="98.0983%" y="725" width="0.3170%" height="15" fill="rgb(226,126,38)" fg:x="1857" fg:w="6"/><text x="98.3483%" y="735.50"></text></g><g><title>maelstrom-txn`core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (6 samples, 0.32%)</title><rect x="98.0983%" y="709" width="0.3170%" height="15" fill="rgb(216,138,53)" fg:x="1857" fg:w="6"/><text x="98.3483%" y="719.50"></text></g><g><title>maelstrom-txn`serde::ser::Serializer::collect_seq::_{{closure}} (6 samples, 0.32%)</title><rect x="98.0983%" y="693" width="0.3170%" height="15" fill="rgb(246,199,43)" fg:x="1857" fg:w="6"/><text x="98.3483%" y="703.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (6 samples, 0.32%)</title><rect x="98.0983%" y="677" width="0.3170%" height="15" fill="rgb(232,125,11)" fg:x="1857" fg:w="6"/><text x="98.3483%" y="687.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.32%)</title><rect x="98.0983%" y="661" width="0.3170%" height="15" fill="rgb(218,219,45)" fg:x="1857" fg:w="6"/><text x="98.3483%" y="671.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::Query&gt;::serialize (6 samples, 0.32%)</title><rect x="98.0983%" y="645" width="0.3170%" height="15" fill="rgb(216,102,54)" fg:x="1857" fg:w="6"/><text x="98.3483%" y="655.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeTupleStruct&gt;::serialize_field (5 samples, 0.26%)</title><rect x="98.1511%" y="629" width="0.2641%" height="15" fill="rgb(250,228,7)" fg:x="1858" fg:w="5"/><text x="98.4011%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (5 samples, 0.26%)</title><rect x="98.1511%" y="613" width="0.2641%" height="15" fill="rgb(226,125,25)" fg:x="1858" fg:w="5"/><text x="98.4011%" y="623.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (1 samples, 0.05%)</title><rect x="98.3624%" y="597" width="0.0528%" height="15" fill="rgb(224,165,27)" fg:x="1862" fg:w="1"/><text x="98.6124%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.05%)</title><rect x="98.3624%" y="581" width="0.0528%" height="15" fill="rgb(233,86,3)" fg:x="1862" fg:w="1"/><text x="98.6124%" y="591.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (1 samples, 0.05%)</title><rect x="98.3624%" y="565" width="0.0528%" height="15" fill="rgb(228,116,20)" fg:x="1862" fg:w="1"/><text x="98.6124%" y="575.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (1 samples, 0.05%)</title><rect x="98.3624%" y="549" width="0.0528%" height="15" fill="rgb(209,192,17)" fg:x="1862" fg:w="1"/><text x="98.6124%" y="559.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::ser::FlatMapSerializeStruct&lt;M&gt; as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.42%)</title><rect x="98.0454%" y="821" width="0.4226%" height="15" fill="rgb(224,88,34)" fg:x="1856" fg:w="8"/><text x="98.2954%" y="831.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (8 samples, 0.42%)</title><rect x="98.0454%" y="805" width="0.4226%" height="15" fill="rgb(233,38,6)" fg:x="1856" fg:w="8"/><text x="98.2954%" y="815.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.37%)</title><rect x="98.0983%" y="789" width="0.3698%" height="15" fill="rgb(212,59,30)" fg:x="1857" fg:w="7"/><text x="98.3483%" y="799.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (7 samples, 0.37%)</title><rect x="98.0983%" y="773" width="0.3698%" height="15" fill="rgb(213,80,3)" fg:x="1857" fg:w="7"/><text x="98.3483%" y="783.50"></text></g><g><title>maelstrom-txn`serde::ser::iterator_len_hint (1 samples, 0.05%)</title><rect x="98.4152%" y="757" width="0.0528%" height="15" fill="rgb(251,178,7)" fg:x="1863" fg:w="1"/><text x="98.6652%" y="767.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::MessageBody&gt;::serialize (13 samples, 0.69%)</title><rect x="97.8341%" y="901" width="0.6867%" height="15" fill="rgb(213,154,26)" fg:x="1852" fg:w="13"/><text x="98.0841%" y="911.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.53%)</title><rect x="97.9926%" y="885" width="0.5283%" height="15" fill="rgb(238,165,49)" fg:x="1855" fg:w="10"/><text x="98.2426%" y="895.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::MessageExtra&gt;::serialize (10 samples, 0.53%)</title><rect x="97.9926%" y="869" width="0.5283%" height="15" fill="rgb(248,91,46)" fg:x="1855" fg:w="10"/><text x="98.2426%" y="879.50"></text></g><g><title>maelstrom-txn`serde::__private::ser::serialize_tagged_newtype (9 samples, 0.48%)</title><rect x="98.0454%" y="853" width="0.4754%" height="15" fill="rgb(244,21,52)" fg:x="1856" fg:w="9"/><text x="98.2954%" y="863.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::TxnResponseExtra&gt;::serialize (9 samples, 0.48%)</title><rect x="98.0454%" y="837" width="0.4754%" height="15" fill="rgb(247,122,20)" fg:x="1856" fg:w="9"/><text x="98.2954%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::ser::TaggedSerializer&lt;S&gt; as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.05%)</title><rect x="98.4680%" y="821" width="0.0528%" height="15" fill="rgb(218,27,9)" fg:x="1864" fg:w="1"/><text x="98.7180%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::ser::FlatMapSerializeStruct&lt;M&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.05%)</title><rect x="98.4680%" y="805" width="0.0528%" height="15" fill="rgb(246,7,6)" fg:x="1864" fg:w="1"/><text x="98.7180%" y="815.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (1 samples, 0.05%)</title><rect x="98.4680%" y="789" width="0.0528%" height="15" fill="rgb(227,135,54)" fg:x="1864" fg:w="1"/><text x="98.7180%" y="799.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.05%)</title><rect x="98.4680%" y="773" width="0.0528%" height="15" fill="rgb(247,14,11)" fg:x="1864" fg:w="1"/><text x="98.7180%" y="783.50"></text></g><g><title>maelstrom-txn`core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.05%)</title><rect x="98.4680%" y="757" width="0.0528%" height="15" fill="rgb(206,149,34)" fg:x="1864" fg:w="1"/><text x="98.7180%" y="767.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_string (20 samples, 1.06%)</title><rect x="97.5700%" y="1013" width="1.0565%" height="15" fill="rgb(227,228,4)" fg:x="1847" fg:w="20"/><text x="97.8200%" y="1023.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_vec (20 samples, 1.06%)</title><rect x="97.5700%" y="997" width="1.0565%" height="15" fill="rgb(238,218,28)" fg:x="1847" fg:w="20"/><text x="97.8200%" y="1007.50"></text></g><g><title>maelstrom-txn`serde_json::ser::to_writer (18 samples, 0.95%)</title><rect x="97.6756%" y="981" width="0.9509%" height="15" fill="rgb(252,86,40)" fg:x="1849" fg:w="18"/><text x="97.9256%" y="991.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::ser::Serialize for maelstrom_node::messages::Message&gt;::serialize (18 samples, 0.95%)</title><rect x="97.6756%" y="965" width="0.9509%" height="15" fill="rgb(251,225,11)" fg:x="1849" fg:w="18"/><text x="97.9256%" y="975.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 0.90%)</title><rect x="97.7285%" y="949" width="0.8980%" height="15" fill="rgb(206,46,49)" fg:x="1850" fg:w="17"/><text x="97.9785%" y="959.50"></text></g><g><title>maelstrom-txn`serde::ser::SerializeMap::serialize_entry (17 samples, 0.90%)</title><rect x="97.7285%" y="933" width="0.8980%" height="15" fill="rgb(245,128,24)" fg:x="1850" fg:w="17"/><text x="97.9785%" y="943.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 0.79%)</title><rect x="97.8341%" y="917" width="0.7924%" height="15" fill="rgb(219,177,34)" fg:x="1852" fg:w="15"/><text x="98.0841%" y="927.50"></text></g><g><title>maelstrom-txn`serde::ser::impls::_&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (2 samples, 0.11%)</title><rect x="98.5209%" y="901" width="0.1057%" height="15" fill="rgb(218,60,48)" fg:x="1865" fg:w="2"/><text x="98.7709%" y="911.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.11%)</title><rect x="98.5209%" y="885" width="0.1057%" height="15" fill="rgb(221,11,5)" fg:x="1865" fg:w="2"/><text x="98.7709%" y="895.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str (2 samples, 0.11%)</title><rect x="98.5209%" y="869" width="0.1057%" height="15" fill="rgb(220,148,13)" fg:x="1865" fg:w="2"/><text x="98.7709%" y="879.50"></text></g><g><title>maelstrom-txn`serde_json::ser::format_escaped_str_contents (2 samples, 0.11%)</title><rect x="98.5209%" y="853" width="0.1057%" height="15" fill="rgb(210,16,3)" fg:x="1865" fg:w="2"/><text x="98.7709%" y="863.50"></text></g><g><title>maelstrom-txn`serde_json::ser::Formatter::write_string_fragment (1 samples, 0.05%)</title><rect x="98.5737%" y="837" width="0.0528%" height="15" fill="rgb(236,80,2)" fg:x="1866" fg:w="1"/><text x="98.8237%" y="847.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="98.5737%" y="821" width="0.0528%" height="15" fill="rgb(239,129,19)" fg:x="1866" fg:w="1"/><text x="98.8237%" y="831.50"></text></g><g><title>maelstrom-txn`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="98.5737%" y="805" width="0.0528%" height="15" fill="rgb(220,106,35)" fg:x="1866" fg:w="1"/><text x="98.8237%" y="815.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="98.5737%" y="789" width="0.0528%" height="15" fill="rgb(252,139,45)" fg:x="1866" fg:w="1"/><text x="98.8237%" y="799.50"></text></g><g><title>maelstrom-txn`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="98.5737%" y="773" width="0.0528%" height="15" fill="rgb(229,8,36)" fg:x="1866" fg:w="1"/><text x="98.8237%" y="783.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="98.5737%" y="757" width="0.0528%" height="15" fill="rgb(230,126,33)" fg:x="1866" fg:w="1"/><text x="98.8237%" y="767.50"></text></g><g><title>maelstrom-txn`core::intrinsics::copy_nonoverlapping::precondition_check (1 samples, 0.05%)</title><rect x="98.5737%" y="741" width="0.0528%" height="15" fill="rgb(239,140,21)" fg:x="1866" fg:w="1"/><text x="98.8237%" y="751.50"></text></g><g><title>maelstrom-txn`core::ub_checks::is_nonoverlapping::runtime (1 samples, 0.05%)</title><rect x="98.5737%" y="725" width="0.0528%" height="15" fill="rgb(254,104,9)" fg:x="1866" fg:w="1"/><text x="98.8237%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.05%)</title><rect x="98.6265%" y="965" width="0.0528%" height="15" fill="rgb(239,52,14)" fg:x="1867" fg:w="1"/><text x="98.8765%" y="975.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.05%)</title><rect x="98.6265%" y="949" width="0.0528%" height="15" fill="rgb(208,227,44)" fg:x="1867" fg:w="1"/><text x="98.8765%" y="959.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.05%)</title><rect x="98.6793%" y="949" width="0.0528%" height="15" fill="rgb(246,18,19)" fg:x="1868" fg:w="1"/><text x="98.9293%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`write (4 samples, 0.21%)</title><rect x="98.7322%" y="933" width="0.2113%" height="15" fill="rgb(235,228,25)" fg:x="1869" fg:w="4"/><text x="98.9822%" y="943.50"></text></g><g><title>maelstrom-txn`maelstrom_node::node::Node::send (28 samples, 1.48%)</title><rect x="97.5172%" y="1029" width="1.4791%" height="15" fill="rgb(240,156,20)" fg:x="1846" fg:w="28"/><text x="97.7672%" y="1039.50"></text></g><g><title>maelstrom-txn`std::io::stdio::_print (7 samples, 0.37%)</title><rect x="98.6265%" y="1013" width="0.3698%" height="15" fill="rgb(224,8,20)" fg:x="1867" fg:w="7"/><text x="98.8765%" y="1023.50"></text></g><g><title>maelstrom-txn`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (7 samples, 0.37%)</title><rect x="98.6265%" y="997" width="0.3698%" height="15" fill="rgb(214,12,52)" fg:x="1867" fg:w="7"/><text x="98.8765%" y="1007.50"></text></g><g><title>maelstrom-txn`core::fmt::write (7 samples, 0.37%)</title><rect x="98.6265%" y="981" width="0.3698%" height="15" fill="rgb(211,220,47)" fg:x="1867" fg:w="7"/><text x="98.8765%" y="991.50"></text></g><g><title>maelstrom-txn`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (6 samples, 0.32%)</title><rect x="98.6793%" y="965" width="0.3170%" height="15" fill="rgb(250,173,5)" fg:x="1868" fg:w="6"/><text x="98.9293%" y="975.50"></text></g><g><title>maelstrom-txn`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (5 samples, 0.26%)</title><rect x="98.7322%" y="949" width="0.2641%" height="15" fill="rgb(250,125,52)" fg:x="1869" fg:w="5"/><text x="98.9822%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.05%)</title><rect x="98.9435%" y="933" width="0.0528%" height="15" fill="rgb(209,133,18)" fg:x="1873" fg:w="1"/><text x="99.1935%" y="943.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_key (1 samples, 0.05%)</title><rect x="98.9963%" y="949" width="0.0528%" height="15" fill="rgb(216,173,22)" fg:x="1874" fg:w="1"/><text x="99.2463%" y="959.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.05%)</title><rect x="98.9963%" y="933" width="0.0528%" height="15" fill="rgb(205,3,22)" fg:x="1874" fg:w="1"/><text x="99.2463%" y="943.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.05%)</title><rect x="98.9963%" y="917" width="0.0528%" height="15" fill="rgb(248,22,20)" fg:x="1874" fg:w="1"/><text x="99.2463%" y="927.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.05%)</title><rect x="98.9963%" y="901" width="0.0528%" height="15" fill="rgb(233,6,29)" fg:x="1874" fg:w="1"/><text x="99.2463%" y="911.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.05%)</title><rect x="98.9963%" y="885" width="0.0528%" height="15" fill="rgb(240,22,54)" fg:x="1874" fg:w="1"/><text x="99.2463%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.05%)</title><rect x="98.9963%" y="869" width="0.0528%" height="15" fill="rgb(231,133,32)" fg:x="1874" fg:w="1"/><text x="99.2463%" y="879.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.05%)</title><rect x="98.9963%" y="853" width="0.0528%" height="15" fill="rgb(248,193,4)" fg:x="1874" fg:w="1"/><text x="99.2463%" y="863.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::parse_str_bytes (1 samples, 0.05%)</title><rect x="98.9963%" y="837" width="0.0528%" height="15" fill="rgb(211,178,46)" fg:x="1874" fg:w="1"/><text x="99.2463%" y="847.50"></text></g><g><title>maelstrom-txn`serde_json::read::SliceRead::skip_to_escape (1 samples, 0.05%)</title><rect x="98.9963%" y="821" width="0.0528%" height="15" fill="rgb(224,5,42)" fg:x="1874" fg:w="1"/><text x="99.2463%" y="831.50"></text></g><g><title>maelstrom-txn`core::slice::_&lt;impl [T]&gt;::chunks_exact (1 samples, 0.05%)</title><rect x="98.9963%" y="805" width="0.0528%" height="15" fill="rgb(239,176,25)" fg:x="1874" fg:w="1"/><text x="99.2463%" y="815.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.05%)</title><rect x="99.1020%" y="789" width="0.0528%" height="15" fill="rgb(245,187,50)" fg:x="1876" fg:w="1"/><text x="99.3520%" y="799.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.05%)</title><rect x="99.1020%" y="773" width="0.0528%" height="15" fill="rgb(248,24,15)" fg:x="1876" fg:w="1"/><text x="99.3520%" y="783.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1 samples, 0.05%)</title><rect x="99.1020%" y="757" width="0.0528%" height="15" fill="rgb(205,166,13)" fg:x="1876" fg:w="1"/><text x="99.3520%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::TaggedContentVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_map (2 samples, 0.11%)</title><rect x="99.1020%" y="805" width="0.1057%" height="15" fill="rgb(208,114,23)" fg:x="1876" fg:w="2"/><text x="99.3520%" y="815.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (1 samples, 0.05%)</title><rect x="99.1548%" y="789" width="0.0528%" height="15" fill="rgb(239,127,18)" fg:x="1877" fg:w="1"/><text x="99.4048%" y="799.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapAccess&lt;E&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.05%)</title><rect x="99.1548%" y="773" width="0.0528%" height="15" fill="rgb(219,154,28)" fg:x="1877" fg:w="1"/><text x="99.4048%" y="783.50"></text></g><g><title>maelstrom-txn`core::option::Option&lt;T&gt;::is_some (1 samples, 0.05%)</title><rect x="99.2076%" y="805" width="0.0528%" height="15" fill="rgb(225,157,23)" fg:x="1878" fg:w="1"/><text x="99.4576%" y="815.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_map (4 samples, 0.21%)</title><rect x="99.1020%" y="821" width="0.2113%" height="15" fill="rgb(219,8,6)" fg:x="1876" fg:w="4"/><text x="99.3520%" y="831.50"></text></g><g><title>maelstrom-txn`core::slice::raw::from_raw_parts::precondition_check (1 samples, 0.05%)</title><rect x="99.2604%" y="805" width="0.0528%" height="15" fill="rgb(212,47,6)" fg:x="1879" fg:w="1"/><text x="99.5104%" y="815.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::FlatMapDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.26%)</title><rect x="99.1020%" y="837" width="0.2641%" height="15" fill="rgb(224,190,4)" fg:x="1876" fg:w="5"/><text x="99.3520%" y="847.50"></text></g><g><title>maelstrom-txn`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.05%)</title><rect x="99.3133%" y="821" width="0.0528%" height="15" fill="rgb(239,183,29)" fg:x="1880" fg:w="1"/><text x="99.5633%" y="831.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;core::result::Result&lt;maelstrom_node::messages::QueryValue,serde_json::error::Error&gt;&gt; (1 samples, 0.05%)</title><rect x="99.3661%" y="421" width="0.0528%" height="15" fill="rgb(213,57,7)" fg:x="1881" fg:w="1"/><text x="99.6161%" y="431.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;serde_json::error::Error&gt; (1 samples, 0.05%)</title><rect x="99.3661%" y="405" width="0.0528%" height="15" fill="rgb(216,148,1)" fg:x="1881" fg:w="1"/><text x="99.6161%" y="415.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;serde_json::error::ErrorImpl&gt;&gt; (1 samples, 0.05%)</title><rect x="99.3661%" y="389" width="0.0528%" height="15" fill="rgb(236,182,29)" fg:x="1881" fg:w="1"/><text x="99.6161%" y="399.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;serde_json::error::ErrorImpl&gt; (1 samples, 0.05%)</title><rect x="99.3661%" y="373" width="0.0528%" height="15" fill="rgb(244,120,48)" fg:x="1881" fg:w="1"/><text x="99.6161%" y="383.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;serde_json::error::ErrorCode&gt; (1 samples, 0.05%)</title><rect x="99.3661%" y="357" width="0.0528%" height="15" fill="rgb(206,71,34)" fg:x="1881" fg:w="1"/><text x="99.6161%" y="367.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (1 samples, 0.05%)</title><rect x="99.3661%" y="341" width="0.0528%" height="15" fill="rgb(242,32,6)" fg:x="1881" fg:w="1"/><text x="99.6161%" y="351.50"></text></g><g><title>maelstrom-txn`&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="99.3661%" y="325" width="0.0528%" height="15" fill="rgb(241,35,3)" fg:x="1881" fg:w="1"/><text x="99.6161%" y="335.50"></text></g><g><title>maelstrom-txn`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="99.3661%" y="309" width="0.0528%" height="15" fill="rgb(222,62,19)" fg:x="1881" fg:w="1"/><text x="99.6161%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.05%)</title><rect x="99.3661%" y="293" width="0.0528%" height="15" fill="rgb(223,110,41)" fg:x="1881" fg:w="1"/><text x="99.6161%" y="303.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::QueryValue&gt;::deserialize (2 samples, 0.11%)</title><rect x="99.3661%" y="437" width="0.1057%" height="15" fill="rgb(208,224,4)" fg:x="1881" fg:w="2"/><text x="99.6161%" y="447.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1 samples, 0.05%)</title><rect x="99.4189%" y="421" width="0.0528%" height="15" fill="rgb(241,137,19)" fg:x="1882" fg:w="1"/><text x="99.6689%" y="431.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_option (1 samples, 0.05%)</title><rect x="99.4189%" y="405" width="0.0528%" height="15" fill="rgb(244,24,17)" fg:x="1882" fg:w="1"/><text x="99.6689%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (1 samples, 0.05%)</title><rect x="99.4189%" y="389" width="0.0528%" height="15" fill="rgb(245,178,49)" fg:x="1882" fg:w="1"/><text x="99.6689%" y="399.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (1 samples, 0.05%)</title><rect x="99.4189%" y="373" width="0.0528%" height="15" fill="rgb(219,160,38)" fg:x="1882" fg:w="1"/><text x="99.6689%" y="383.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.05%)</title><rect x="99.4189%" y="357" width="0.0528%" height="15" fill="rgb(228,137,14)" fg:x="1882" fg:w="1"/><text x="99.6689%" y="367.50"></text></g><g><title>maelstrom-txn`serde::__private::de::content::ContentRefDeserializer&lt;E&gt;::invalid_type (1 samples, 0.05%)</title><rect x="99.4189%" y="341" width="0.0528%" height="15" fill="rgb(237,134,11)" fg:x="1882" fg:w="1"/><text x="99.6689%" y="351.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.05%)</title><rect x="99.4189%" y="325" width="0.0528%" height="15" fill="rgb(211,126,44)" fg:x="1882" fg:w="1"/><text x="99.6689%" y="335.50"></text></g><g><title>maelstrom-txn`core::fmt::Arguments::new_v1 (1 samples, 0.05%)</title><rect x="99.4189%" y="309" width="0.0528%" height="15" fill="rgb(226,171,33)" fg:x="1882" fg:w="1"/><text x="99.6689%" y="319.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::SeqAccess&gt;::next_element (3 samples, 0.16%)</title><rect x="99.3661%" y="645" width="0.1585%" height="15" fill="rgb(253,99,13)" fg:x="1881" fg:w="3"/><text x="99.6161%" y="655.50"></text></g><g><title>maelstrom-txn`serde::de::SeqAccess::next_element (3 samples, 0.16%)</title><rect x="99.3661%" y="629" width="0.1585%" height="15" fill="rgb(244,48,7)" fg:x="1881" fg:w="3"/><text x="99.6161%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::value::SeqDeserializer&lt;I,E&gt; as serde::de::SeqAccess&gt;::next_element_seed (3 samples, 0.16%)</title><rect x="99.3661%" y="613" width="0.1585%" height="15" fill="rgb(244,217,54)" fg:x="1881" fg:w="3"/><text x="99.6161%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.16%)</title><rect x="99.3661%" y="597" width="0.1585%" height="15" fill="rgb(224,15,18)" fg:x="1881" fg:w="3"/><text x="99.6161%" y="607.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::Query&gt;::deserialize (3 samples, 0.16%)</title><rect x="99.3661%" y="581" width="0.1585%" height="15" fill="rgb(244,99,12)" fg:x="1881" fg:w="3"/><text x="99.6161%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_tuple_struct (3 samples, 0.16%)</title><rect x="99.3661%" y="565" width="0.1585%" height="15" fill="rgb(233,226,8)" fg:x="1881" fg:w="3"/><text x="99.6161%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_seq (3 samples, 0.16%)</title><rect x="99.3661%" y="549" width="0.1585%" height="15" fill="rgb(229,211,3)" fg:x="1881" fg:w="3"/><text x="99.6161%" y="559.50"></text></g><g><title>maelstrom-txn`serde::__private::de::content::visit_content_seq (3 samples, 0.16%)</title><rect x="99.3661%" y="533" width="0.1585%" height="15" fill="rgb(216,140,21)" fg:x="1881" fg:w="3"/><text x="99.6161%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Query&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (3 samples, 0.16%)</title><rect x="99.3661%" y="517" width="0.1585%" height="15" fill="rgb(234,122,30)" fg:x="1881" fg:w="3"/><text x="99.6161%" y="527.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::SeqAccess&gt;::next_element (3 samples, 0.16%)</title><rect x="99.3661%" y="501" width="0.1585%" height="15" fill="rgb(236,25,46)" fg:x="1881" fg:w="3"/><text x="99.6161%" y="511.50"></text></g><g><title>maelstrom-txn`serde::de::SeqAccess::next_element (3 samples, 0.16%)</title><rect x="99.3661%" y="485" width="0.1585%" height="15" fill="rgb(217,52,54)" fg:x="1881" fg:w="3"/><text x="99.6161%" y="495.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::value::SeqDeserializer&lt;I,E&gt; as serde::de::SeqAccess&gt;::next_element_seed (3 samples, 0.16%)</title><rect x="99.3661%" y="469" width="0.1585%" height="15" fill="rgb(222,29,26)" fg:x="1881" fg:w="3"/><text x="99.6161%" y="479.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.16%)</title><rect x="99.3661%" y="453" width="0.1585%" height="15" fill="rgb(216,177,29)" fg:x="1881" fg:w="3"/><text x="99.6161%" y="463.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.05%)</title><rect x="99.4717%" y="437" width="0.0528%" height="15" fill="rgb(247,136,51)" fg:x="1883" fg:w="1"/><text x="99.7217%" y="447.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.05%)</title><rect x="99.4717%" y="421" width="0.0528%" height="15" fill="rgb(231,47,47)" fg:x="1883" fg:w="1"/><text x="99.7217%" y="431.50"></text></g><g><title>maelstrom-txn`serde::de::Visitor::visit_borrowed_str (1 samples, 0.05%)</title><rect x="99.4717%" y="405" width="0.0528%" height="15" fill="rgb(211,192,36)" fg:x="1883" fg:w="1"/><text x="99.7217%" y="415.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.05%)</title><rect x="99.4717%" y="389" width="0.0528%" height="15" fill="rgb(229,156,32)" fg:x="1883" fg:w="1"/><text x="99.7217%" y="399.50"></text></g><g><title>maelstrom-txn`alloc::str::_&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.05%)</title><rect x="99.4717%" y="373" width="0.0528%" height="15" fill="rgb(248,213,20)" fg:x="1883" fg:w="1"/><text x="99.7217%" y="383.50"></text></g><g><title>maelstrom-txn`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.05%)</title><rect x="99.4717%" y="357" width="0.0528%" height="15" fill="rgb(217,64,7)" fg:x="1883" fg:w="1"/><text x="99.7217%" y="367.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="99.4717%" y="341" width="0.0528%" height="15" fill="rgb(232,142,8)" fg:x="1883" fg:w="1"/><text x="99.7217%" y="351.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1 samples, 0.05%)</title><rect x="99.4717%" y="325" width="0.0528%" height="15" fill="rgb(224,92,44)" fg:x="1883" fg:w="1"/><text x="99.7217%" y="335.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::TxnRequestExtra&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.21%)</title><rect x="99.3661%" y="789" width="0.2113%" height="15" fill="rgb(214,169,17)" fg:x="1881" fg:w="4"/><text x="99.6161%" y="799.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut A as serde::de::MapAccess&gt;::next_value (4 samples, 0.21%)</title><rect x="99.3661%" y="773" width="0.2113%" height="15" fill="rgb(210,59,37)" fg:x="1881" fg:w="4"/><text x="99.6161%" y="783.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (4 samples, 0.21%)</title><rect x="99.3661%" y="757" width="0.2113%" height="15" fill="rgb(214,116,48)" fg:x="1881" fg:w="4"/><text x="99.6161%" y="767.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.21%)</title><rect x="99.3661%" y="741" width="0.2113%" height="15" fill="rgb(244,191,6)" fg:x="1881" fg:w="4"/><text x="99.6161%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.21%)</title><rect x="99.3661%" y="725" width="0.2113%" height="15" fill="rgb(241,50,52)" fg:x="1881" fg:w="4"/><text x="99.6161%" y="735.50"></text></g><g><title>maelstrom-txn`serde::de::impls::_&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (4 samples, 0.21%)</title><rect x="99.3661%" y="709" width="0.2113%" height="15" fill="rgb(236,75,39)" fg:x="1881" fg:w="4"/><text x="99.6161%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_seq (4 samples, 0.21%)</title><rect x="99.3661%" y="693" width="0.2113%" height="15" fill="rgb(236,99,0)" fg:x="1881" fg:w="4"/><text x="99.6161%" y="703.50"></text></g><g><title>maelstrom-txn`serde::__private::de::content::visit_content_seq (4 samples, 0.21%)</title><rect x="99.3661%" y="677" width="0.2113%" height="15" fill="rgb(207,202,15)" fg:x="1881" fg:w="4"/><text x="99.6161%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4 samples, 0.21%)</title><rect x="99.3661%" y="661" width="0.2113%" height="15" fill="rgb(233,207,14)" fg:x="1881" fg:w="4"/><text x="99.6161%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;serde::de::value::SeqDeserializer&lt;I,E&gt; as serde::de::SeqAccess&gt;::size_hint (1 samples, 0.05%)</title><rect x="99.5246%" y="645" width="0.0528%" height="15" fill="rgb(226,27,51)" fg:x="1884" fg:w="1"/><text x="99.7746%" y="655.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageExtra&gt;::deserialize (11 samples, 0.58%)</title><rect x="99.0491%" y="853" width="0.5811%" height="15" fill="rgb(206,104,42)" fg:x="1875" fg:w="11"/><text x="99.2991%" y="863.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::TxnRequestExtra&gt;::deserialize (5 samples, 0.26%)</title><rect x="99.3661%" y="837" width="0.2641%" height="15" fill="rgb(212,225,4)" fg:x="1881" fg:w="5"/><text x="99.6161%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_struct (5 samples, 0.26%)</title><rect x="99.3661%" y="821" width="0.2641%" height="15" fill="rgb(233,96,42)" fg:x="1881" fg:w="5"/><text x="99.6161%" y="831.50"></text></g><g><title>maelstrom-txn`serde::__private::de::content::visit_content_map (5 samples, 0.26%)</title><rect x="99.3661%" y="805" width="0.2641%" height="15" fill="rgb(229,21,32)" fg:x="1881" fg:w="5"/><text x="99.6161%" y="815.50"></text></g><g><title>maelstrom-txn`serde::de::value::MapDeserializer&lt;I,E&gt;::end (1 samples, 0.05%)</title><rect x="99.5774%" y="789" width="0.0528%" height="15" fill="rgb(226,216,24)" fg:x="1885" fg:w="1"/><text x="99.8274%" y="799.50"></text></g><g><title>maelstrom-txn`&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.05%)</title><rect x="99.5774%" y="773" width="0.0528%" height="15" fill="rgb(221,163,17)" fg:x="1885" fg:w="1"/><text x="99.8274%" y="783.50"></text></g><g><title>maelstrom-txn`core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(serde::__private::de::content::Content,serde::__private::de::content::Content)&gt;&gt; (1 samples, 0.05%)</title><rect x="99.5774%" y="757" width="0.0528%" height="15" fill="rgb(216,216,42)" fg:x="1885" fg:w="1"/><text x="99.8274%" y="767.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_key (1 samples, 0.05%)</title><rect x="99.6302%" y="853" width="0.0528%" height="15" fill="rgb(240,118,7)" fg:x="1886" fg:w="1"/><text x="99.8802%" y="863.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.05%)</title><rect x="99.6302%" y="837" width="0.0528%" height="15" fill="rgb(221,67,37)" fg:x="1886" fg:w="1"/><text x="99.8802%" y="847.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.05%)</title><rect x="99.6302%" y="821" width="0.0528%" height="15" fill="rgb(241,32,44)" fg:x="1886" fg:w="1"/><text x="99.8802%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.05%)</title><rect x="99.6302%" y="805" width="0.0528%" height="15" fill="rgb(235,204,43)" fg:x="1886" fg:w="1"/><text x="99.8802%" y="815.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.05%)</title><rect x="99.6302%" y="789" width="0.0528%" height="15" fill="rgb(213,116,10)" fg:x="1886" fg:w="1"/><text x="99.8802%" y="799.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.05%)</title><rect x="99.6302%" y="773" width="0.0528%" height="15" fill="rgb(239,15,48)" fg:x="1886" fg:w="1"/><text x="99.8802%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_borrowed_str (1 samples, 0.05%)</title><rect x="99.6302%" y="757" width="0.0528%" height="15" fill="rgb(207,123,36)" fg:x="1886" fg:w="1"/><text x="99.8802%" y="767.50"></text></g><g><title>maelstrom-txn`alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.05%)</title><rect x="99.6830%" y="629" width="0.0528%" height="15" fill="rgb(209,103,30)" fg:x="1887" fg:w="1"/><text x="99.9330%" y="639.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="99.6830%" y="613" width="0.0528%" height="15" fill="rgb(238,100,19)" fg:x="1887" fg:w="1"/><text x="99.9330%" y="623.50"></text></g><g><title>maelstrom-txn`alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1 samples, 0.05%)</title><rect x="99.6830%" y="597" width="0.0528%" height="15" fill="rgb(244,30,14)" fg:x="1887" fg:w="1"/><text x="99.9330%" y="607.50"></text></g><g><title>maelstrom-txn`core::alloc::layout::Layout::repeat (1 samples, 0.05%)</title><rect x="99.6830%" y="581" width="0.0528%" height="15" fill="rgb(249,174,6)" fg:x="1887" fg:w="1"/><text x="99.9330%" y="591.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.11%)</title><rect x="99.6830%" y="821" width="0.1057%" height="15" fill="rgb(235,213,41)" fg:x="1887" fg:w="2"/><text x="99.9330%" y="831.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (2 samples, 0.11%)</title><rect x="99.6830%" y="805" width="0.1057%" height="15" fill="rgb(213,118,6)" fg:x="1887" fg:w="2"/><text x="99.9330%" y="815.50"></text></g><g><title>maelstrom-txn`serde::de::Deserializer::__deserialize_content (2 samples, 0.11%)</title><rect x="99.6830%" y="789" width="0.1057%" height="15" fill="rgb(235,44,51)" fg:x="1887" fg:w="2"/><text x="99.9330%" y="799.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.11%)</title><rect x="99.6830%" y="773" width="0.1057%" height="15" fill="rgb(217,9,53)" fg:x="1887" fg:w="2"/><text x="99.9330%" y="783.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.11%)</title><rect x="99.6830%" y="757" width="0.1057%" height="15" fill="rgb(237,172,34)" fg:x="1887" fg:w="2"/><text x="99.9330%" y="767.50"></text></g><g><title>maelstrom-txn`serde::de::SeqAccess::next_element (2 samples, 0.11%)</title><rect x="99.6830%" y="741" width="0.1057%" height="15" fill="rgb(206,206,11)" fg:x="1887" fg:w="2"/><text x="99.9330%" y="751.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2 samples, 0.11%)</title><rect x="99.6830%" y="725" width="0.1057%" height="15" fill="rgb(214,149,29)" fg:x="1887" fg:w="2"/><text x="99.9330%" y="735.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.11%)</title><rect x="99.6830%" y="709" width="0.1057%" height="15" fill="rgb(208,123,3)" fg:x="1887" fg:w="2"/><text x="99.9330%" y="719.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (2 samples, 0.11%)</title><rect x="99.6830%" y="693" width="0.1057%" height="15" fill="rgb(229,126,4)" fg:x="1887" fg:w="2"/><text x="99.9330%" y="703.50"></text></g><g><title>maelstrom-txn`serde::de::Deserializer::__deserialize_content (2 samples, 0.11%)</title><rect x="99.6830%" y="677" width="0.1057%" height="15" fill="rgb(222,92,36)" fg:x="1887" fg:w="2"/><text x="99.9330%" y="687.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.11%)</title><rect x="99.6830%" y="661" width="0.1057%" height="15" fill="rgb(216,39,41)" fg:x="1887" fg:w="2"/><text x="99.9330%" y="671.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.11%)</title><rect x="99.6830%" y="645" width="0.1057%" height="15" fill="rgb(253,127,28)" fg:x="1887" fg:w="2"/><text x="99.9330%" y="655.50"></text></g><g><title>maelstrom-txn`serde::de::SeqAccess::next_element (1 samples, 0.05%)</title><rect x="99.7359%" y="629" width="0.0528%" height="15" fill="rgb(249,152,51)" fg:x="1888" fg:w="1"/><text x="99.9859%" y="639.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.05%)</title><rect x="99.7359%" y="613" width="0.0528%" height="15" fill="rgb(209,123,42)" fg:x="1888" fg:w="1"/><text x="99.9859%" y="623.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.05%)</title><rect x="99.7359%" y="597" width="0.0528%" height="15" fill="rgb(241,118,22)" fg:x="1888" fg:w="1"/><text x="99.9859%" y="607.50"></text></g><g><title>maelstrom-txn`&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (1 samples, 0.05%)</title><rect x="99.7359%" y="581" width="0.0528%" height="15" fill="rgb(208,25,7)" fg:x="1888" fg:w="1"/><text x="99.9859%" y="591.50"></text></g><g><title>maelstrom-txn`serde::de::Deserializer::__deserialize_content (1 samples, 0.05%)</title><rect x="99.7359%" y="565" width="0.0528%" height="15" fill="rgb(243,144,39)" fg:x="1888" fg:w="1"/><text x="99.9859%" y="575.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.05%)</title><rect x="99.7359%" y="549" width="0.0528%" height="15" fill="rgb(250,50,5)" fg:x="1888" fg:w="1"/><text x="99.9859%" y="559.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::parse_ident (1 samples, 0.05%)</title><rect x="99.7359%" y="533" width="0.0528%" height="15" fill="rgb(207,67,11)" fg:x="1888" fg:w="1"/><text x="99.9859%" y="543.50"></text></g><g><title>maelstrom-txn`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15 samples, 0.79%)</title><rect x="99.0491%" y="917" width="0.7924%" height="15" fill="rgb(245,204,40)" fg:x="1875" fg:w="15"/><text x="99.2991%" y="927.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize (15 samples, 0.79%)</title><rect x="99.0491%" y="901" width="0.7924%" height="15" fill="rgb(238,228,24)" fg:x="1875" fg:w="15"/><text x="99.2991%" y="911.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (15 samples, 0.79%)</title><rect x="99.0491%" y="885" width="0.7924%" height="15" fill="rgb(217,116,22)" fg:x="1875" fg:w="15"/><text x="99.2991%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::MessageBody&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (15 samples, 0.79%)</title><rect x="99.0491%" y="869" width="0.7924%" height="15" fill="rgb(234,98,12)" fg:x="1875" fg:w="15"/><text x="99.2991%" y="879.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (3 samples, 0.16%)</title><rect x="99.6830%" y="853" width="0.1585%" height="15" fill="rgb(242,170,50)" fg:x="1887" fg:w="3"/><text x="99.9330%" y="863.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.16%)</title><rect x="99.6830%" y="837" width="0.1585%" height="15" fill="rgb(235,7,5)" fg:x="1887" fg:w="3"/><text x="99.9330%" y="847.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::parse_object_colon (1 samples, 0.05%)</title><rect x="99.7887%" y="821" width="0.0528%" height="15" fill="rgb(241,114,28)" fg:x="1889" fg:w="1"/><text x="100.0387%" y="831.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1 samples, 0.05%)</title><rect x="99.7887%" y="805" width="0.0528%" height="15" fill="rgb(246,112,42)" fg:x="1889" fg:w="1"/><text x="100.0387%" y="815.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1 samples, 0.05%)</title><rect x="99.7887%" y="789" width="0.0528%" height="15" fill="rgb(248,228,14)" fg:x="1889" fg:w="1"/><text x="100.0387%" y="799.50"></text></g><g><title>maelstrom-txn`serde_json::de::from_str (17 samples, 0.90%)</title><rect x="98.9963%" y="1029" width="0.8980%" height="15" fill="rgb(208,133,18)" fg:x="1874" fg:w="17"/><text x="99.2463%" y="1039.50"></text></g><g><title>maelstrom-txn`serde_json::de::from_trait (17 samples, 0.90%)</title><rect x="98.9963%" y="1013" width="0.8980%" height="15" fill="rgb(207,35,49)" fg:x="1874" fg:w="17"/><text x="99.2463%" y="1023.50"></text></g><g><title>maelstrom-txn`maelstrom_node::messages::_::_&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize (17 samples, 0.90%)</title><rect x="98.9963%" y="997" width="0.8980%" height="15" fill="rgb(205,68,36)" fg:x="1874" fg:w="17"/><text x="99.2463%" y="1007.50"></text></g><g><title>maelstrom-txn`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (17 samples, 0.90%)</title><rect x="98.9963%" y="981" width="0.8980%" height="15" fill="rgb(245,62,40)" fg:x="1874" fg:w="17"/><text x="99.2463%" y="991.50"></text></g><g><title>maelstrom-txn`&lt;maelstrom_node::messages::_::&lt;impl serde::de::Deserialize for maelstrom_node::messages::Message&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (17 samples, 0.90%)</title><rect x="98.9963%" y="965" width="0.8980%" height="15" fill="rgb(228,27,24)" fg:x="1874" fg:w="17"/><text x="99.2463%" y="975.50"></text></g><g><title>maelstrom-txn`serde::de::MapAccess::next_value (16 samples, 0.85%)</title><rect x="99.0491%" y="949" width="0.8452%" height="15" fill="rgb(253,19,12)" fg:x="1875" fg:w="16"/><text x="99.2991%" y="959.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (16 samples, 0.85%)</title><rect x="99.0491%" y="933" width="0.8452%" height="15" fill="rgb(232,28,20)" fg:x="1875" fg:w="16"/><text x="99.2991%" y="943.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::parse_object_colon (1 samples, 0.05%)</title><rect x="99.8415%" y="917" width="0.0528%" height="15" fill="rgb(218,35,51)" fg:x="1890" fg:w="1"/><text x="100.0915%" y="927.50"></text></g><g><title>maelstrom-txn`serde_json::de::Deserializer&lt;R&gt;::eat_char (1 samples, 0.05%)</title><rect x="99.8415%" y="901" width="0.0528%" height="15" fill="rgb(212,90,40)" fg:x="1890" fg:w="1"/><text x="100.0915%" y="911.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::discard (1 samples, 0.05%)</title><rect x="99.8415%" y="885" width="0.0528%" height="15" fill="rgb(220,172,12)" fg:x="1890" fg:w="1"/><text x="100.0915%" y="895.50"></text></g><g><title>maelstrom-txn`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::discard (1 samples, 0.05%)</title><rect x="99.8415%" y="869" width="0.0528%" height="15" fill="rgb(226,159,20)" fg:x="1890" fg:w="1"/><text x="100.0915%" y="879.50"></text></g><g><title>dyld`start (1,892 samples, 99.95%)</title><rect x="0.0000%" y="1157" width="99.9472%" height="15" fill="rgb(234,205,16)" fg:x="0" fg:w="1892"/><text x="0.2500%" y="1167.50">dyld`start</text></g><g><title>maelstrom-txn`main (1,892 samples, 99.95%)</title><rect x="0.0000%" y="1141" width="99.9472%" height="15" fill="rgb(207,9,39)" fg:x="0" fg:w="1892"/><text x="0.2500%" y="1151.50">maelstrom-txn`main</text></g><g><title>maelstrom-txn`std::rt::lang_start (1,892 samples, 99.95%)</title><rect x="0.0000%" y="1125" width="99.9472%" height="15" fill="rgb(249,143,15)" fg:x="0" fg:w="1892"/><text x="0.2500%" y="1135.50">maelstrom-txn`std::rt::lang_start</text></g><g><title>maelstrom-txn`std::rt::lang_start_internal (1,892 samples, 99.95%)</title><rect x="0.0000%" y="1109" width="99.9472%" height="15" fill="rgb(253,133,29)" fg:x="0" fg:w="1892"/><text x="0.2500%" y="1119.50">maelstrom-txn`std::rt::lang_start_internal</text></g><g><title>maelstrom-txn`std::rt::lang_start::_{{closure}} (1,892 samples, 99.95%)</title><rect x="0.0000%" y="1093" width="99.9472%" height="15" fill="rgb(221,187,0)" fg:x="0" fg:w="1892"/><text x="0.2500%" y="1103.50">maelstrom-txn`std::rt::lang_start::_{{closure}}</text></g><g><title>maelstrom-txn`std::sys::backtrace::__rust_begin_short_backtrace (1,892 samples, 99.95%)</title><rect x="0.0000%" y="1077" width="99.9472%" height="15" fill="rgb(205,204,26)" fg:x="0" fg:w="1892"/><text x="0.2500%" y="1087.50">maelstrom-txn`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>maelstrom-txn`core::ops::function::FnOnce::call_once (1,892 samples, 99.95%)</title><rect x="0.0000%" y="1061" width="99.9472%" height="15" fill="rgb(224,68,54)" fg:x="0" fg:w="1892"/><text x="0.2500%" y="1071.50">maelstrom-txn`core::ops::function::FnOnce::call_once</text></g><g><title>maelstrom-txn`maelstrom_txn::main (1,892 samples, 99.95%)</title><rect x="0.0000%" y="1045" width="99.9472%" height="15" fill="rgb(209,67,4)" fg:x="0" fg:w="1892"/><text x="0.2500%" y="1055.50">maelstrom-txn`maelstrom_txn::main</text></g><g><title>maelstrom-txn`serde_json::de::from_trait (1 samples, 0.05%)</title><rect x="99.8943%" y="1029" width="0.0528%" height="15" fill="rgb(228,229,18)" fg:x="1891" fg:w="1"/><text x="100.1443%" y="1039.50"></text></g><g><title>all (1,893 samples, 100%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(231,89,13)" fg:x="0" fg:w="1893"/><text x="0.2500%" y="1183.50"></text></g><g><title>libsystem_kernel.dylib`read (1 samples, 0.05%)</title><rect x="99.9472%" y="1157" width="0.0528%" height="15" fill="rgb(210,182,18)" fg:x="1892" fg:w="1"/><text x="100.1972%" y="1167.50"></text></g></svg></svg>